{
  "hash": "4576b24ec76e438ce2d1a2fcbd78dd2d",
  "result": {
    "markdown": "---\ndate: 2023-11-14\nlesson: Stat6\nthema: Einführung in \"multivariate\" Methoden\nindex: 3\nformat:\n  html:\n    code-tools:\n      source: true\n---\n\n\n# Stat6: Lösung\n\n- Download dieses Lösungsscript via \"\\</\\>Code\" (oben rechts)\n- [Lösungstext als Download](Statistik_Loesungstext_6.1.pdf)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"datasets/statistik/Doubs.RData\")\n## Error in readChar(con, 5L, useBytes = TRUE): kann Verbindung nicht öffnen\nsummary(env)\n## Error in summary(env): Objekt 'env' nicht gefunden\nsummary(spe)\n## Error in summary(spe): Objekt 'spe' nicht gefunden\n\n# Die Dataframes env und spe enthalten die Umwelt- respective die Artdaten\n\nlibrary(\"vegan\")\n## Error in library(\"vegan\"): es gibt kein Paket namens 'vegan'\n```\n:::\n\n\nDie PCA wird im Package vegan mit dem Befehl rda ausgeführt, wobei in diesem scale = TRUE gesetzt werden muss, da die Umweltdaten mit ganz unterschiedlichen Einheiten und Wertebereichen daherkommen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenv.pca <- rda(env, scale = TRUE)\n## Error in rda(env, scale = TRUE): konnte Funktion \"rda\" nicht finden\nenv.pca\n## Error in eval(expr, envir, enclos): Objekt 'env.pca' nicht gefunden\n# In env.pca sieht man, dass es bei 11 Umweltvariablen logischerweise 11 orthogonale Principle Components gibt\n\nsummary(env.pca, axes = 0)\n## Error in summary(env.pca, axes = 0): Objekt 'env.pca' nicht gefunden\n# Hier sieht man auch die Übersetzung der Eigenvalues in erklärte Varianzen der einzelnen Principle Components\n\nsummary(env.pca)\n## Error in summary(env.pca): Objekt 'env.pca' nicht gefunden\n# Hier das ausführliche Summary mit den Art- und Umweltkorrelationen auf den ersten sechs Achsen\n\nscreeplot(env.pca, bstick = TRUE, npcs = length(env.pca$CA$eig))\n## Error in screeplot(env.pca, bstick = TRUE, npcs = length(env.pca$CA$eig)): Objekt 'env.pca' nicht gefunden\n# Visualisierung der Anteile erklärter Varianz, auch im Vergleich zu einem Broken-Stick-Modell\n```\n:::\n\n\n- Die Anteile fallen steil ab. Nur die ersten vier Achsen erklären jeweils mehr als 5 % (und zusammen über 90 %)\n- Das Broken-stick-Modell würde sogar nur die ersten beiden Achsen als relevant vorschlagen\n- Da die Relevanz für das Datenmuster in den Umweltdaten nicht notwendig die Relevanz für die Erklärung der Artenzahlen ist,    nehmen wir ins globale Modell grosszügig die ersten vier Achsen rein (PC1-PC4)\nDie Bedeutung der Achsen (benötigt man später für die Interpretation!) findet man in den “species scores” (da so, wie wir die PCA hier gerechnet haben, die Umweltdaten die Arten sind. Zusätzlich oder alternative kann man sich die ersten vier Achsen auch visualisieren, indem man PC2 vs. PC1 (ohne choices), PC3 vs. PC1 oder PC4 vs. PC1 plottet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2))\nbiplot(env.pca, scaling = 1)\n## Error in biplot(env.pca, scaling = 1): Objekt 'env.pca' nicht gefunden\nbiplot(env.pca, choices = c(1, 3), scaling = 1)\n## Error in biplot(env.pca, choices = c(1, 3), scaling = 1): Objekt 'env.pca' nicht gefunden\nbiplot(env.pca, choices = c(1, 4), scaling = 1)\n## Error in biplot(env.pca, choices = c(1, 4), scaling = 1): Objekt 'env.pca' nicht gefunden\n```\n:::\n\n\n- PC1 steht v.a. für Nitrat (positiv), Sauerstoff (negativ)\n- PC2 steht v.a. für pH (positiv)\n- PC3 steht v.a. für pH (positiv) und slo (negativ)\n- PC4 steht v.a. für pH (negativ) und slo (negativ)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Wir extrahieren nun die ersten vier PC-Scores aller Aufnahmeflächen\n\nscores <- scores(env.pca, c(1:4), display = c(\"sites\"))\n## Error in scores(env.pca, c(1:4), display = c(\"sites\")): konnte Funktion \"scores\" nicht finden\nscores\n## Error in eval(expr, envir, enclos): Objekt 'scores' nicht gefunden\n\n# Berechnung der Artenzahl mittels specnumber; Artenzahl und Scores werden zum Dataframe für die Regressionsanalyse hinzugefügt\ndoubs <- data.frame(env, scores, species_richness = specnumber(spe))\n## Error in data.frame(env, scores, species_richness = specnumber(spe)): Objekt 'env' nicht gefunden\ndoubs\n## Error in eval(expr, envir, enclos): Objekt 'doubs' nicht gefunden\nstr(doubs)\n## Error in str(doubs): Objekt 'doubs' nicht gefunden\n\n## Lösung mit lm (alternativ ginge Poisson-glm) und frequentist approach (alternativ ginge Multimodelinference mit AICc)\nlm.pc.0 <- lm(species_richness ~ PC1 + PC2 + PC3 + PC4, data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(lm.pc.0)\n## Error in summary(lm.pc.0): Objekt 'lm.pc.0' nicht gefunden\n\n# Modellvereinfachung: PC4 ist nicht signifikant und wird entfernt\nlm.pc.1 <- lm(species_richness ~ PC1 + PC2 + PC3, data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(lm.pc.1) # jetzt sind alle Achsen signifikant und werden in das minimal adäquate Modell aufgenommen\n## Error in summary(lm.pc.1): Objekt 'lm.pc.1' nicht gefunden\n\n# Modelldiagnostik/Modellvalidierung\npar(mfrow = c(2, 2))\nplot(lm.pc.1)\n## Error in plot(lm.pc.1): Objekt 'lm.pc.1' nicht gefunden\n```\n:::\n\n\nNicht besonders toll, ginge aber gerade noch. Da wir aber ohnehin Zähldaten haben, können wir es mit einem Poisson-GLM versuchen\n\n**Alternativ mit glm**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm.pc.1 <- glm(species_richness ~ PC1 + PC2 + PC3 + PC4, family = \"poisson\", data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(glm.pc.1)\n## Error in summary(glm.pc.1): Objekt 'glm.pc.1' nicht gefunden\nglm.pc.2 <- glm(species_richness ~ PC1 + PC2 + PC3, family = \"poisson\", data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(glm.pc.2)\n## Error in summary(glm.pc.2): Objekt 'glm.pc.2' nicht gefunden\npar(mfrow = c(2, 2))\nplot(glm.pc.2) # sieht nicht besser aus als LM, die Normalverteilung ist sogar schlechter\n## Error in plot(glm.pc.2): Objekt 'glm.pc.2' nicht gefunden\n```\n:::\n\n\nLM oder GLM sind für die Analyse möglich, Modellwahl nach Gusto. Man muss jetzt noch die Ergebnisse adäquat aus all den erzielten Outputs zusammenstellen (siehe Ergebnistext). In dieser Aufgabe haben wir ja die PC-Achsen als Alternative zur direkten Modellierung mit den originalen Umweltvariablen ausprobiert. Deshalb (war nicht Teil der Aufgabe), kommt hier noch eine Lösung, wie wir es bisher gemacht hätten.\n\n\n**Zum Vergleich die Modellierung mit den Originaldaten**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Korrelationen zwischen Prädiktoren\ncor <- cor(doubs[, 1:11])\ncor[abs(cor) < .7] <- 0\ncor\n```\n:::\n\n\nDie Korrelationsmatrix betrachtet man am besten in Excel.\nEs zeigt sich, dass es zwei grosse Gruppen von untereinander hochkorrelierten Variablen gibt: zum einen dfs-ele-dis-har-nit, zum anderen pho-nit-amm-oxy-bod, während slo und pH mit jeweils keiner anderen Variablen hochkorreliert sind. Insofern behalten wir eine aus der ersten Gruppe (ele), eine aus der zweiten Gruppe (pho) und die beiden «unabhängigen».\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Globalmodell (als hinreichend unabhängige Variablen werden ele, slo, pH und pho aufgenommen)\nlm.orig.1 <- lm(species_richness ~ ele + slo + pH + pho, data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(lm.orig.1)\n## Error in summary(lm.orig.1): Objekt 'lm.orig.1' nicht gefunden\n\n# Modellvereinfachung: slo als am wenigsten signifikante Variable gestrichen\nlm.orig.2 <- lm(species_richness ~ ele + pH + pho, data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(lm.orig.2)\n## Error in summary(lm.orig.2): Objekt 'lm.orig.2' nicht gefunden\n\n# Modellvereinfachung: pH ist immer noch nicht signifikant und wird gestrichen\nlm.orig.3 <- lm(species_richness ~ ele + pho, data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(lm.orig.3)\n## Error in summary(lm.orig.3): Objekt 'lm.orig.3' nicht gefunden\n\n# Modelldiagnostik\npar(mfrow = c(2, 2))\nplot(lm.orig.3) # nicht so gut, besonders die Bananenform in der linken obereren Abbildung\n## Error in plot(lm.orig.3): Objekt 'lm.orig.3' nicht gefunden\n\n# Nach Modellvereinfachung bleiben zwei signifikante Variablen, ele und pho.\n\n# Da das nicht so gut aussieht, versuchen wir es mit dem theoretisch angemesseneren Modell, einem Poisson-GLM.\n\n# Versuch mit glm\nglm.orig.1 <- glm(species_richness ~ ele + pho + pH + slo, family = \"poisson\", data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(glm.orig.1)\n## Error in summary(glm.orig.1): Objekt 'glm.orig.1' nicht gefunden\n\nglm.orig.2 <- glm(species_richness ~ ele + pho + slo, family = \"poisson\", data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(glm.orig.2)\n## Error in summary(glm.orig.2): Objekt 'glm.orig.2' nicht gefunden\n\nglm.orig.3 <- glm(species_richness ~ ele + pho, family = \"poisson\", data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(glm.orig.3)\n## Error in summary(glm.orig.3): Objekt 'glm.orig.3' nicht gefunden\nplot(glm.orig.3)\n## Error in plot(glm.orig.3): Objekt 'glm.orig.3' nicht gefunden\n\n# Das sieht deutlich besser aus als beim LM. Wir müssen aber noch prüfen, ob evtl. Overdispersion vorliegt.\n\nlibrary(\"AER\")\n## Error in library(\"AER\"): es gibt kein Paket namens 'AER'\ndispersiontest(glm.orig.3) # signifikante Überdispersion\n## Error in dispersiontest(glm.orig.3): konnte Funktion \"dispersiontest\" nicht finden\n\n# Ja, es gibt signifikante Overdispersion (obwohl der Dispersionparameter sogar unter 2 ist, also nicht extrem). Wir können nun entweder quasipoisson oder negativebinomial nehmen.\n\nglmq.orig.3 <- glm(species_richness ~ ele + pho, family = \"quasipoisson\", data = doubs)\n## Error in is.data.frame(data): Objekt 'doubs' nicht gefunden\nsummary(glmq.orig.3)\n## Error in summary(glmq.orig.3): Objekt 'glmq.orig.3' nicht gefunden\n\n# Parameterschätzung bleiben gleich, aber Signifikanzen sind niedriger als beim GLM ohne Overdispersion.\nplot(glmq.orig.3)\n## Error in plot(glmq.orig.3): Objekt 'glmq.orig.3' nicht gefunden\n```\n:::\n\n\nSieht gut aus, wir hätten hier also unser finales Modell.\n\nIm Vergleich der beiden Vorgehensweisen (PC-Achsen vs. Umweltdaten direkt) scheint in diesem Fall die direkte Modellierung der Umweltachsen informativer: Man kommt mit zwei Prädiktoren aus, die jeweils direkt für eine der Hauptvariablen stehen – Meereshöhe und Phosphor – zugleich aber jeweils eine grössere Gruppe von Variablen mit hohen Korrelationen inkludieren, im ersten Fall Variablen, die sich im Flusslauf von oben nach unten systematisch ändern, im zweiten Masse der Nährstoffbelastung des Gewässers. Bei der PCA-Lösung kamen drei signifikante Komponenten heraus, die allerdings nicht so leicht zu interpretieren sind. Dies insbesondere, weil in diesem Fall auf der Ebene PC2 vs. PC1 die Mehrzahl der Umweltparameter ungefähr in 45-Grad-Winkeln angeordnet sind. Im allgemeinen Fall kann aber die Nutzung von PC-Achsen durchaus eine gute Lösung sein.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}