{
  "hash": "da4fef943851b83404f2be6767935b3a",
  "result": {
    "markdown": "---\ndate: 2023-11-13\nlesson: Stat5\nthema: Von linearen Modellen zu GLMMs\nindex: 3\nformat:\n  html:\n    code-tools:\n      source: true\n---\n\n\n# Stat5: Lösung 1\n\n- Download dieses Lösungsscript via \"\\</\\>Code\" (oben rechts)\n- [Lösungstext als Download](Statistik_Loesung_5.1.pdf)\n\n## Musterlösung Aufgabe 5.1: Split-plot ANOVA\n\n### Übungsaufgabe \n\n**(hier so ausführlich formuliert, wie dies auch in der Klausur der Fall sein wird)**\n\n- Ladet den Datensatz splityield.csv. Dieser enthält Versuchsergebnisse eines\n  Experiments zum Ernteertrag (yield) einer Kulturpflanze in Abhängigkeit der drei\n  Faktoren Bewässerung (irrigated vs. control), Düngung (N, NP, P) und Aussaatdichten\n  (low, medium, high). Es gab vier ganze Felder (block), die zwei Hälften mit den beiden\n  Bewässerungstreatments (irrigation), diese wiederum drei Drittel für die drei\n  Saatdichten (density) und diese schliesslich je drei Drittel für die drei\n  Düngertreatments (fertilizer) hatten.\n- **Ermittelt das minimal adäquate statistische Modell, das den Ernteertrag in\n  Abhängigkeit von den angegebenen Faktoren beschreibt.**\n- Bitte erklärt und begründet die einzelnen Schritte, die ihr unternehmt, um zu diesem\n  Ergebnis zu kommen. Dazu erstellt bitte ein Word-Dokument, in das ihr Schritt für\n  Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, eure\n  Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere\n  Vorgehen dokumentieren.\n- Dieser Ablauf sollte insbesondere beinhalten:\n    - Überprüfen der Datenstruktur nach dem Einlesen, welches sind die abhängige(n)\n      und welches die unabängige(n) Variablen\n    - Explorative Datenanalyse, um zu sehen, ob evtl. Dateneingabefehler vorliegen oder\n      Datentransformationen vorgenommen werden sollten\n    - Auswahl und Begründung eines statistischen Verfahrens\n    - Bestimmung des vollständigen/maximalen Models\n    - Selektion des/der besten Models/Modelle\n    - Generieren aller Zahlen, Statistiken und Tabellen, die für eine wiss. _Ergebnisdarstellung benötigt werden_\n    - Formuliert abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten\n      Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit\n      (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100\n      Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen\n      Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\n    - **Abzugeben sind am Ende (a) Ein lauffähiges R-Skript; (b) begründeter Lösungsweg\n      (Kombination aus R-Code, R Output und dessen Interpretation) und (c) ausformulierter\n      Methoden- und Ergebnisteil (für eine wiss. Arbeit).**\n \n### Kommentierter Lösungsweg\n\n::: {.cell}\n\n```{.r .cell-code}\nsplityield <- read.delim(\"datasets/stat5-8/splityield.csv\", sep = \",\", stringsAsFactors = T)\n## Error in file(file, \"rt\"): kann Verbindung nicht öffnen\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Checken der eingelesenen Daten\nsplityield\n## Error in eval(expr, envir, enclos): Objekt 'splityield' nicht gefunden\n```\n:::\n\nMan sieht, dass das Design vollkommen balanciert ist, d.h. jede Kombination irrigation *\ndensity * fertilizer kommt genau 4x vor (in jedem der vier Blöcke A-D einmal).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(splityield)\n## Error in str(splityield): Objekt 'splityield' nicht gefunden\nsummary(splityield)\n## Error in summary(splityield): Objekt 'splityield' nicht gefunden\nsplityield$density <- ordered(splityield$density, levels = c(\"low\", \"medium\", \"high\"))\n## Error in factor(x, ..., ordered = TRUE): Objekt 'splityield' nicht gefunden\nsplityield$density\n## Error in eval(expr, envir, enclos): Objekt 'splityield' nicht gefunden\n```\n:::\n\nMan sieht, dass die Variable yield metrisch ist, während die vier anderen Variablen schon\nkorrekt als kategoriale Variablen (factors) kodiert sind\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explorative Datenanalyse (auf Normalverteilung, Varianzhomogenität)\nboxplot(yield~fertilizer, data = splityield)\n## Error in eval(m$data, parent.frame()): Objekt 'splityield' nicht gefunden\nboxplot(yield~irrigation, data = splityield)\n## Error in eval(m$data, parent.frame()): Objekt 'splityield' nicht gefunden\nboxplot(yield~density, data = splityield)\n## Error in eval(m$data, parent.frame()): Objekt 'splityield' nicht gefunden\nboxplot(yield~irrigation * density * fertilizer, data = splityield)\n## Error in eval(m$data, parent.frame()): Objekt 'splityield' nicht gefunden\n```\n:::\n\nDie Boxplots sind generell hinreichend symmetrisch, so dass man davon ausgehen kann, dass\nkeine problematische Abweichung von der Normalverteilung vorliegt. Die Varianzhomogenität\nsieht für den Gesamtboxplot sowie für fertilizer und density bestens aus, für irrigation und für\ndie 3-fach-Interaktion deuten sich aber gewisse Varianzheterogenitäten an, d. h. die Boxen\n(Interquartil-Spannen) sind deutlich unterschiedlich lang. Da das Design aber vollkommen\n„balanciert“ war, wie wir von oben wissen, sind selbst relativ stark divergierende Varianzen\nnicht besonders problematisch. Der Boxplot der Dreifachinteraktion zeigt zudem, dass\ngrössere Varianzen (~Boxen) mal bei kleinen, mal bei grossen Mittelwerten vorkommen,\nwomit wir bedenkenlos weitermachen können (Wenn die grossen Varianzen immer bei\ngrossen Mittelwerten aufgetreten wären, hätten wir eine log- oder Wurzeltransformation von\nyield in Betracht ziehen müssen).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(log10(yield) ~ irrigation * density * fertilizer, data = splityield) # bringt keine Verbesserung\n## Error in eval(m$data, parent.frame()): Objekt 'splityield' nicht gefunden\naov.1 <- aov(yield ~ irrigation * density * fertilizer + Error(block / irrigation / density), data = splityield)\n## Error in terms.formula(formula, \"Error\", data = data): Objekt 'splityield' nicht gefunden\n```\n:::\n\n\nDas schwierigste an der Analyse ist hier die Definition des Splitt-Plot ANOVA-Modells. Hier\nmachen wir es mit der einfachsten Möglichkeit, dem aov-Befehl. Um diesen richtig zu\nspezifieren, muss man verstanden haben, welches der „random“-Faktor war und wie die\n„fixed“ factors ineinander geschachtelt waren. In diesem Fall ist block der random Faktor, in\nden zunächst irrigation und dann density geschachtelt sind (die unterste Ebene fertilizer muss\nman nicht mehr angeben, da diese in der nächsthöheren nicht repliziert ist).\n\n(Übrigens: das simple 3-faktorielle ANOVA-Modell\naov(yield~irrigation*density*fertilizer,data=splityield) würde unterstellen, dass alle 72 subplot\nunabhängig von allen anderen angeordnet sind, also nicht in Blöcken. Man kann ausprobieren,\nwie sich das Ergebnis mit dieser Einstellung unterscheidet)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(aov.1)\n## Error in summary(aov.1): Objekt 'aov.1' nicht gefunden\n```\n:::\n\n\nWir bekommen p-Werte für die drei Einzeltreatments, die drei 2-fach-Interaktionen und die 3-\nfach Interaktion. Keinen p-Wert gibt es dagegen für block, da dieser als „random“ Faktor\nspezifiziert wurde.\nSignifikant sind für sich genommen irrigation und fertilizer sowie die Interaktionen\nirrigation:density und irrigation:fertilizer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Modelvereinfachung\naov.2 <- aov(yield ~ irrigation + density + fertilizer + irrigation:density +\n  irrigation:fertilizer + density:fertilizer + Error(block / irrigation / density), data = splityield)\n## Error in terms.formula(formula, \"Error\", data = data): Objekt 'splityield' nicht gefunden\nsummary(aov.2)\n## Error in summary(aov.2): Objekt 'aov.2' nicht gefunden\n\naov.3 <- aov(yield ~ irrigation + density + fertilizer + irrigation:density +\n  irrigation:fertilizer + Error(block / irrigation / density), data = splityield)\n## Error in terms.formula(formula, \"Error\", data = data): Objekt 'splityield' nicht gefunden\nsummary(aov.3)\n## Error in summary(aov.3): Objekt 'aov.3' nicht gefunden\n```\n:::\n\n\nJetzt muss man nur noch herausfinden, wie irrigation und fertilizer wirken und wie die\nInteraktionen aussehen. Bei multiplen ANOVAs macht man das am besten visuell:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualisierung der Ergebnisse\nboxplot(yield ~ fertilizer, data = splityield)\n## Error in eval(m$data, parent.frame()): Objekt 'splityield' nicht gefunden\nboxplot(yield ~ irrigation, data = splityield)\n## Error in eval(m$data, parent.frame()): Objekt 'splityield' nicht gefunden\n\ninteraction.plot(splityield$fertilizer, splityield$irrigation, splityield$yield,\n  xlab = \"fertilizer\", ylab = \"mean of splityield\", trace.label = \"irrigation\"\n)\n## Error in tapply(response, list(x.factor, trace.factor), fun): Objekt 'splityield' nicht gefunden\ninteraction.plot(splityield$density, splityield$irrigation, splityield$yield,\n  xlab = \"fertilizer\", ylab = \"mean of splityield\", trace.label = \"irrigation\"\n)\n## Error in tapply(response, list(x.factor, trace.factor), fun): Objekt 'splityield' nicht gefunden\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}