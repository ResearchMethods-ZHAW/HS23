{
  "hash": "0184aa53a2c18e9c498c394e839099fc",
  "result": {
    "markdown": "---\ndate: 2023-11-20\nlesson: Stat7\nthema: Ordinationen II\nindex: 3\n---\n\n\n# Stat7: Lösung\n\n- Download dieses Lösungsscript via \"\\</\\>Code\" (oben rechts)\n- [Lösungstext als Download](Statistik_Loesungstext_7.1.pdf)\n\n## Musterlösung Aufgabe 7.1: RDA\n\n**Übungsaufgabe (hier so ausführlich formuliert, wie dies auch in der Klausur der Fall sein wird)**\n\n- Ladet die library dave, welche den Moordatensatz enthält. sveg beinhaltet presenceabsence-Daten  aller untersuchten Arten in den Plots; ssit beinhaltet 18 metrische Umweltdaten sowie Koordinaten der Plots\n- **Führt eine RDA und eine Varianzpartizionierung in die Variablengruppen Physiographie**  (Waterlev.max, Waterlev.av, Waterlev.min, log.peat.lev, log\n  slope.deg) **und Chemie** (alle übrigen) **durch.**\n- Formuliert abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\n- Während im Text normalerweise die Variablen ausgeschrieben werden solltet, genügt es hier (da ihr die entsprechenden Infos nicht bekommen habt und nur raten könntet), wenn ihr die Abkürzungen aus dem dataframe nehmt.\n\n__Moordatensatz laden__ \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"dave\")\n## Error in library(\"dave\"): es gibt kein Paket namens 'dave'\ndata(\"sveg\")\ndata(\"ssit\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(sveg)\nsummary(ssit)\nstr(ssit)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# x.axis and y.axis vom data frame data frame ssit entfernen\nenv2 <- ssit[, -c(19, 20)]\n## Error in eval(expr, envir, enclos): Objekt 'ssit' nicht gefunden\n```\n:::\n\nBetrachtung der Daten zeigt, dass die Koordinaten in Spalten 19 und 20 sind, die daraufhin entfernt werden.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generiere zwei subset der erklärenden Variablen\n# Physiografie (upstream-downstream-Gradient)\nenvtopo <- env2[, c(11:15)]\n## Error in eval(expr, envir, enclos): Objekt 'env2' nicht gefunden\nnames(envtopo)\n## Error in eval(expr, envir, enclos): Objekt 'envtopo' nicht gefunden\n# Chemie\nenvchem <- env2[, c(1:10, 16:18)]\n## Error in eval(expr, envir, enclos): Objekt 'env2' nicht gefunden\nnames(envchem)\n## Error in eval(expr, envir, enclos): Objekt 'envchem' nicht gefunden\n\n# Hellinger-transform the species dataset\nlibrary(\"vegan\")\n## Error in library(\"vegan\"): es gibt kein Paket namens 'vegan'\nspe.hel <- decostand(sveg, \"hellinger\")\n## Error in decostand(sveg, \"hellinger\"): konnte Funktion \"decostand\" nicht finden\n```\n:::\n\n\nVorstehend wurden die Variablen in die zwei Gruppen Chemistry und Physiography aufgteilt. Die Hellilnger-Transformation wird gemeinhin empfohlen (wobei dahingestellt sei, ob sie auch bei presence-absence-Daten nötig ist).\nDie weiteren Analysen führen wir mit der default-Einstellung „Scaling 2“ durch. (Je nach Bedarf bzw. persönlichen Vorlieben könnte auch Scaling 1 genommen werden).\n\n__Redundancy analysis (RDA)__\n\nRDA of the Hellinger-transformed mire species data, constrained by all the environmental variables contained in env2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## RDA der Hellinger-transformireten Moorarten-Daten, constrained\n## mit allen Umweltvarialben die in env2 enthalten sind\n(spe.rda <- rda(spe.hel ~ ., env2)) # Observe the shortcut formula\n## Error in rda(spe.hel ~ ., env2): konnte Funktion \"rda\" nicht finden\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(spe.rda) # Skalierung 2 (default)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Canonical coefficients from the rda object\ncoef(spe.rda)\n## Error in coef(spe.rda): Objekt 'spe.rda' nicht gefunden\n# Unadjusted R^2 retrieved from the rda object\n(R2 <- RsquareAdj(spe.rda)$r.squared)\n## Error in RsquareAdj(spe.rda): konnte Funktion \"RsquareAdj\" nicht finden\n# Adjusted R^2 retrieved from the rda object\n(R2adj <- RsquareAdj(spe.rda)$adj.r.squared)\n## Error in RsquareAdj(spe.rda): konnte Funktion \"RsquareAdj\" nicht finden\n```\n:::\n\n\nMan erhält R²adj. = 0.376\nJetzt kann man den Triplot erstellen\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Triplots of the rda results (lc scores)\n## Site scores as linear combinations of the environmental variables\n# dev.new(title = \"RDA scaling 1 and 2 + lc\", width = 15, height = 6, noRStudioGD = TRUE)\n# par(mfrow = c(1, 2))\n\n# 1 und 2 Achse\nplot(spe.rda,\n  display = c(\"sp\", \"lc\", \"cn\"),\n  main = \"Triplot RDA spe.hel ~ env2 - scaling 2 - lc scores\"\n)\n## Error in plot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env2 - scaling 2 - lc scores\"): Objekt 'spe.rda' nicht gefunden\nspe.sc2 <- scores(spe.rda, choices = 1:2, display = \"sp\")\n## Error in scores(spe.rda, choices = 1:2, display = \"sp\"): konnte Funktion \"scores\" nicht finden\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92,\n  length = 0,\n  lty = 1, col = \"red\"\n)\n## Error in arrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, : Objekt 'spe.sc2' nicht gefunden\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n## Error in text.default(-0.82, 0.55, \"b\", cex = 1.5): plot.new has not been called yet\n\n# 1 und 3 Achse\nplot(spe.rda,\n  display = c(\"sp\", \"lc\", \"cn\"), choices = c(1, 3),\n  main = \"Triplot RDA spe.hel ~ env2 - scaling 2 - lc scores\"\n)\n## Error in plot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), choices = c(1, 3), : Objekt 'spe.rda' nicht gefunden\nspe.sc2 <- scores(spe.rda, choices = c(1, 3), display = \"sp\")\n## Error in scores(spe.rda, choices = c(1, 3), display = \"sp\"): konnte Funktion \"scores\" nicht finden\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92,\n  length = 0,\n  lty = 1, col = \"red\"\n)\n## Error in arrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, : Objekt 'spe.sc2' nicht gefunden\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n## Error in text.default(-0.82, 0.55, \"b\", cex = 1.5): plot.new has not been called yet\n\n## Triplots of the rda results (wa scores)\n## Site scores as weighted averages (vegan's default)\n# Scaling 1 :  distance triplot\n# dev.new(title = \"RDA scaling 2 + wa\",width = 7, height = 6, noRStudioGD = TRUE)\n\n# Scaling 2 (default) :  correlation triplot\nplot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\")\n## Error in plot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\"): Objekt 'spe.rda' nicht gefunden\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n## Error in arrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, : Objekt 'spe.sc2' nicht gefunden\n```\n:::\n\n\nAuswahl der höchstkorrelierten Arten (Grenzwert kann subjektiv nach Bedarf gesetzt werden, hier 0.5).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select species with goodness-of-fit at least 0.6 in the\n# ordination plane formed by axes 1 and 2\nspe.good <- goodness(spe.rda)\nsel.sp <- which(spe.good[, 2] >= 0.6)\nsel.sp\n\n# Global test of the RDA result\nanova(spe.rda, permutations = how(nperm = 999))\n\n# Tests of all canonical axes\nanova(spe.rda, permutations = how(nperm = 999))\nanova(spe.rda, by = \"axis\", permutations = how(nperm = 999))\n```\n:::\n\n\nDie ersten drei RDA-Achsen sind also signifikant. Man könnte also auch noch eine\nVisualisierung von RDA 3 vs. RDA 1 machen.\n\n- **Partielle RDA**\n- **Simple syntax; X and W may be in separate tables of quantitative** \n- **variables**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspechem.physio <- rda(spe.hel, envchem, envtopo)\nsummary(spechem.physio)\n\n# Formula interface; X and W variables must be in the same\n# data frame\n(spechem.physio2 <-\n  rda(spe.hel ~ pH.peat + log.ash.perc + Ca_peat + Mg_peat + Na_peat\n    + K_peat + Acidity.peat + CEC.peat + Base.sat.perc + P.peat\n    + pH.water + log.cond.water + log.Ca.water\n    + Condition(Waterlev.max + Waterlev.av + Waterlev.min + log.peat.lev\n      + log.slope.deg), data = env2))\n\n# Test of the partial RDA, using the results with the formula\n# interface to allow the tests of the axes to be run\nanova(spechem.physio2, permutations = how(nperm = 999))\nanova(spechem.physio2, permutations = how(nperm = 999), by = \"axis\")\n\n# Partial RDA triplots (with fitted site scores)\n# with function triplot.rda\n# dev.new(title = \"Partial RDA\", width = 7, height = 6, noRStudioGD = TRUE)\n\ntriplot.rda(spechem.physio,\n  site.sc = \"lc\", scaling = 2,\n  cex.char2 = 0.8, pos.env = 3, mult.spe = 1.1, mar.percent = 0.04\n)\ntext(-3.34, 3.64, \"b\", cex = 2)\n```\n:::\n\n\n__Varianzpartitionierung__\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 1. Variation partitioning with all explanatory variables\n(spe.part.all <- varpart(spe.hel, envchem, envtopo))\n## Error in varpart(spe.hel, envchem, envtopo): konnte Funktion \"varpart\" nicht finden\n\n# Plot of the partitioning results\n# dev.new(title = \"Variation partitioning\", width = 7, height = 7, noRStudioGD = TRUE)\n\nplot(spe.part.all, digits = 2, bg = c(\"red\", \"blue\"),\n  Xnames = c(\"Chemistry\", \"Physiography\"), id.size = 0.7)\n## Error in plot(spe.part.all, digits = 2, bg = c(\"red\", \"blue\"), Xnames = c(\"Chemistry\", : Objekt 'spe.part.all' nicht gefunden\n```\n:::\n\n\nDie durch die erhobenen Umweltvariablen insgesamt erklärte Varianz (37.6%, s.o.) entfällt zu 19.4% auf chemische Variablen, 3.6% auf physiographische Variablen und zu 14.6% auf gemeinsame Erklärung.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}