{
  "hash": "ffa2cb57043f2a100b37c1e4843ac3dc",
  "result": {
    "markdown": "---\ndate: 2023-11-13\nlesson: Stat5\nthema: Von linearen Modellen zu GLMMs\nindex: 1\nformat:\n  html:\n    code-tools:\n      source: true\n---\n\n\n# Stat5: Demo\n\n-   Download dieses Demoscript via \"\\</\\>Code\" (oben rechts)\n-   Datensatz *spf.csv*\n-   Datensatz *DeerEcervi.txt*\n\n## Split-plot ANOVA\n\nReaktionszeitenbeispiel aus Kapitel 14 von Logan (2010) \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Daten laden\nspf <- read.delim(\"datasets/stat5-8/spf.csv\", sep = \";\")\n## Error in file(file, \"rt\"): kann Verbindung nicht öffnen\n# Daten anschauen\nhead(spf)\n## Error in head(spf): Objekt 'spf' nicht gefunden\n\n# LM mit random intercept = einfaches LMM\nspf.aov <- aov(Reaktion ~ Signal * Messung + Error(VP), data = spf)\n## Error in terms.formula(formula, \"Error\", data = data): Objekt 'spf' nicht gefunden\nsummary(spf.aov)\n## Error in summary(spf.aov): Objekt 'spf.aov' nicht gefunden\n# Interaktion anschauen\ninteraction.plot(spf$Messung, spf$Signal, spf$Reaktion)\n## Error in tapply(response, list(x.factor, trace.factor), fun): Objekt 'spf' nicht gefunden\n\n# Nun als LMM\nlibrary(\"nlme\")\n# Mit random intercept (VP) und random slope (Messung)\nspf.lme.1 <- lme(Reaktion ~ Signal * Messung, random = ~ Messung | VP, data = spf)\n## Error in is.data.frame(data): Objekt 'spf' nicht gefunden\n# Nur random intercept\nspf.lme.2 <- lme(Reaktion ~ Signal * Messung, random = ~ 1 | VP, data = spf)\n## Error in is.data.frame(data): Objekt 'spf' nicht gefunden\n# Modelle anschauen\nanova(spf.lme.1)\n## Error in anova(spf.lme.1): Objekt 'spf.lme.1' nicht gefunden\nanova(spf.lme.2)\n## Error in anova(spf.lme.2): Objekt 'spf.lme.2' nicht gefunden\n\nsummary(spf.lme.1)\n## Error in summary(spf.lme.1): Objekt 'spf.lme.1' nicht gefunden\nsummary(spf.lme.2)\n## Error in summary(spf.lme.2): Objekt 'spf.lme.2' nicht gefunden\n```\n:::\n\n\n## GLMM\n\n-> Hirschparasitenbeispiel aus Kapitel 13 von Zuur et al. (2009)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Daten laden und für GLMM aufbereiten\nDeerEcervi <- read.delim(\"datasets/stat5-8/DeerEcervi.txt\", sep = \"\", stringsAsFactors = TRUE)\n## Error in file(file, \"rt\"): kann Verbindung nicht öffnen\n# Daten anschauen\nhead(DeerEcervi)\n## Error in head(DeerEcervi): Objekt 'DeerEcervi' nicht gefunden\nsummary(DeerEcervi)\n## Error in summary(DeerEcervi): Objekt 'DeerEcervi' nicht gefunden\n# Anzahl Larven hier in Presence/Absence übersetzt\nDeerEcervi$Ecervi.01 <- DeerEcervi$Ecervi\n## Error in eval(expr, envir, enclos): Objekt 'DeerEcervi' nicht gefunden\nDeerEcervi$Ecervi.01[DeerEcervi$Ecervi > 0] <- 1\n## Error in DeerEcervi$Ecervi.01[DeerEcervi$Ecervi > 0] <- 1: Objekt 'DeerEcervi' nicht gefunden\n# Numerische Geschlechtscodierung als Factor\nDeerEcervi$fSex <- as.factor(DeerEcervi$Sex)\n## Error in is.factor(x): Objekt 'DeerEcervi' nicht gefunden\n# Hischlänge standardisieren\nDeerEcervi$CLength <- DeerEcervi$Length - mean(DeerEcervi$Length)\n## Error in eval(expr, envir, enclos): Objekt 'DeerEcervi' nicht gefunden\n```\n:::\n\n\n-> Nun sind die Daten bereit:\n\n-   Die Parasitenbefalldaten wurden in Parasiten Präsenz/Absenz (1/0) übersetzt.\n-   Die Hirschlänge wurde standardisiert, damit der Achsenabschnitt (intercept) des Modells interpretierbar ist, standardisierte entspricht nun der Achsenabschnitt einem durschnittlich langen Hirsch.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Zunächst als GLM\n# Interaktionen mit fFarm nicht berücksichtigt, da zu viele Freiheitsgrade verbraucht würden\nDE.glm <- glm(Ecervi.01 ~ CLength * fSex + Farm, family = binomial, data = DeerEcervi)\n## Error in is.data.frame(data): Objekt 'DeerEcervi' nicht gefunden\n\ndrop1(DE.glm, test = \"Chi\")\n## Error in drop1(DE.glm, test = \"Chi\"): Objekt 'DE.glm' nicht gefunden\n\nsummary(DE.glm)\n## Error in summary(DE.glm): Objekt 'DE.glm' nicht gefunden\nanova(DE.glm)\n## Error in anova(DE.glm): Objekt 'DE.glm' nicht gefunden\n\n# Response curves für die einzelnen Farmen (Weibliche Tiere: fSex = \"1\" )\nplot(DeerEcervi$CLength, DeerEcervi$Ecervi.01,\n  xlab = \"Length\", ylab = \"Probability of \\\n     presence of E. cervi L1\"\n)\n## Error in plot(DeerEcervi$CLength, DeerEcervi$Ecervi.01, xlab = \"Length\", : Objekt 'DeerEcervi' nicht gefunden\nI <- order(DeerEcervi$CLength)\n## Error in order(DeerEcervi$CLength): Objekt 'DeerEcervi' nicht gefunden\nAllFarms <- unique(DeerEcervi$Farm)\n## Error in unique(DeerEcervi$Farm): Objekt 'DeerEcervi' nicht gefunden\nfor (j in AllFarms) {\n  mydata <- data.frame(\n    CLength = DeerEcervi$CLength, fSex = \"1\",\n    Farm = j\n  )\n  n <- dim(mydata)[1]\n  if (n > 10) {\n    P.DE2 <- predict(DE.glm, mydata, type = \"response\")\n    lines(mydata$CLength[I], P.DE2[I])\n  }\n}\n## Error in eval(expr, envir, enclos): Objekt 'AllFarms' nicht gefunden\n\n# glmm\nlibrary(\"MASS\")\n\nDE.PQL <- glmmPQL(Ecervi.01 ~ CLength * fSex,\n  random = ~ 1 | Farm, family = binomial, data = DeerEcervi\n)\n## Error in terms.formula(fixed, data = data): Objekt 'DeerEcervi' nicht gefunden\nsummary(DE.PQL)\n## Error in summary(DE.PQL): Objekt 'DE.PQL' nicht gefunden\n\n# Modellvoraussagen berechnen\ng <- 0.8883697 + 0.0378608 * DeerEcervi$CLength\n## Error in eval(expr, envir, enclos): Objekt 'DeerEcervi' nicht gefunden\n# Rücktransformieren aus Logit\np.averageFarm1 <- exp(g) / (1 + exp(g))\n## Error in eval(expr, envir, enclos): Objekt 'g' nicht gefunden\n# Sortierung der Hirschgrössen für's Plotten\nI <- order(DeerEcervi$CLength)\n## Error in order(DeerEcervi$CLength): Objekt 'DeerEcervi' nicht gefunden\n# Plotten\nplot(DeerEcervi$CLength, DeerEcervi$Ecervi.01,\n  xlab = \"Length\",\n  ylab = \"Probability of presence of E. cervi L1\"\n)\n## Error in plot(DeerEcervi$CLength, DeerEcervi$Ecervi.01, xlab = \"Length\", : Objekt 'DeerEcervi' nicht gefunden\nlines(DeerEcervi$CLength[I], p.averageFarm1[I], lwd = 3)\n## Error in lines(DeerEcervi$CLength[I], p.averageFarm1[I], lwd = 3): Objekt 'DeerEcervi' nicht gefunden\n# Vertrauensintervalle (CI) mit SD von Random factor berechnen\n# Generell CI = mean + 1.96*SD\np.Upp <- exp(g + 1.96 * 1.462108) / (1 + exp(g + 1.96 * 1.462108))\n## Error in eval(expr, envir, enclos): Objekt 'g' nicht gefunden\np.Low <- exp(g - 1.96 * 1.462108) / (1 + exp(g - 1.96 * 1.462108))\n## Error in eval(expr, envir, enclos): Objekt 'g' nicht gefunden\nlines(DeerEcervi$CLength[I], p.Upp[I])\n## Error in lines(DeerEcervi$CLength[I], p.Upp[I]): Objekt 'DeerEcervi' nicht gefunden\nlines(DeerEcervi$CLength[I], p.Low[I])\n## Error in lines(DeerEcervi$CLength[I], p.Low[I]): Objekt 'DeerEcervi' nicht gefunden\n\n# Dasselbe mit dem lme4-Package\nlibrary(\"lme4\")\nDE.lme4 <- glmer(Ecervi.01 ~ CLength * fSex + (1 | Farm),\n  family = binomial, data = DeerEcervi\n)\n## Error: bad 'data': Objekt 'DeerEcervi' nicht gefunden\nsummary(DE.lme4)\n## Error in h(simpleError(msg, call)): Fehler bei der Auswertung des Argumentes 'object' bei der Methodenauswahl für Funktion 'summary': Objekt 'DE.lme4' nicht gefunden\n\nlibrary(\"glmmML\")\n## Error in library(\"glmmML\"): es gibt kein Paket namens 'glmmML'\nDE.glmmML <- glmmML(Ecervi.01 ~ CLength * fSex,\n  cluster = Farm, family = binomial, data = DeerEcervi\n)\n## Error in glmmML(Ecervi.01 ~ CLength * fSex, cluster = Farm, family = binomial, : konnte Funktion \"glmmML\" nicht finden\nsummary(DE.glmmML)\n## Error in h(simpleError(msg, call)): Fehler bei der Auswertung des Argumentes 'object' bei der Methodenauswahl für Funktion 'summary': Objekt 'DE.glmmML' nicht gefunden\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}