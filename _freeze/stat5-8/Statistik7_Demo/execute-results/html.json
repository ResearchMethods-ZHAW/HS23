{
  "hash": "a0c2f835d8961b59bab616e87bd2389c",
  "result": {
    "markdown": "---\ndate: 2023-11-20\nlesson: Stat7\nthema: Ordinationen II\nindex: 1\nformat:\n  html:\n    code-tools:\n      source: true\n---\n\n\n# Stat7: Demo\n\n-   Download dieses Demoscript via \"\\</\\>Code\" (oben rechts)\n-   Datensatz *Doubs.RData*\n-   Datensatz *dave_sveg.csv* von @wildi2017data\n-   Datensatz *dave_ssit.csv* von @wildi2017data\n\n## Ordinationen II\n\n### Interpretation von Ordinationen\n\nWildi pp. 96 et seq.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot Arten\nlibrary(\"readr\")\nlibrary(\"vegan\")\n\nsveg <- read_delim(\"datasets/statistik/dave_sveg.csv\")\n## Error: 'datasets/statistik/dave_sveg.csv' does not exist in current working directory ('C:/Users/luoe/Documents/Coding/ResearchMethods/HS23').\nssit <- read_delim(\"datasets/statistik/dave_ssit.csv\")\n## Error: 'datasets/statistik/dave_ssit.csv' does not exist in current working directory ('C:/Users/luoe/Documents/Coding/ResearchMethods/HS23').\n\n# Daten anschauen\ndim(sveg) # Vegetationsaufnahmen\n## Error in eval(expr, envir, enclos): object 'sveg' not found\nsveg[1:3, 1:3]\n## Error in eval(expr, envir, enclos): object 'sveg' not found\ndim(ssit) # Umweltvariablen\n## Error in eval(expr, envir, enclos): object 'ssit' not found\nssit[1:3, 1:3]\n## Error in eval(expr, envir, enclos): object 'ssit' not found\n\n# CA rechnen\nca <- cca(sveg^0.5)\n## Error in cca(sveg^0.5): object 'sveg' not found\n\n## Plot mit ausgew채hlten Arten\nsel.spec <- c(3, 11, 23, 31, 39, 46, 72, 77, 96)\nsnames <- names(sveg[, sel.spec])\n## Error in eval(expr, envir, enclos): object 'sveg' not found\nsnames\n## Error in eval(expr, envir, enclos): object 'snames' not found\nscores <- scores(ca, display = \"species\", scaling = \"sites\")\n## Error in scores(ca, display = \"species\", scaling = \"sites\"): object 'ca' not found\nsx <- scores[sel.spec, 1]\n## Error in scores[sel.spec, 1]: object of type 'closure' is not subsettable\nsy <- scores[sel.spec, 2]\n## Error in scores[sel.spec, 2]: object of type 'closure' is not subsettable\nplot(ca, display = \"sites\", type = \"point\")\n## Error in plot(ca, display = \"sites\", type = \"point\"): object 'ca' not found\npoints(sx, sy, pch = 16)\n## Error in points(sx, sy, pch = 16): object 'sx' not found\nsnames <- make.cepnames(snames)\n## Error in make.names(names, unique = FALSE, allow_ = FALSE): object 'snames' not found\ntext(sx, sy, snames, pos = c(1, 2, 1, 1, 3, 2, 4, 3, 1), cex = 0.8)\n## Error in text(sx, sy, snames, pos = c(1, 2, 1, 1, 3, 2, 4, 3, 1), cex = 0.8): object 'sx' not found\n\n# Plot \"response surfaces\" in der CA\npar(mfrow = c(1, 2))\nplot(ca, display = \"sites\", type = \"point\")\n## Error in plot(ca, display = \"sites\", type = \"point\"): object 'ca' not found\nordisurf(ca, ssit$pH.peat, add = TRUE, col = \"red\")\n## Error in ordisurf(ca, ssit$pH.peat, add = TRUE, col = \"red\"): object 'ca' not found\ntext(-1.5, 2, \"pH\", col = \"red\")\n## Error in text.default(-1.5, 2, \"pH\", col = \"red\"): plot.new has not been called yet\nplot(ca, display = \"sites\", type = \"points\")\n## Error in plot(ca, display = \"sites\", type = \"points\"): object 'ca' not found\nordisurf(ca, ssit$Waterlev.av, add = TRUE, col = \"blue\")\n## Error in ordisurf(ca, ssit$Waterlev.av, add = TRUE, col = \"blue\"): object 'ca' not found\ntext(-1.5, 2, \"Wasserstand\", col = \"blue\")\n## Error in text.default(-1.5, 2, \"Wasserstand\", col = \"blue\"): plot.new has not been called yet\n\n# Daselbe mit einer DCA\npar(mfrow = c(1, 2))\ndca <- decorana(sveg)\n## Error in as.matrix(veg): object 'sveg' not found\nplot(dca, display = \"sites\", type = \"points\")\n## Error in plot(dca, display = \"sites\", type = \"points\"): object 'dca' not found\nordisurf(dca, ssit$pH.peat, add = TRUE)\n## Error in ordisurf(dca, ssit$pH.peat, add = TRUE): object 'dca' not found\ntext(-1, 1.5, \"pH\", col = \"red\")\n## Error in text.default(-1, 1.5, \"pH\", col = \"red\"): plot.new has not been called yet\nplot(dca, display = \"sites\", type = \"points\")\n## Error in plot(dca, display = \"sites\", type = \"points\"): object 'dca' not found\nordisurf(dca, ssit$Waterlev.av, add = TRUE, col = \"blue\")\n## Error in ordisurf(dca, ssit$Waterlev.av, add = TRUE, col = \"blue\"): object 'dca' not found\ntext(-1, 1.5, \"Wasserstand\", col = \"blue\")\n## Error in text.default(-1, 1.5, \"Wasserstand\", col = \"blue\"): plot.new has not been called yet\n\n## Dasselbe mit NMDS\nmde <- vegdist(sveg, method = \"euclidean\")\n## Error in as.matrix(x): object 'sveg' not found\nmmds <- metaMDS(mde)\n## Error in metaMDS(mde): object 'mde' not found\n\nlibrary(\"MASS\")\nimds <- isoMDS(mde)\n## Error in isoMDS(mde): object 'mde' not found\n\npar(mfrow = c(2, 2))\nplot(mmds$points)\n## Error in plot(mmds$points): object 'mmds' not found\nordisurf(mmds, ssit$pH.peat, add = TRUE)\n## Error in ordisurf(mmds, ssit$pH.peat, add = TRUE): object 'mmds' not found\ntext(-4, 4, \"pH\", col = \"red\")\n## Error in text.default(-4, 4, \"pH\", col = \"red\"): plot.new has not been called yet\nplot(mmds$points)\n## Error in plot(mmds$points): object 'mmds' not found\nordisurf(mmds, ssit$Waterlev.av, add = TRUE, col = \"blue\")\n## Error in ordisurf(mmds, ssit$Waterlev.av, add = TRUE, col = \"blue\"): object 'mmds' not found\ntext(-4, 4, \"Wasserstand\", col = \"blue\")\n## Error in text.default(-4, 4, \"Wasserstand\", col = \"blue\"): plot.new has not been called yet\nplot(imds$points)\n## Error in plot(imds$points): object 'imds' not found\nordisurf(imds, ssit$pH.peat, add = TRUE)\n## Error in ordisurf(imds, ssit$pH.peat, add = TRUE): object 'imds' not found\ntext(-4, 4, \"pH\", col = \"red\")\n## Error in text.default(-4, 4, \"pH\", col = \"red\"): plot.new has not been called yet\nplot(imds$points)\n## Error in plot(imds$points): object 'imds' not found\nordisurf(imds, ssit$Waterlev.av, add = T, col = \"blue\")\n## Error in ordisurf(imds, ssit$Waterlev.av, add = T, col = \"blue\"): object 'imds' not found\ntext(-4, 4, \"Wasserstand\", col = \"blue\")\n## Error in text.default(-4, 4, \"Wasserstand\", col = \"blue\"): plot.new has not been called yet\n```\n:::\n\n\n### Constrained ordination\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Umweltvariablen w채heln, durch die die Ordination constrained werden soll\nnames(ssit)\n## Error in eval(expr, envir, enclos): object 'ssit' not found\n\n# 5 Variablen w채hlen\ns5 <- c(\"pH.peat\", \"P.peat\", \"Waterlev.av\", \"CEC.peat\", \"Acidity.peat\")\nssit5 <- ssit[s5]\n## Error in eval(expr, envir, enclos): object 'ssit' not found\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1, 2))\n\n# RDA = constrained PCA\nrda <- rda(sveg ~ ., ssit5)\n## Error in eval(match.call()$data, environment(formula), enclos = .GlobalEnv): object 'ssit5' not found\nplot(rda)\n## Error in curve(expr = x, from = from, to = to, xlim = xlim, ylab = ylab, : 'expr' did not evaluate to an object of length 'n'\n\n# CCA = constrained CA\ncca <- cca(sveg ~ ., ssit5)\n## Error in eval(match.call()$data, environment(formula), enclos = .GlobalEnv): object 'ssit5' not found\nplot(cca)\n## Error in cca.default(x): all row sums must be >0 in the community data matrix\n\n# Unconstrained and constrained variance\ntot <- cca$tot.chi\n## Error in cca$tot.chi: object of type 'closure' is not subsettable\nconstr <- cca$CCA$tot.chi\n## Error in cca$CCA: object of type 'closure' is not subsettable\nconstr / tot # Erkl채rte Varianz\n## Error in eval(expr, envir, enclos): object 'constr' not found\n```\n:::\n\n\n### Redundancy analysis (RDA)\n\nMehr Details zu RDA aus @borcard2011\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Datensatz Doubs in den workspace laden\nload(\"datasets/statistik/Doubs.RData\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Daten anschauen\nsummary(spe)\n##       Cogo           Satr           Phph            Babl            Thth     \n##  Min.   :0.00   Min.   :0.00   Min.   :0.000   Min.   :0.000   Min.   :0.00  \n##  1st Qu.:0.00   1st Qu.:0.00   1st Qu.:0.000   1st Qu.:1.000   1st Qu.:0.00  \n##  Median :0.00   Median :1.00   Median :3.000   Median :2.000   Median :0.00  \n##  Mean   :0.50   Mean   :1.90   Mean   :2.267   Mean   :2.433   Mean   :0.50  \n##  3rd Qu.:0.75   3rd Qu.:3.75   3rd Qu.:4.000   3rd Qu.:4.000   3rd Qu.:0.75  \n##  Max.   :3.00   Max.   :5.00   Max.   :5.000   Max.   :5.000   Max.   :4.00  \n##       Teso             Chna          Pato             Lele      \n##  Min.   :0.0000   Min.   :0.0   Min.   :0.0000   Min.   :0.000  \n##  1st Qu.:0.0000   1st Qu.:0.0   1st Qu.:0.0000   1st Qu.:0.000  \n##  Median :0.0000   Median :0.0   Median :0.0000   Median :1.000  \n##  Mean   :0.6333   Mean   :0.6   Mean   :0.8667   Mean   :1.433  \n##  3rd Qu.:0.7500   3rd Qu.:1.0   3rd Qu.:2.0000   3rd Qu.:2.000  \n##  Max.   :5.0000   Max.   :3.0   Max.   :4.0000   Max.   :5.000  \n##       Sqce            Baba            Albi          Gogo            Eslu      \n##  Min.   :0.000   Min.   :0.000   Min.   :0.0   Min.   :0.000   Min.   :0.000  \n##  1st Qu.:1.000   1st Qu.:0.000   1st Qu.:0.0   1st Qu.:0.000   1st Qu.:0.000  \n##  Median :2.000   Median :0.000   Median :0.0   Median :1.000   Median :1.000  \n##  Mean   :1.867   Mean   :1.433   Mean   :0.9   Mean   :1.833   Mean   :1.333  \n##  3rd Qu.:3.000   3rd Qu.:3.000   3rd Qu.:1.0   3rd Qu.:3.750   3rd Qu.:2.000  \n##  Max.   :5.000   Max.   :5.000   Max.   :5.0   Max.   :5.000   Max.   :5.000  \n##       Pefl          Rham          Legi             Scer          Cyca       \n##  Min.   :0.0   Min.   :0.0   Min.   :0.0000   Min.   :0.0   Min.   :0.0000  \n##  1st Qu.:0.0   1st Qu.:0.0   1st Qu.:0.0000   1st Qu.:0.0   1st Qu.:0.0000  \n##  Median :0.5   Median :0.0   Median :0.0000   Median :0.0   Median :0.0000  \n##  Mean   :1.2   Mean   :1.1   Mean   :0.9667   Mean   :0.7   Mean   :0.8333  \n##  3rd Qu.:2.0   3rd Qu.:2.0   3rd Qu.:1.7500   3rd Qu.:1.0   3rd Qu.:1.0000  \n##  Max.   :5.0   Max.   :5.0   Max.   :5.0000   Max.   :5.0   Max.   :5.0000  \n##       Titi          Abbr             Icme          Gyce            Ruru    \n##  Min.   :0.0   Min.   :0.0000   Min.   :0.0   Min.   :0.000   Min.   :0.0  \n##  1st Qu.:0.0   1st Qu.:0.0000   1st Qu.:0.0   1st Qu.:0.000   1st Qu.:0.0  \n##  Median :1.0   Median :0.0000   Median :0.0   Median :0.000   Median :1.0  \n##  Mean   :1.5   Mean   :0.8667   Mean   :0.6   Mean   :1.267   Mean   :2.1  \n##  3rd Qu.:3.0   3rd Qu.:1.0000   3rd Qu.:0.0   3rd Qu.:2.000   3rd Qu.:5.0  \n##  Max.   :5.0   Max.   :5.0000   Max.   :5.0   Max.   :5.000   Max.   :5.0  \n##       Blbj            Alal          Anan     \n##  Min.   :0.000   Min.   :0.0   Min.   :0.00  \n##  1st Qu.:0.000   1st Qu.:0.0   1st Qu.:0.00  \n##  Median :0.000   Median :0.0   Median :0.00  \n##  Mean   :1.033   Mean   :1.9   Mean   :0.90  \n##  3rd Qu.:1.750   3rd Qu.:5.0   3rd Qu.:1.75  \n##  Max.   :5.000   Max.   :5.0   Max.   :5.00\nsummary(env)\n##       dfs              ele             slo              dis       \n##  Min.   :  0.30   Min.   :172.0   Min.   : 0.200   Min.   : 0.84  \n##  1st Qu.: 54.45   1st Qu.:248.0   1st Qu.: 0.525   1st Qu.: 4.20  \n##  Median :175.20   Median :395.0   Median : 1.200   Median :22.10  \n##  Mean   :188.23   Mean   :481.6   Mean   : 3.497   Mean   :22.20  \n##  3rd Qu.:301.73   3rd Qu.:782.0   3rd Qu.: 2.875   3rd Qu.:28.57  \n##  Max.   :453.00   Max.   :934.0   Max.   :48.000   Max.   :69.00  \n##        pH             har              pho              nit       \n##  Min.   :7.700   Min.   : 40.00   Min.   :0.0100   Min.   :0.150  \n##  1st Qu.:7.925   1st Qu.: 84.25   1st Qu.:0.1250   1st Qu.:0.505  \n##  Median :8.000   Median : 89.00   Median :0.2850   Median :1.600  \n##  Mean   :8.050   Mean   : 86.10   Mean   :0.5577   Mean   :1.654  \n##  3rd Qu.:8.100   3rd Qu.: 96.75   3rd Qu.:0.5600   3rd Qu.:2.425  \n##  Max.   :8.600   Max.   :110.00   Max.   :4.2200   Max.   :6.200  \n##       amm              oxy              bod        \n##  Min.   :0.0000   Min.   : 4.100   Min.   : 1.300  \n##  1st Qu.:0.0000   1st Qu.: 8.025   1st Qu.: 2.725  \n##  Median :0.1000   Median :10.200   Median : 4.150  \n##  Mean   :0.2093   Mean   : 9.390   Mean   : 5.117  \n##  3rd Qu.:0.2000   3rd Qu.:10.900   3rd Qu.: 5.275  \n##  Max.   :1.8000   Max.   :12.400   Max.   :16.700\nsummary(spa)\n##        X                Y         \n##  Min.   :  0.00   Min.   : 20.00  \n##  1st Qu.: 80.94   1st Qu.: 42.13  \n##  Median : 96.56   Median : 73.14  \n##  Mean   : 97.58   Mean   : 66.57  \n##  3rd Qu.:130.03   3rd Qu.: 89.13  \n##  Max.   :159.44   Max.   :105.43\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Entfernen der Untersuchungsfl채che ohne Arten\nspe <- spe[-8, ]\nenv <- env[-8, ]\nspa <- spa[-8, ]\n\n## Karten f체r 4 Fischarten\npar(mfrow = c(2, 2))\nplot(spa, asp = 1, col = \"brown\", cex = spe$Satr, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Brown trout\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Thth, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Grayling\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Alal, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Bleak\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Titi, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Tench\")\nlines(spa, col = \"light blue\")\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n# Set aside the variable 'dfs' (distance from the source) for later use\ndfs <- env[, 1]\n# Remove the 'dfs' variable from the env data frame\nenv2 <- env[, -1]\n\n# Recode the slope variable (slo) into a factor (qualitative)\n# variable to show how these are handled in the ordinations\nslo2 <- rep(\".very_steep\", nrow(env))\nslo2[env$slo <= quantile(env$slo)[4]] <- \".steep\"\nslo2[env$slo <= quantile(env$slo)[3]] <- \".moderate\"\nslo2[env$slo <= quantile(env$slo)[2]] <- \".low\"\nslo2 <- factor(slo2, levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\"))\ntable(slo2)\n## slo2\n##        .low   .moderate      .steep .very_steep \n##           8           8           6           7\n\n# Create an env3 data frame with slope as a qualitative variable\nenv3 <- env2\nenv3$slo <- slo2\n\n# Create two subsets of explanatory variables\n# Physiography (upstream-downstream gradient)\nenvtopo <- env2[, c(1:3)]\nnames(envtopo)\n## [1] \"ele\" \"slo\" \"dis\"\n# Water quality\nenvchem <- env2[, c(4:10)]\nnames(envchem)\n## [1] \"pH\"  \"har\" \"pho\" \"nit\" \"amm\" \"oxy\" \"bod\"\n\n# Hellinger-transform the species dataset\nlibrary(\"vegan\")\nspe.hel <- decostand(spe, \"hellinger\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspe.hel\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Redundancy analysis (RDA)\n# RDA of the Hellinger-transformed fish species data, constrained\n# by all the environmental variables contained in env3\nspe.rda <- rda(spe.hel ~ ., env3) # Observe the shortcut formula\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspe.rda\nsummary(spe.rda) # Scaling 2 (default)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Canonical coefficients from the rda object\ncoef(spe.rda)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Unadjusted R^2 und Adjusted R^2\n(R2 <- RsquareAdj(spe.rda))\n## $r.squared\n## [1] 0.7270922\n## \n## $adj.r.squared\n## [1] 0.5224114\n\n### Triplots of the rda results (lc scores)\n### Site scores as linear combinations of the environmental variables\n## dev.new(title = \"RDA scaling 1 and 2 + lc\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\n## Scaling 1\nplot(spe.rda, scaling = 1, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - lc scores\")\nspe.sc1 <- scores(spe.rda, choices = 1:2, scaling = 1, display = \"sp\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\ntext(-0.75, 0.7, \"a\", cex = 1.5)\n## Scaling 2\nplot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - lc scores\")\nspe.sc2 <- scores(spe.rda, choices = 1:2, display = \"sp\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n### Triplots of the rda results (wa scores)\n### Site scores as weighted averages (vegan's default)\n## Scaling 1 :  distance triplot\n## dev.new(title = \"RDA plot\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\nplot(spe.rda, scaling = 1, main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - wa scores\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n## Scaling 2 (default) :  correlation triplot\nplot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n\n```{.r .cell-code}\n\n## Select species with goodness-of-fit at least 0.6 in the\n## ordination plane formed by axes 1 and 2\nspe.good <- goodness(spe.rda)\nsel.sp <- which(spe.good[, 2] >= 0.6)\nsel.sp\n## Satr Phph Chna Baba Albi Rham Legi Cyca Abbr Gyce Ruru Blbj Alal Anan \n##    2    3    7   11   12   16   17   19   21   23   24   25   26   27\n\n## Global test of the RDA result\nanova(spe.rda, permutations = how(nperm = 999))\n## Permutation test for rda under reduced model\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit + amm + oxy + bod, data = env3)\n##          Df Variance      F Pr(>F)    \n## Model    12  0.36537 3.5523  0.001 ***\n## Residual 16  0.13714                  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## Tests of all canonical axes\nanova(spe.rda, by = \"axis\", permutations = how(nperm = 999))\n## Permutation test for rda under reduced model\n## Forward tests for axes\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit + amm + oxy + bod, data = env3)\n##          Df Variance       F Pr(>F)    \n## RDA1      1 0.228083 26.6105  0.001 ***\n## RDA2      1 0.053698  6.2649  0.007 ** \n## RDA3      1 0.032119  3.7473  0.357    \n## RDA4      1 0.023206  2.7074  0.763    \n## RDA5      1 0.008699  1.0149  1.000    \n## RDA6      1 0.007218  0.8421  1.000    \n## RDA7      1 0.004869  0.5681  1.000    \n## RDA8      1 0.002924  0.3412  1.000    \n## RDA9      1 0.002141  0.2498  1.000    \n## RDA10     1 0.001160  0.1353  1.000    \n## RDA11     1 0.000914  0.1066  1.000    \n## RDA12     1 0.000341  0.0397  1.000    \n## Residual 16 0.137139                   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n### Partial RDA: effect of water chemistry, holding physiography\n### constant\n\n## Simple syntax; X and W may be in separate tables of quantitative\n## variables\n(spechem.physio <- rda(spe.hel, envchem, envtopo))\n## Call: rda(X = spe.hel, Y = envchem, Z = envtopo)\n## \n##               Inertia Proportion Rank\n## Total          0.5025     1.0000     \n## Conditional    0.2087     0.4152    3\n## Constrained    0.1602     0.3189    7\n## Unconstrained  0.1336     0.2659   18\n## Inertia is variance \n## \n## Eigenvalues for constrained axes:\n##    RDA1    RDA2    RDA3    RDA4    RDA5    RDA6    RDA7 \n## 0.09136 0.04590 0.00928 0.00625 0.00387 0.00214 0.00142 \n## \n## Eigenvalues for unconstrained axes:\n##     PC1     PC2     PC3     PC4     PC5     PC6     PC7     PC8 \n## 0.04643 0.02071 0.01746 0.01326 0.00975 0.00588 0.00512 0.00400 \n## (Showing 8 of 18 unconstrained eigenvalues)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(spechem.physio)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Formula interface; X and W variables must be in the same\n## data frame\n(spechem.physio2 <- rda(spe.hel ~ pH + har + pho + nit + amm + oxy + bod\n    + Condition(ele + slo + dis), data = env2))\n## Call: rda(formula = spe.hel ~ pH + har + pho + nit + amm + oxy + bod +\n## Condition(ele + slo + dis), data = env2)\n## \n##               Inertia Proportion Rank\n## Total          0.5025     1.0000     \n## Conditional    0.2087     0.4152    3\n## Constrained    0.1602     0.3189    7\n## Unconstrained  0.1336     0.2659   18\n## Inertia is variance \n## \n## Eigenvalues for constrained axes:\n##    RDA1    RDA2    RDA3    RDA4    RDA5    RDA6    RDA7 \n## 0.09136 0.04590 0.00928 0.00625 0.00387 0.00214 0.00142 \n## \n## Eigenvalues for unconstrained axes:\n##     PC1     PC2     PC3     PC4     PC5     PC6     PC7     PC8 \n## 0.04643 0.02071 0.01746 0.01326 0.00975 0.00588 0.00512 0.00400 \n## (Showing 8 of 18 unconstrained eigenvalues)\n\n## Test of the partial RDA, using the results with the formula\n## interface to allow the tests of the axes to be run\nanova(spechem.physio2, permutations = how(nperm = 999))\n## Permutation test for rda under reduced model\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ pH + har + pho + nit + amm + oxy + bod + Condition(ele + slo + dis), data = env2)\n##          Df Variance      F Pr(>F)    \n## Model     7  0.16023 3.0836  0.001 ***\n## Residual 18  0.13362                  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nanova(spechem.physio2, permutations = how(nperm = 999), by = \"axis\")\n## Permutation test for rda under reduced model\n## Forward tests for axes\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ pH + har + pho + nit + amm + oxy + bod + Condition(ele + slo + dis), data = env2)\n##          Df Variance       F Pr(>F)    \n## RDA1      1 0.091363 12.3078  0.001 ***\n## RDA2      1 0.045904  6.1839  0.011 *  \n## RDA3      1 0.009277  1.2497  0.968    \n## RDA4      1 0.006250  0.8420  0.997    \n## RDA5      1 0.003868  0.5210  0.999    \n## RDA6      1 0.002145  0.2890  1.000    \n## RDA7      1 0.001424  0.1919  0.999    \n## Residual 18 0.133617                   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n\n### Variation partitionig\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Variation partitioning with two sets of explanatory variables\n\n## Explanation of fraction labels (two, three and four explanatory\n## matrices) with optional colours\npar(mfrow = c(1, 3), mar = c(1, 1, 1, 1))\nshowvarparts(2, bg = c(\"red\", \"blue\"))\nshowvarparts(3, bg = c(\"red\", \"blue\", \"yellow\"))\nshowvarparts(4, bg = c(\"red\", \"blue\", \"yellow\", \"green\"))\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n### 1. Variation partitioning with all explanatory variables\n###    (except dfs)\n(spe.part.all <- varpart(spe.hel, envchem, envtopo))\n## \n## Partition of variance in RDA \n## \n## Call: varpart(Y = spe.hel, X = envchem, envtopo)\n## \n## Explanatory tables:\n## X1:  envchem\n## X2:  envtopo \n## \n## No. of explanatory tables: 2 \n## Total variation (SS): 14.07 \n##             Variance: 0.50251 \n## No. of observations: 29 \n## \n## Partition table:\n##                      Df R.squared Adj.R.squared Testable\n## [a+c] = X1            7   0.60579       0.47439     TRUE\n## [b+c] = X2            3   0.41524       0.34507     TRUE\n## [a+b+c] = X1+X2      10   0.73410       0.58638     TRUE\n## Individual fractions                                    \n## [a] = X1|X2           7                 0.24131     TRUE\n## [b] = X2|X1           3                 0.11199     TRUE\n## [c]                   0                 0.23308    FALSE\n## [d] = Residuals                         0.41362    FALSE\n## ---\n## Use function 'rda' to test significance of fractions of interest\n\n## Plot of the partitioning results\npar(mfrow = c(1, 1))\nplot(spe.part.all,\n  digits = 2, bg = c(\"red\", \"blue\"),\n  Xnames = c(\"Chemistry\", \"Physiography\"),\n  id.size = 0.7\n)\n```\n\n::: {.cell-output-display}\n![](Statistik7_Demo_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Statistik7_Demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}