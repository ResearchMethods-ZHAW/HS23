{
  "hash": "ea06c7ae5c8d9c8fc07c569cac24b0aa",
  "result": {
    "markdown": "# KW 42: Projektierung\n\n\n# Arbeiten mit Projekten\n\n__Hinweis: Bitte bearbeitet dieses Skript am 18.10.2022 erst nach der Einführung [Multivariate Analyse: Abschlussbericht].__ \n\n## Vorbereitung\n\nVor den eigentlichen Auswertungen müssen einige Vorbereitungen unternommen werden. Die Zeit, die man hier investiert, wird in der späteren Projektphase um ein Mehrfaches eingespart. \n\n\nIch empfehle generell mit Projekten zu arbeiten, da diese sehr einfach ausgetauscht (auf verschiedene Rechner) und somit auch reproduziert werden können. Wichtig ist, dass es keine absoluten Arbeitspfade sondern nur relative gibt. Der Datenimport (und -export) kann mithilfe dieser relativen Pfade stark vereinfacht werden. --> Kurz gesagt: Projekte helfen alles am richtigen Ort zu behalten (mehr zur Arbeit mit Projekten: https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects).\n\n- Erstellt an einem passenden Speicherort ein neues Projekt mit einem treffenden Namen:\n\n--> File / New Project\n\n## Aufgabe 1: Projektaufbau\n\n__Hinweise:__\n\nNutzt für allen Text, welcher nicht im Code integriert ist, das Symbol #. Wenn ihr den Text als Titel definieren wollt, so dass er in der Übersicht erscheint, müssen vor dem Wort # und nach dem Wort #### eingefügt werden.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Texte, vor denen ein # und nach denen #### stehen, sind Überschriften\n\n# Ich bin eine Überschrift ####\n\n# Texte, vor denen ein # steht, erklaeren den Ablauf\n\n# Dann folgen die Arbeitsschritte\n1+1\n\n# Wenn man auf \"Outline\" klickt (oder CTRL + SHIFT + O), \n# öffnet sich die Übersicht zu den Überschriften\n```\n:::\n\n\nTipps: \n\n- Alt + - = <- \n\n- Ctrl + Shift + C = # vor der ausgewaehlten Zeile\n\n__Aufbau eines Skripts__\n\nZuerst immer den __Titel des Projekts__ sowie den __Autor/ die Autorin__ des Skripts nennen. Hier soll auch die __Herkunft der Daten__ ersichtlich sein und falls externe Daten verwendet werden, sollte geklärt werden, wer Dateneigentümer ist (WPZ und Meteo Schweiz).\n\nIm Skript soll immer die __Ordnerstruktur__ des Projekts genannt werden. So kann der Arbeitsvorgang auf verschiedenen Rechnern einfach reproduziert werden (ich verwende hier ein Projektordner mit den Unterordnern __skripts, data, results).\n\nBeschreibt zudem folgendes die verwendete __Meteodaten__ (siehe dazu Metadata Meteodaten, --> order_XXX_legend.txt)\n\nEin Skript soll in R eigentlich immer (mehr oder weniger) nach dem selbem Schema aufgebaut sein. Dieses Schema enthällt (nach den bereits erwähnten Definitionen) 4 Kapitel: \n\n0) Metadaten und Definitionen\n1) Datenimport, \n2) Vorbereitung, \n3) Deskriptive Analyse und Visualisierung und \n4) Multifaktorielle Analyse und Visualisierung.\n\nBereitet euer Skript mit diesen Kapitel vor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#.###########################################################################################\n# Einfluss von COVID19 auf das Naherholungsverhalten in WPZ ####\n# Fallstudie Modul Research Methods, HS22. Autor/in ####\n#.##########################################################################################\n\n#.##########################################################################################\n# METADATA UND DEFINITIONEN ####\n#.##########################################################################################\n\n# Datenherkunft ####\n# ...\n\n#.##########################################################################################\n# 1. DATENIMPORT #####\n#.##########################################################################################\n\n```\n:::\n\n\nIn einem Bericht sollen die Abbildung einheitlich sein Dafür braucht es u.a. eine Farbpalette. Ich definiere meine Auswahl bereits hier; das hat den Vorteil, dass man die Farbnamen nur einmal schreiben muss und später die selbst definierte Palette unter der Variable \"mycolors\" abrufen kann.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmycolors <- c(\"orangered\",\"gold\", \"mediumvioletred\", \"darkblue\")\n```\n:::\n\n\n\n## Aufgabe 2: Laden der Bibliotheken\n\n- Geplottet wird mit ggplot, daher wird __tidyverse__ geladen. Diese Bibliothek ergaenzt BASE R in vielerlei Hinsicht uns ist eigentlich fast immer nötig. \n- Da wir es bei Besucherdaten immer mit einem zeitlichen Bezug zu tun haben, benoetigen wir eine passende Bibliothek. Ich arbeite mit __lubridate__, POSIXct waere natuerlich auch moeglich. \n- __ggpubr__ brauchen wir für das Darstellen von mehreren verschiedenen Plots in nur einem. - __PerformanceAnalytics__, __MuMIn__, __AICcmodavg__, __fitdistrplus__, __lme4__ und __sjPlot__ werden fuer die spaeteren multivariaten Analysen benoetigt. \n-Die Modellguete werden wir mittels __lattice__, __blmeco__ und __lattice__ pruefen.\n\n--> Lädt nun die benoetigten Bibliotheken.\n\n- Diese müssen zuerst mit _install.packages(\"NAME\")_ installiert werden.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Benoetigte Bibliotheken ####\nlibrary(tidyverse) # Data wrangling und piping\nlibrary(lubridate) # Arbeiten mit Datumsformaten\nlibrary(ggpubr)    # to arrange multiple plots in one graph\nlibrary(PerformanceAnalytics) # Plotte Korrelationsmatrix\nlibrary(MuMIn)     # Multi-Model Inference\nlibrary(AICcmodavg)# Modellaverageing\nlibrary(fitdistrplus)# Prueft die Verteilung in Daten\nlibrary(lme4)      # Multivariate Modelle\nlibrary(blmeco)    # Bayesian data analysis using linear models\nlibrary(sjPlot)    # Plotten von Modellergebnissen (tab_model)\nlibrary(lattice)   # einfaches plotten von Zusammenhängen zwischen Variablen\n```\n:::\n\n\n## Aufgabe 3: Zeitliche Definitionen\n\nWIr lesen später zwei verschiedene Datensätze ein. Beide sollen exakt denselben Zeitraum umfassen. Definiert dazu den ersten und letzten Tag gemäss den vorhandenen Zähldaten.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndepo_start <- as.Date(\"2017-01-01\")\ndepo_end <- as.Date(\"2022-7-31\")\n```\n:::\n\n\n\nWichtiger Teil unserer Auswertungen ist der Einfluss des Lockdown auf das Besuchsverhalten. \n\n-Wir müssen also Start und Ende der beiden Lockdowns in der Schweiz definieren:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlock_1_start_2020 <- as.Date(\"2020-03-16\")\nlock_1_end_2020 <- as.Date(\"2020-05-11\")\n\nlock_2_start_2021 <- as.Date(\"2020-12-22\")\nlock_2_end_2021 <- as.Date(\"2021-03-01\")\n```\n:::\n\n\nEbenfalls müssen die erste und letzte Kalenderwoche der Untersuchungsfrist definiert werden. Diese werden bei wochenweisen Analysen ausgeklammert da sie i.d.R. unvollstaendig sind (das ist ein späterer Arbeitsschritt). Geht wie oben vor. Tipp: der Befehl __isoweek()__ liefert euch die Kalenderwoche.\n\nFerienzeiten können einen grossen Einfluss auf das Besucheraufkommen haben. Die relevanten Ferienzeiträume (je nach dem müsst ihr das anpassen) müssen daher bekannt sein. Zur Definition der Ferien kann z.B. folgend vorgegangen werden:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# (https://www.schulferien.org/schweiz/ferien/2020/)\nWinterferien_2016_start <- as.Date(\"2017-01-01\") \nWinterferien_2016_ende <- as.Date(\"2017-01-08\")\n\nFruehlingsferien_2017_start <- as.Date(\"2017-04-15\") \nFruehlingsferien_2017_ende <- as.Date(\"2017-04-30\") \nSommerferien_2017_start <- as.Date(\"2017-07-15\") \nSommerferien_2017_ende <- as.Date(\"2017-08-20\") \nHerbstferien_2017_start <- as.Date(\"2017-10-07\") \nHerbstferien_2017_ende <- as.Date(\"2017-10-22\") \nWinterferien_2017_start <- as.Date(\"2017-12-23\") \nWinterferien_2017_ende <- as.Date(\"2018-01-07\") \n\nFruehlingsferien_2018_start <- as.Date(\"2018-04-21\") \nFruehlingsferien_2018_ende <- as.Date(\"2018-05-06\") \nSommerferien_2018_start <- as.Date(\"2018-07-14\") \nSommerferien_2018_ende <- as.Date(\"2018-08-19\") \nHerbstferien_2018_start <- as.Date(\"2018-10-06\") \nHerbstferien_2018_ende <- as.Date(\"2018-10-21\") \nWinterferien_2018_start <- as.Date(\"2018-12-22\") \nWinterferien_2018_ende <- as.Date(\"2019-01-06\") \n\nFruehlingsferien_2019_start <- as.Date(\"2019-04-20\") \nFruehlingsferien_2019_ende <- as.Date(\"2019-05-05\") \nSommerferien_2019_start <- as.Date(\"2019-07-13\") \nSommerferien_2019_ende <- as.Date(\"2019-08-18\") \nHerbstferien_2019_start <- as.Date(\"2019-10-05\") \nHerbstferien_2019_ende <- as.Date(\"2019-10-20\") \nWinterferien_2019_start <- as.Date(\"2019-12-21\") \nWinterferien_2019_ende <- as.Date(\"2020-01-05\")\n\nFruehlingsferien_2020_start <- as.Date(\"2020-04-11\")\nFruehlingsferien_2020_ende <- as.Date(\"2020-04-26\")\nSommerferien_2020_start <- as.Date(\"2020-07-11\")\nSommerferien_2020_ende <- as.Date(\"2020-08-16\")\nHerbstferien_2020_start <- as.Date(\"2020-10-03\")\nHerbstferien_2020_ende <- as.Date(\"2020-10-18\")\nWinterferien_2020_start <- as.Date(\"2020-12-19\")\nWinterferien_2020_ende <- as.Date(\"2021-01-03\")\n\nFruehlingsferien_2021_start <- as.Date(\"2021-04-24\")\nFruehlingsferien_2021_ende <- as.Date(\"2021-05-09\")\nSommerferien_2021_start <- as.Date(\"2021-07-17\")\nSommerferien_2021_ende <- as.Date(\"2021-08-22\")\nHerbstferien_2021_start <- as.Date(\"2021-10-09\")\nHerbstferien_2021_ende <- as.Date(\"2021-10-24\")\nWinterferien_2021_start <- as.Date(\"2021-12-18\")\nWinterferien_2021_ende <- as.Date(\"2022-01-02\")\n\nFruehlingsferien_2022_start <- as.Date(\"2022-04-16\")\nFruehlingsferien_2022_ende <- as.Date(\"2022-05-01\")\nSommerferien_2022_start <- as.Date(\"2022-07-16\")\nSommerferien_2022_ende <- as.Date(\"2022-08-21\")\nHerbstferien_2022_start <- as.Date(\"2022-10-08\")\nHerbstferien_2022_ende <- as.Date(\"2022-10-23\")\nWinterferien_2022_start <- as.Date(\"2022-12-24\")\nWinterferien_2022_ende <- as.Date(\"2023-01-08\")\n```\n:::\n\n\n__Nun sind alle Vorbereitungen gemacht, die Projektstruktur aufgebaut und die eigentliche Arbeit kann beginnen.__\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}