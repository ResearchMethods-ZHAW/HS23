[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Research Methods HS23",
    "section": "",
    "text": "Willkommen\nDas Modul „Research Methods” vermittelt vertiefte Methodenkompetenzen für praxisorientiertes und angewandtes wissenschaftliches Arbeiten im Fachbereich „Umwelt und Natürliche Ressourcen” auf MSc-Niveau. Die Studierenden erarbeiten sich vertiefte Methodenkompetenzen für die analytische Betrachtung der Zusammenhänge im Gesamtsystem „Umwelt und Natürliche Ressourcen”. Die Studierenden erlernen die methodischen Kompetenzen, auf denen die nachfolgenden Module im MSc Programm UNR aufbauen. Das Modul vermittelt einerseits allgemeine, fächerübergreifende methodische Kompetenzen (z.B. Wissenschaftstheorie, computer-gestützte Datenverarbeitung und Statistik).\nHier werden die Unterlagen für die R-Übungsteile bereitgestellt. Es werden sukzessive sowohl Demo-Files, Aufgabenstellungen und Lösungen veröffentlicht.\nDiese Website wurde am 2023-08-09 15:26:21 zum letzten Mal aktualisiert."
  },
  {
    "objectID": "PrePro.html",
    "href": "PrePro.html",
    "title": "Pre-Processing",
    "section": "",
    "text": "Die Datenkunde 2.0 gibt den Studierenden das Wissen und die Fertigkeiten an die Hand, selbst erhobene und bezogene Daten für Ihre eigenen Analysen vorzubereiten und anzureichern (preprocessing). Die Einheit vermittelt zentrale Datenverarbeitungskompetenzen und thematisiert bekannte Problemzonen der umweltwissenschaftlichen Datenverarbeitung – immer mit einer „hands-on” Perspektive auf die begleitenden R-Übungen. Die Studierenden lernen die Eigenschaften ihrer Datensätze in der Fachsprache korrekt zu beschreiben. Sie lernen ausserdem Metadaten zu verstehen und die Implikationen derselben für ihre eigenen Analyseprojekte kritisch zu beurteilen. Zentrale Konzepte der lesson sind Skalenniveaus, Datentypen, Zeitdaten und Typumwandlungen.\nDie Lesson vermittelt zentralste Fertigkeiten zur Vorverarbeitung von strukturierten Daten in der umweltwissenschaftlichen Forschung: Datensätze verbinden (Joins) und umformen („reshape”, „split-apply-combine”). Im Anwendungskontext haben Daten selten von Anfang an diejenige Struktur, welche für die statistische Auswertung oder für die Informationsvisualisierung erforderlich wäre. In dieser lesson lernen die Studierenden die für diese oft zeitraubenden Preprocessing-Schritte notwendigen Konzepte und R-Werkzeuge kennen und kompetent anzuwenden.\n\n\n\n\n\n\n\n\n\n\nTitel\n\n\nDatum\n\n\nLesson\n\n\nThema\n\n\n\n\n\n\nVorbereitung\n\n\n2023-10-10\n\n\nPrePro1\n\n\nVorbereitung\n\n\n\n\nPrepro 1: Demo\n\n\n2023-10-10\n\n\nPrePro1\n\n\nDatentypen\n\n\n\n\nPrePro 1: Übung\n\n\n2023-10-10\n\n\nPrePro1\n\n\nDatentypen\n\n\n\n\nPrepro 2: Demo\n\n\n2023-10-16\n\n\nPrePro2\n\n\nPiping / Joins\n\n\n\n\nPrepro 2: Übung A\n\n\n2023-10-16\n\n\nPrePro2\n\n\nPiping / Joins\n\n\n\n\nPrepro 2: Übung B\n\n\n2023-10-16\n\n\nPrePro2\n\n\nPiping / Joins\n\n\n\n\nPrepro 3: Demo\n\n\n2023-10-17\n\n\nPrePro3\n\n\nSplit-Apply-Combine\n\n\n\n\nPrepro 3: Übung\n\n\n2023-10-17\n\n\nPrePro3\n\n\nSplit-Apply-Combine\n\n\n\n\n\n\nKeine Treffer"
  },
  {
    "objectID": "prepro/Prepro1_Vorbereitung.html",
    "href": "prepro/Prepro1_Vorbereitung.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "Im Rahmen von Prepro 1 - 3 werden wir folgende Packages brauchen: dplyr, ggplot2, lubridate, readr und tidyr. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Einzelne Packages werden typischerweise folgendermassen installiert:\n\ninstall.packages(\"dplyr\")     # Anführungs- und Schlusszeichen sind zwingend\ninstall.packages(\"ggplot2\")\n...                           # usw.\n\nMit nachstehendem Code werden alle noch nicht installierten packages automatisch installiert.\n\nipak &lt;- function(pkg) {\n  new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) {\n    install.packages(new.pkg, dependencies = TRUE)\n  }\n}\n\npackages &lt;- c(\"dplyr\", \"ggplot\", \"lubridate\", \"readr\", \"tidyr\")\n\nipak(packages)\n\nZudem könnt ihr die Daten für die Übungen auf Moodle herunterladen."
  },
  {
    "objectID": "prepro/Prepro1_Demo.html#footnotes",
    "href": "prepro/Prepro1_Demo.html#footnotes",
    "title": "Prepro 1: Demo",
    "section": "",
    "text": "ordered = T kann nur bei der Funktion factor() spezifiziert werden, nicht bei as.factor(). Ansonsten sind factor() und as.factor() sehr ähnlich.↩︎"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#arbeiten-mit-rstudio-project",
    "href": "prepro/Prepro1_Uebung.html#arbeiten-mit-rstudio-project",
    "title": "PrePro 1: Übung",
    "section": "Arbeiten mit RStudio “Project”",
    "text": "Arbeiten mit RStudio “Project”\nWir empfehlen die Verwendung von “Projects” innerhalb von RStudio. RStudio legt für jedes Projekt dann einen Ordner an, in welches die Projekt-Datei abgelegt wird (Dateiendung .Rproj). Sollen innerhalb des Projekts dann R-Skripts geladen oder erzeugt werden, werden diese dann auch im angelegten Ordner abgelegt. Mehr zu RStudio Projects findet ihr hier.\nDas Verwenden von Projects bringt verschiedene Vorteile, wie zum Beispiel:\n\nFestlegen der Working Directory ohne die Verwendung des expliziten Pfades (setwd()). Das ist sinnvoll, da sich dieser Pfad ändern kann (Zusammenarbeit mit anderen Usern, Ausführung des Scripts zu einem späteren Zeitpunkt)\nAutomatisches Zwischenspeichern geöffneter Scripts und Wiederherstellung der geöffneten Scripts bei der nächsten Session\nFestlegen verschiedener projektspezifischer Optionen\nVerwendung von Versionsverwaltungssystemen (z.B. git)"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#arbeiten-mit-libraries-packages",
    "href": "prepro/Prepro1_Uebung.html#arbeiten-mit-libraries-packages",
    "title": "PrePro 1: Übung",
    "section": "Arbeiten mit Libraries / Packages",
    "text": "Arbeiten mit Libraries / Packages\nR ist ohne Zusatzpackete nicht mehr denkbar. Die allermeisten Packages werden auf CRAN gehostet und können leicht mittels install.packages() installiert werden. Eine sehr wichtige Sammlung von Packages wird von RStudio entwickelt. Unter dem Namen Tidyverse werden eine Reihe von Packages angeboten, den R-Alltag enorm erleichtert. Wir werden später näher auf das “Tidy”-Universum eingehen, an dieser Stelle können wir einfach mal die wichtigsten Packages aus tidyverse installieren (heute werden wir davon nur einen kleinen Teil benutzen).\n\ninstall.packages(\"dplyr\")\ninstall.packages(\"tidyr\")\ninstall.packages(\"readr\")\ninstall.packages(\"lubridate\")\ninstall.packages(\"ggplot2\")\n\nUm ein package in R verwenden zu können, gibt es zwei Möglichkeiten:\n\nentweder man lädt es zu Beginn der R-session mittles library(\"dplyr\") (ohne Anführungs- und Schlusszeichen).\noder man ruft eine function mit vorangestelltem Packetname sowie zwei Doppelpunkten auf. dplyr::filter() ruft die Funktion filter() des Packets dplyr auf.\n\nLetztere Notation ist vor allem dann sinnvoll, wenn sich zwei unterschiedliche Funktionen mit dem gleichen namen in verschiedenen pacakges existieren. filter() existiert als Funktion einersits im package dplyr sowie in stats. Dieses Phänomen nennt man “masking”.\nZu Beginn laden wir die nötigen Pakete:\n\nlibrary(\"readr\")\nlibrary(\"lubridate\")\n\n\n\n\n\n\n\nHinweis\n\n\n\nWir nutzen readr um csvs zu importieren und verwenden die Funktion read_csv (mit underscore) als alternative zu read.csv (mit Punkt). Das ist eine persönliche Präferenz1, es ist euch überlassen welche Funktion ihr verwendet. Beachtet, dass die beiden Funktionen leicht andere Parameter erwarten."
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-1",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-1",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nErstelle eine data.frame mit nachstehenden Daten.\n\n\n\n\n\nTierart\nAnzahl\nGewicht\nGeschlecht\nBeschreibung\n\n\n\n\nFuchs\n2\n4.4\nm\nRötlich\n\n\nBär\n5\n40.3\nf\nBraun, gross\n\n\nHase\n1\n1.1\nm\nklein, mit langen Ohren\n\n\nElch\n3\n120.0\nm\nLange Beine, Schaufelgeweih"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-2",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-2",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nWas für Datentypen wurden in der letzten Aufgabe automatisch angenommen? Ermittle diese mit str() und prüfe, ob diese sinnvoll sind und wandle um wo nötig."
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-3",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-3",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nNutze die Spalte Gewicht um die Tiere in 3 Gewichtskategorien einzuteilen:\n\nleicht: &lt; 5kg\nmittel: 5 - 100 kg\nschwer: &gt; 100kg\n\nDas Resultat:\n\n\n\n\n\n\n\n\n\n\n\n\n\nTierart\nAnzahl\nGewicht\nGeschlecht\nBeschreibung\nGewichtsklasse\n\n\n\n\nFuchs\n2\n4.4\nm\nRötlich\nleicht\n\n\nBär\n5\n40.3\nf\nBraun, gross\nmittel\n\n\nHase\n1\n1.1\nm\nklein, mit langen Ohren\nleicht\n\n\nElch\n3\n120.0\nm\nLange Beine, Schaufelgeweih\nschwer"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-4",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-4",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nImportiere den Datensatz weather.csv (Quelle MeteoSchweiz). Es handelt sich dabei um die stündlich gemittelten Temperaturdaten an verschiedenen Standorten in der Schweiz.\n\n\n\n\n\n\nWarnung\n\n\n\nWenn du read_csv verwenden möchtest: Diese Funktion erwartet leicht andere inputs als read.csv, konsultiere dazu die Hilfe zu read_csv (mit ?read_csv).\n\n\n\n\n\n\n\nstn\ntime\ntre200h0\n\n\n\n\nABO\n2000010100\n-2.6\n\n\nABO\n2000010101\n-2.5\n\n\nABO\n2000010102\n-3.1\n\n\nABO\n2000010103\n-2.4\n\n\nABO\n2000010104\n-2.5\n\n\nABO\n2000010105\n-3.0\n\n\nABO\n2000010106\n-3.7\n\n\nABO\n2000010107\n-4.4\n\n\nABO\n2000010108\n-4.1\n\n\nABO\n2000010109\n-4.1"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-5",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-5",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 5",
    "text": "Aufgabe 5\nSchau dir die Rückmeldung von read_csv()an. Sind die Daten korrekt interpretiert worden?"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-6",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-6",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 6",
    "text": "Aufgabe 6\nDie Spalte time ist eine Datum/Zeitangabe im Format JJJJMMTTHH (siehe meta.txt). Damit R dies als Datum-/Zeitangabe erkennt, müssen wir die Spalte in einem R-Format (POSIXct) einlesen und dabei R mitteilen, wie sie aktuell formatiert ist. Lies die Spalte mit as.POSIXct() ein und spezifiziere sowohl format wie auch tz.\n\n\n\n\n\n\nTipp\n\n\n\n\nWenn keine Zeitzone festgelegt wird, trifft as.POSIXct() eine Annahme (basierend auf Sys.timezone()). In unserem Fall handelt es sich aber um Werte in UTC (siehe metadata.csv)\nas.POSIXcterwartet character: Wenn du eine Fehlermeldung hast die 'origin' must be supplied (o.ä) heisst, hast du der Funktion vermutlich einen Numeric übergeben.\n\n\n\n\n\n\nDie neue Tabelle sollte so aussehen\n\n\nstn\ntime\ntre200h0\n\n\n\n\nABO\n2000-01-01 00:00:00\n-2.6\n\n\nABO\n2000-01-01 01:00:00\n-2.5\n\n\nABO\n2000-01-01 02:00:00\n-3.1\n\n\nABO\n2000-01-01 03:00:00\n-2.4\n\n\nABO\n2000-01-01 04:00:00\n-2.5\n\n\nABO\n2000-01-01 05:00:00\n-3.0\n\n\nABO\n2000-01-01 06:00:00\n-3.7\n\n\nABO\n2000-01-01 07:00:00\n-4.4\n\n\nABO\n2000-01-01 08:00:00\n-4.1\n\n\nABO\n2000-01-01 09:00:00\n-4.1"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-7",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-7",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 7",
    "text": "Aufgabe 7\nErstelle zwei neue Spalten mit Wochentag (Montag, Dienstag, etc) und Kalenderwoche. Verwende dazu die neu erstellte POSIXct-Spalte sowie eine geeignete Funktion aus lubridate.\n\n\n\n\n\nstn\ntime\ntre200h0\nwochentag\nkw\n\n\n\n\nABO\n2000-01-01 00:00:00\n-2.6\nSa.\n1\n\n\nABO\n2000-01-01 01:00:00\n-2.5\nSa.\n1\n\n\nABO\n2000-01-01 02:00:00\n-3.1\nSa.\n1\n\n\nABO\n2000-01-01 03:00:00\n-2.4\nSa.\n1\n\n\nABO\n2000-01-01 04:00:00\n-2.5\nSa.\n1\n\n\nABO\n2000-01-01 05:00:00\n-3.0\nSa.\n1\n\n\nABO\n2000-01-01 06:00:00\n-3.7\nSa.\n1\n\n\nABO\n2000-01-01 07:00:00\n-4.4\nSa.\n1\n\n\nABO\n2000-01-01 08:00:00\n-4.1\nSa.\n1\n\n\nABO\n2000-01-01 09:00:00\n-4.1\nSa.\n1"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#aufgabe-8",
    "href": "prepro/Prepro1_Uebung.html#aufgabe-8",
    "title": "PrePro 1: Übung",
    "section": "Aufgabe 8",
    "text": "Aufgabe 8\nErstelle eine neue Spalte basierend auf die Temperaturwerte mit der Einteilung “kalt” (unter Null Grad) und “warm” (über Null Grad)\n\n\n\n\n\nstn\ntime\ntre200h0\nwochentag\nkw\ntemp_kat\n\n\n\n\nABO\n2000-01-01 00:00:00\n-2.6\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 01:00:00\n-2.5\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 02:00:00\n-3.1\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 03:00:00\n-2.4\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 04:00:00\n-2.5\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 05:00:00\n-3.0\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 06:00:00\n-3.7\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 07:00:00\n-4.4\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 08:00:00\n-4.1\nSa.\n1\nkalt\n\n\nABO\n2000-01-01 09:00:00\n-4.1\nSa.\n1\nkalt"
  },
  {
    "objectID": "prepro/Prepro1_Uebung.html#footnotes",
    "href": "prepro/Prepro1_Uebung.html#footnotes",
    "title": "PrePro 1: Übung",
    "section": "",
    "text": "Vorteile von read_csv gegenüber read.csv: https://stackoverflow.com/a/60374974/4139249↩︎"
  },
  {
    "objectID": "prepro/Prepro2_Demo.html#piping",
    "href": "prepro/Prepro2_Demo.html#piping",
    "title": "Prepro 2: Demo",
    "section": "Piping",
    "text": "Piping\nGegeben ist ein character string (diary). Wir wollen aus diesem Text die Temperaturangabe aus dem String extrahieren und danach den Wert von Kelvin in Celsius nach der folgenden Formel umwandeln und zum Schluss den Mittelwert über all diese Werte berechnen.\n\\[°C = K - 273.15\\]\n\ndiary &lt;- c(\n  \"The temperature is 310° Kelvin\",\n  \"The temperature is 322° Kelvin\",\n  \"The temperature is 410° Kelvin\"\n)\n\ndiary\n## [1] \"The temperature is 310° Kelvin\" \"The temperature is 322° Kelvin\"\n## [3] \"The temperature is 410° Kelvin\"\n\nDazu brauchen wir die Funktion substr(), welche aus einem character einen Teil “raus schnipseln” kann.\n\n# Wenn die Buchstaben einzelne _Elemente_ eines Vektors wären, würden wir diese\n# folgendermassen subsetten:\n\ncharvec1 &lt;- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\")\ncharvec1[4:6]\n## [1] \"d\" \"e\" \"f\"\n\n# Aber wenn diese in einem einzigen character gespeichert sind, brauchen wir substr:\ncharvec2 &lt;- \"abcdefgh\"\nsubstr(charvec2, 4, 6)\n## [1] \"def\"\n\nZudem nutzen haben wir eine Hilfsfunktion subtrahieren, welche zwei Werte annimmt, den minuend und den subtrahend:\n\nsubtrahieren &lt;- function(minuend, subtrahend) {\n  minuend - subtrahend\n}\n\nsubtrahieren(10, 4)\n## [1] 6\n\nÜbersetzt in R-Code entsteht folgende Operation:\n\noutput &lt;- mean(subtrahieren(as.numeric(substr(diary, 20, 22)), 273.15))\n#                                             \\_1_/\n#                                      \\________2__________/\n#                           \\___________________3___________/\n#              \\________________________________4__________________/\n#         \\_____________________________________5____________________/\n\n# 1. Nimm diary\n# 2. Extrahiere auf jeder Zeile die Werte 20 bis 22\n# 3. Konvertiere \"character\" zu \"numeric\"\n# 4. Subtrahiere 273.15\n# 5. Berechne den Mittlwert\n\nDie ganze Operation liest sich etwas leichter, wenn diese sequentiell notiert wird:\n\ntemp &lt;- substr(diary, 20, 22)      # 2\ntemp &lt;- as.numeric(temp)           # 3\ntemp &lt;- subtrahieren(temp, 273.15) # 4\noutput &lt;- mean(temp)               # 5\n\nUmständlich ist dabei einfach, dass die Zwischenresultate immer abgespeichert und in der darauf folgenden Operation wieder abgerufen werden müssen. Hier kommt “piping” ins Spiel: Mit “piping” wird der Output der einen Funktion der erste Parameter der darauf folgenden Funktion.\n\ndiary |&gt;                  # 1\n  substr(20, 22) |&gt;       # 2\n  as.numeric() |&gt;         # 3\n  subtrahieren(273.15) |&gt; # 4\n  mean()                  # 5\n## [1] 74.18333\n\n\n\n\n\n\n\nWichtig\n\n\n\n\nder |&gt; Pipe Operator wurde erst in R 4.1 eingeführt\nNeben dem base R Pipe Operator existiert im Package magrittr ein sehr ähnlicher1 Pipe Operator: %&gt;%\nDie Tastenkombination Ctrl+Shift+M in RStudio fügt einen Pipe Operator ein.\nWelcher Pipe Operator |&gt; oder %&gt;% mit der obigen Tastenkombination eingeführt wird, kann über die RStudio Settings Tools → Global Options → Code → Häckchen setzen bei Use nativ pipe operator"
  },
  {
    "objectID": "prepro/Prepro2_Demo.html#joins",
    "href": "prepro/Prepro2_Demo.html#joins",
    "title": "Prepro 2: Demo",
    "section": "Joins",
    "text": "Joins\n\nstudierende &lt;- data.frame(\n  Matrikel_Nr = c(100002, 100003, 200003),\n  Studi = c(\"Patrick\", \"Manuela\", \"Eva\"),\n  PLZ = c(8006, 8001, 8820)\n)\n\nstudierende\n##   Matrikel_Nr   Studi  PLZ\n## 1      100002 Patrick 8006\n## 2      100003 Manuela 8001\n## 3      200003     Eva 8820\n\nortschaften &lt;- data.frame(\n  PLZ = c(8003, 8006, 8810, 8820),\n  Ortsname = c(\"Zürich\", \"Zürich\", \"Horgen\", \"Wädenswil\")\n)\n\nortschaften\n##    PLZ  Ortsname\n## 1 8003    Zürich\n## 2 8006    Zürich\n## 3 8810    Horgen\n## 4 8820 Wädenswil\n\n\n# Load library\nlibrary(\"dplyr\")\n\ninner_join(studierende, ortschaften, by = \"PLZ\")\n##   Matrikel_Nr   Studi  PLZ  Ortsname\n## 1      100002 Patrick 8006    Zürich\n## 2      200003     Eva 8820 Wädenswil\n\nleft_join(studierende, ortschaften, by = \"PLZ\")\n##   Matrikel_Nr   Studi  PLZ  Ortsname\n## 1      100002 Patrick 8006    Zürich\n## 2      100003 Manuela 8001      &lt;NA&gt;\n## 3      200003     Eva 8820 Wädenswil\n\nright_join(studierende, ortschaften, by = \"PLZ\")\n##   Matrikel_Nr   Studi  PLZ  Ortsname\n## 1      100002 Patrick 8006    Zürich\n## 2      200003     Eva 8820 Wädenswil\n## 3          NA    &lt;NA&gt; 8003    Zürich\n## 4          NA    &lt;NA&gt; 8810    Horgen\n\nfull_join(studierende, ortschaften, by = \"PLZ\")\n##   Matrikel_Nr   Studi  PLZ  Ortsname\n## 1      100002 Patrick 8006    Zürich\n## 2      100003 Manuela 8001      &lt;NA&gt;\n## 3      200003     Eva 8820 Wädenswil\n## 4          NA    &lt;NA&gt; 8003    Zürich\n## 5          NA    &lt;NA&gt; 8810    Horgen\n\n\nstudierende &lt;- data.frame(\n  Matrikel_Nr = c(100002, 100003, 200003),\n  Studi = c(\"Patrick\", \"Manuela\", \"Pascal\"),\n  Wohnort = c(8006, 8001, 8006)\n)\n\nleft_join(studierende, ortschaften, by = c(\"Wohnort\" = \"PLZ\"))\n##   Matrikel_Nr   Studi Wohnort Ortsname\n## 1      100002 Patrick    8006   Zürich\n## 2      100003 Manuela    8001     &lt;NA&gt;\n## 3      200003  Pascal    8006   Zürich"
  },
  {
    "objectID": "prepro/Prepro2_Demo.html#footnotes",
    "href": "prepro/Prepro2_Demo.html#footnotes",
    "title": "Prepro 2: Demo",
    "section": "",
    "text": "siehe https://stackoverflow.com/q/67633022/4139249↩︎"
  },
  {
    "objectID": "prepro/Prepro2_Uebung_A.html#aufgabe-1",
    "href": "prepro/Prepro2_Uebung_A.html#aufgabe-1",
    "title": "Prepro 2: Übung A",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nLese die Wetterdaten von letzer Woche weather.csv (Quelle MeteoSchweiz) in R ein. Sorge dafür, dass die Spalten korrekt formatiert sind (stn als factor, time als POSIXct, tre200h0 als numeric.)"
  },
  {
    "objectID": "prepro/Prepro2_Uebung_A.html#aufgabe-2",
    "href": "prepro/Prepro2_Uebung_A.html#aufgabe-2",
    "title": "Prepro 2: Übung A",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nLese den Datensatz metadata.csv ebenfalls als csv ein.\n\n\n\n\n\n\nTipp\n\n\n\nWenn Umlaute und Sonderzeichen nicht korrekt dargestellt werden (z.B. das è in Genève), hat das vermutlich mit der Zeichencodierung zu tun. Das File ist aktuell in UTF-8 codiert. Wenn Umlaute nicht korrekt dargestellt werden, hat R diese Codierung nicht erkannt und sie muss in der Import-Funktion spezifitiert werden. Dies wird je nach verwendete import Funktion unterschiedlich gemacht:\n\nFunktionen aus dem Package readr: locale = locale(encoding = \"UTF-8\")\nBase-R Funktionen: fileEncoding = \"UTF-8\"\n\nWenn ihr die codierung eines Files nicht kennt, könnt wie folgt vorgehen: Anleitung für Windows, für Mac und für Linux."
  },
  {
    "objectID": "prepro/Prepro2_Uebung_A.html#aufgabe-3",
    "href": "prepro/Prepro2_Uebung_A.html#aufgabe-3",
    "title": "Prepro 2: Übung A",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nNun wollen wir den Datensatz wettermit den Informationen aus metadata anreichern. Uns interessiert aber nur das Stationskürzel, der Name, die x/y Koordinaten sowie die Meereshöhe, selektiere diese Spalten."
  },
  {
    "objectID": "prepro/Prepro2_Uebung_A.html#aufgabe-4",
    "href": "prepro/Prepro2_Uebung_A.html#aufgabe-4",
    "title": "Prepro 2: Übung A",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nJetzt kann metadata mit dem Datensatz wetter verbunden werden. Überlege dir, welcher Join dafür sinnvoll ist und mit welchem Attribut wir “joinen” können.\nNutze die Join-Möglichkeiten von dplyr (Hilfe via ?dplyr::join) um die Datensätze wetter und metadata zu verbinden."
  },
  {
    "objectID": "prepro/Prepro2_Uebung_A.html#aufgabe-5",
    "href": "prepro/Prepro2_Uebung_A.html#aufgabe-5",
    "title": "Prepro 2: Übung A",
    "section": "Aufgabe 5",
    "text": "Aufgabe 5\nErstelle eine neue Spalte month welche den jeweiligen Monat (aus time) beinhaltet. Nutze dafür die Funktion lubridate::month()."
  },
  {
    "objectID": "prepro/Prepro2_Uebung_A.html#aufgabe-6",
    "href": "prepro/Prepro2_Uebung_A.html#aufgabe-6",
    "title": "Prepro 2: Übung A",
    "section": "Aufgabe 6",
    "text": "Aufgabe 6\nBerechne mit der Spalte month die Durchschnittstemperatur pro Monat."
  },
  {
    "objectID": "prepro/Prepro2_Uebung_B.html#aufgabe-1",
    "href": "prepro/Prepro2_Uebung_B.html#aufgabe-1",
    "title": "Prepro 2: Übung B",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nGegeben sind die Daten von drei Sensoren (sensor1.csv, sensor2.csv, sensor3.csv). Lese die Datensätze ein."
  },
  {
    "objectID": "prepro/Prepro2_Uebung_B.html#aufgabe-2",
    "href": "prepro/Prepro2_Uebung_B.html#aufgabe-2",
    "title": "Prepro 2: Übung B",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nErstelle aus den 3 Dataframes eine einzige Dataframe, die aussieht wie unten dargestellt. Nutze dafür zwei joins aus dplyr um 3 data.frames miteinander zu verbinden. Bereinige im Anschluss die Spaltennamen (wie geht das?).\n\n\n\n\n\nDatetime\nsensor1\nsensor2\nsensor3\n\n\n\n\n16102017_1800\n23.5\n13.5\n26.5\n\n\n17102017_1800\n25.4\n24.4\n24.4\n\n\n18102017_1800\n12.4\n22.4\n13.4\n\n\n19102017_1800\n5.4\n12.4\n7.4\n\n\n23102017_1800\n23.5\n13.5\nNA\n\n\n24102017_1800\n21.3\n11.3\nNA"
  },
  {
    "objectID": "prepro/Prepro2_Uebung_B.html#aufgabe-3",
    "href": "prepro/Prepro2_Uebung_B.html#aufgabe-3",
    "title": "Prepro 2: Übung B",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nImportiere die Datei sensor_fail.csv in R.\nsensor_fail.csv hat eine Variabel SensorStatus: 1 bedeutet der Sensor misst, 0 bedeutet der Sensor misst nicht. Fälschlicherweise wurde auch dann der Messwert Temp = 0 erfasst, wenn Sensorstatus = 0. Richtig wäre hier NA (not available). Korrigiere den Datensatz entsprechend.\n\n\n\n\n\nSensor\nTemp\nHum_%\nDatetime\nSensorStatus\n\n\n\n\nSen102\n0.6\n98\n16102017_1800\n1\n\n\nSen102\n0.3\n96\n17102017_1800\n1\n\n\nSen102\n0.0\n87\n18102017_1800\n1\n\n\nSen102\n0.0\n86\n19102017_1800\n0\n\n\nSen102\n0.0\n98\n23102017_1800\n0\n\n\nSen102\n0.0\n98\n24102017_1800\n0\n\n\nSen102\n0.0\n96\n25102017_1800\n1\n\n\nSen103\n-0.3\n87\n26102017_1800\n1\n\n\nSen103\n-0.7\n98\n27102017_1800\n1\n\n\nSen103\n-1.2\n98\n28102017_1800\n1"
  },
  {
    "objectID": "prepro/Prepro2_Uebung_B.html#aufgabe-4",
    "href": "prepro/Prepro2_Uebung_B.html#aufgabe-4",
    "title": "Prepro 2: Übung B",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nWarum spielt das es eine Rolle, ob 0 oder NA erfasst wird? Berechne die Mittlere der Temperatur / Feuchtigkeit nach der Korrektur."
  },
  {
    "objectID": "prepro/Prepro3_Demo.html#split-apply-combine",
    "href": "prepro/Prepro3_Demo.html#split-apply-combine",
    "title": "Prepro 3: Demo",
    "section": "Split-Apply-Combine",
    "text": "Split-Apply-Combine\n\nDaten Laden\nWir laden die Wetterdaten (Quelle MeteoSchweiz) der letzten Übung.\n\nwetter &lt;- read_csv(\"datasets/prepro/weather.csv\")\n\nwetter &lt;- wetter |&gt;\n  mutate(\n    stn = as.factor(stn),\n    time = as.POSIXct(as.character(time), format = \"%Y%m%d%H\")\n  )\n\n\n\nKennwerte berechnen\nWir möchten den Mittelwert aller gemessenen Temperaturwerte berechnen. Dazu könnten wir folgenden Befehl verwenden:\n\nmean(wetter$tre200h0, na.rm = TRUE)\n## [1] 6.324744\n\nDie Option na.rm = T bedeutet, dass NA Werte von der Berechnung ausgeschlossen werden sollen.\nMit der selben Herangehensweise können diverse Werte berechnet werden (z.B. das Maximum (max()), Minimum (min()), Median (median()) u.v.m.).\nDiese Herangehensweise funktioniert nur dann gut, wenn wir die Kennwerte über alle Beobachtungen für eine Variable (Spalte) berechnen wollen. Sobald wir die Beobachtungen gruppieren wollen, wird es schwierig. Zum Beispiel, wenn wir die durchschnittliche Temperatur pro Monat berechnen wollen.\n\n\nConvenience Variablen\nUm diese Aufgabe zu lösen, muss zuerst der Monat extrahiert werden (der Monat ist die convenience variable). Hierfür brauchen wir die Funktion lubridate::month().\nNun kann kann die convenience Variable “Month” erstellt werden. Ohne dpylr wird eine neue Spalte folgendermassen hinzugefügt.\n\nwetter$month &lt;- month(wetter$time)\n\nMit dplyr (siehe 3) sieht der gleiche Befehl folgendermassen aus:\n\nwetter &lt;- mutate(wetter, month = month(time))\n\nDer grosse Vorteil von dplyr ist an dieser Stelle noch nicht ersichtlich. Dieser wird aber später klar.\n\n\nKennwerte nach Gruppen berechnen\nUm mit base R den Mittelwert pro Monat zu berechnen, kann man zuerst ein Subset mit [] erstellen und davon den Mittelwert berechnen, z.B. folgendermassen:\n\nmean(wetter$tre200h0[wetter$month == 1], na.rm = TRUE)\n## [1] -1.963239\n\nDies müssen wir pro Monat wiederholen, was natürlich sehr umständlich ist. Deshalb nutzen wir das package dplyr. Damit geht die Aufgabe (Temperaturmittel pro Monat berechnen) folgendermassen:\n\nsummarise(group_by(wetter, month), temp_mittel = mean(tre200h0, na.rm = TRUE))\n## # A tibble: 13 × 2\n##    month temp_mittel\n##    &lt;dbl&gt;       &lt;dbl&gt;\n##  1     1      -1.96 \n##  2     2       0.355\n##  3     3       2.97 \n##  4     4       4.20 \n##  5     5      11.0  \n##  6     6      12.4  \n##  7     7      13.0  \n##  8     8      15.0  \n##  9     9       9.49 \n## 10    10       8.79 \n## 11    11       1.21 \n## 12    12      -0.898\n## 13    NA       2.95\n\n\n\nVerketten vs. verschachteln\nAuf Deutsch übersetzt heisst die obige Operation folgendermassen:\n\nnimm den Datensatz wetter\nBilde Gruppen pro Jahr (group_by(wetter,year))\nBerechne das Temperaturmittel (mean(tre200h0))\n\nDiese Übersetzung R-&gt; Deutsch unterscheidet sich vor allem darin, dass die Operation auf Deutsch verkettet ausgesprochen wird (Operation 1-&gt;2-&gt;3) während der Computer verschachtelt liest 3(2(1)). Um R näher an die gesprochene Sprache zu bringen, kann man den |&gt;-Operator verwenden (siehe 4).\n\n# 1 nimm den Datensatz \"wetter\"\n# 2 Bilde Gruppen pro Monat\n# 3 berechne das Temperaturmittel\n\nsummarise(group_by(wetter, month), temp_mittel = mean(tre200h0))\n#                  \\_1_/\n#         \\__________2_________/\n# \\__________________3_______________________________________/\n\n# wird zu:\n\nwetter |&gt;                                 # 1\n  group_by(month) |&gt;                      # 2\n  summarise(temp_mittel = mean(tre200h0)) # 3\n\nDieses Verketten mittels |&gt; (genannt “pipe”) macht den Code einiges schreib- und leserfreundlicher, und wir werden ihn in den nachfolgenden Übungen verwenden. Die “pipe” wird mit dem package magrittr bereitgestellt und mit dplyr mitinstalliert.\nZu dplyr gibt es etliche Tutorials online (siehe5), deshalb werden wir diese Tools nicht in allen Details erläutern. Nur noch folgenden wichtigen Unterschied zu zwei wichtigen Funktionen in dpylr: mutate() und summarise().\n\nsummarise() fasst einen Datensatz zusammen. Dabei reduziert sich die Anzahl Beobachtungen (Zeilen) auf die Anzahl Gruppen (z.B. eine zusammengefasste Beobachtung (Zeile) pro Jahr). Zudem reduziert sich die Anzahl Variablen (Spalten) auf diejenigen, die in der “summarise” Funktion spezifiziert wurde (z.B. temp_mittel).\nmit mutate wird ein data.frame vom Umfang her belassen, es werden lediglich zusätzliche Variablen (Spalten) hinzugefügt (siehe Beispiel unten).\n\n\n# Maximal und minimal Temperatur pro Kalenderwoche\nweather_summary &lt;- wetter |&gt;                # 1) nimm den Datensatz \"wetter\"\n  filter(month == 1) |&gt;                     # 2) filter auf den Monat Januar\n  mutate(day = day(time)) |&gt;                # 3) erstelle eine neue Spalte \"day\"\n  group_by(day) |&gt;                          # 4) Nutze die neue Spalte um Gruppen zu bilden\n  summarise(\n    temp_max = max(tre200h0, na.rm = TRUE), # 5) Berechne das Maximum\n    temp_min = min(tre200h0, na.rm = TRUE)  # 6) Berechne das Minimum\n  )\n\nweather_summary\n## # A tibble: 31 × 3\n##      day temp_max temp_min\n##    &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n##  1     1      5.8     -4.4\n##  2     2      2.8     -4.3\n##  3     3      4.2     -3.1\n##  4     4      4.7     -2.8\n##  5     5     11.4     -0.6\n##  6     6      6.7     -1.6\n##  7     7      2.9     -2.8\n##  8     8      0.2     -3.6\n##  9     9      2.1     -8.8\n## 10    10      1.6     -2.4\n## # ℹ 21 more rows"
  },
  {
    "objectID": "prepro/Prepro3_Demo.html#reshaping-data",
    "href": "prepro/Prepro3_Demo.html#reshaping-data",
    "title": "Prepro 3: Demo",
    "section": "Reshaping data",
    "text": "Reshaping data\n\nBreit → lang\nDie Umformung von Tabellen breit→lang erfolgt mittels tidyr(siehe 6). Auch dieses Package funktioniert wunderbar mit piping (|&gt;).\n\nweather_summary |&gt;\n  pivot_longer(c(temp_max, temp_min))\n## # A tibble: 62 × 3\n##      day name     value\n##    &lt;int&gt; &lt;chr&gt;    &lt;dbl&gt;\n##  1     1 temp_max   5.8\n##  2     1 temp_min  -4.4\n##  3     2 temp_max   2.8\n##  4     2 temp_min  -4.3\n##  5     3 temp_max   4.2\n##  6     3 temp_min  -3.1\n##  7     4 temp_max   4.7\n##  8     4 temp_min  -2.8\n##  9     5 temp_max  11.4\n## 10     5 temp_min  -0.6\n## # ℹ 52 more rows\n\nIm Befehl pivot_longer() müssen wir festlegen, welche Spalten zusammengefasst werden sollen (hier: temp_max,temp_min,temp_mean). Alternativ können wir angeben, welche Spalten wir nicht zusammenfassen wollen:\n\nweather_summary |&gt;\n  pivot_longer(-day)\n## # A tibble: 62 × 3\n##      day name     value\n##    &lt;int&gt; &lt;chr&gt;    &lt;dbl&gt;\n##  1     1 temp_max   5.8\n##  2     1 temp_min  -4.4\n##  3     2 temp_max   2.8\n##  4     2 temp_min  -4.3\n##  5     3 temp_max   4.2\n##  6     3 temp_min  -3.1\n##  7     4 temp_max   4.7\n##  8     4 temp_min  -2.8\n##  9     5 temp_max  11.4\n## 10     5 temp_min  -0.6\n## # ℹ 52 more rows\n\nWenn wir die Namen neuen Spalten festlegen wollen (anstelle von name und value) erreichen wir dies mit names_to bzw. values_to:\n\nweather_summary_long &lt;- weather_summary |&gt;\n  pivot_longer(-day, names_to = \"Messtyp\", values_to = \"Messwert\")\n\nDie ersten 6 Zeilen von weather_summary_long:\n\n\n\n\n\nday\nMesstyp\nMesswert\n\n\n\n\n1\ntemp_max\n5.8\n\n\n1\ntemp_min\n-4.4\n\n\n2\ntemp_max\n2.8\n\n\n2\ntemp_min\n-4.3\n\n\n3\ntemp_max\n4.2\n\n\n3\ntemp_min\n-3.1\n\n\n\n\n\nDie ersten 6 Zeilen von wetter_sry:\n\n\n\n\n\nday\ntemp_max\ntemp_min\n\n\n\n\n1\n5.8\n-4.4\n\n\n2\n2.8\n-4.3\n\n\n3\n4.2\n-3.1\n\n\n4\n4.7\n-2.8\n\n\n5\n11.4\n-0.6\n\n\n6\n6.7\n-1.6\n\n\n\n\n\nBeachte: weather_summary_long umfasst 62 Beobachtungen (Zeilen), das sind doppelt soviel wie weather_summary, da wir ja zwei Spalten zusammengefasst haben.\n\nnrow(weather_summary)\n## [1] 31\nnrow(weather_summary_long)\n## [1] 62\n\nLange Tabellen sind in verschiedenen Situationen praktischer. Beispielsweise ist das Visualisieren mittels ggplot2 (dieses Package werdet ihr im Block “InfoVis” kennenlernen) mit long tables wesentlich einfacher.\n\nggplot(weather_summary_long, aes(day, Messwert, colour = Messtyp)) +\n  geom_line()\n\n\n\n\n\n\nLang → breit\nDas Gegenstück zu pivot_longer ist pivot_wider. Mit dieser Funktion können wir eine lange Tabelle in eine breite überführen. Dazu müssen wir in names_from angeben, aus welcher Spalte die neuen Spaltennamen erstellt werden sollen (names_from) und aus welcher Spalte die Werte entstammen sollen (values_from):\n\nweather_summary_long |&gt;\n  pivot_wider(names_from = Messtyp, values_from = Messwert)\n## # A tibble: 31 × 3\n##      day temp_max temp_min\n##    &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n##  1     1      5.8     -4.4\n##  2     2      2.8     -4.3\n##  3     3      4.2     -3.1\n##  4     4      4.7     -2.8\n##  5     5     11.4     -0.6\n##  6     6      6.7     -1.6\n##  7     7      2.9     -2.8\n##  8     8      0.2     -3.6\n##  9     9      2.1     -8.8\n## 10    10      1.6     -2.4\n## # ℹ 21 more rows\n\nZum Vergleich: mit einer wide table müssen wir in ggplot2 jede Spalte einzeln plotten. Dies ist bei wenigen Variabeln wie hier noch nicht problematisch, aber bei einer hohen Anzahl wird dies schnell mühsam.\n\nggplot(weather_summary) +\n  geom_line(aes(day, temp_max)) +\n  geom_line(aes(day, temp_min))\n\n\n\n\n\n\n\n\nWickham, Hadley, und Garrett Grolemund. 2017. R for Data Science. O’Reilly. https://ebookcentral.proquest.com/lib/zhaw/detail.action?docID=4770093."
  },
  {
    "objectID": "prepro/Prepro3_Demo.html#footnotes",
    "href": "prepro/Prepro3_Demo.html#footnotes",
    "title": "Prepro 3: Demo",
    "section": "",
    "text": "http://r4ds.had.co.nz/↩︎\nhttps://ebookcentral.proquest.com/lib/zhaw/detail.action?docID=4770093↩︎\nWickham und Grolemund (2017), Kapitel 10 / http://r4ds.had.co.nz/transform.html↩︎\nWickham und Grolemund (2017), Kapitel 14 / http://r4ds.had.co.nz/pipes.html↩︎\nWickham und Grolemund (2017), Kapitel 10 / http://r4ds.had.co.nz/transform.html, oder Hands-on dplyr tutorial..↩︎\nhttps://r4ds.had.co.nz/tidy-data.html#pivoting↩︎"
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-1",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-1",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nGegeben sei ein Datensatz sensors_combined.csv, mit den Temperaturwerten von drei verschiedenen Sensoren. Importiere ihn als csv in R (als sensors_combined).\nFormatiere die Datetime Spalte in POSIXct um. Verwende dazu die Funktion as.POSIXct (lies mit ?strftime() nochmal nach wie du das spezfische Format (die “Schablone”) festlegen kannst."
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-2",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-2",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nÜberführe die Tabelle in ein langes Format (verwende dazu die Funktion pivot_longer aus tidyr) und speichere den output als sensors_long.\nTipp:\n\nim Argument cols kannst du entweder die Spalten auflisten, die “pivotiert” werden sollen.\nAlternativ kannst du (mit vorangestelltem Minuszeichen, -) die Spalte, bezeichnen, die nicht pivotiert werden soll.\nIn beiden Fällen musst du die Spalten weder mit Anführungs- und Schlusszeichen noch mit dem $-Zeichen versehen."
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-3",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-3",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nGruppiere sensors_long nach der neuen Spalte wo die Sensor-Information enthalten ist (default: name) mit group_by und berechne die mittlere Temperatur pro Sensor (summarise). Hinweis: Beide Funktionen sind Teil des Packages dplyr.\nDer Output sieht folgendermassen aus:\n\n## # A tibble: 3 × 2\n##   name    temp_mean\n##   &lt;chr&gt;       &lt;dbl&gt;\n## 1 sensor1      14.7\n## 2 sensor2      12.0\n## 3 sensor3      14.4"
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-4",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-4",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nErstelle für sensors_long eine neue convenience Variabel month welche den Monat beinhaltet (Tipp: verwende dazu die Funktion month aus lubridate). Gruppiere nun nach month und Sensor und berechne die mittlere Temperatur."
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-5",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-5",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 5",
    "text": "Aufgabe 5\nLade jetzt nochmal den Datensatz weather.csv (Quelle MeteoSchweiz) herunter und importiere ihn als CSV mit den korrekten Spaltentypen (stn als factor, time als POSIXct, tre200h0 als double)."
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-6",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-6",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 6",
    "text": "Aufgabe 6\nErstelle nun eine convenience Variable für die Kalenderwoche pro Messung (lubridate::isoweek). Berechne im Anschluss den mittleren Temperaturwert pro Kalenderwoche.\nVisualisiere im Anschluss das Resultat:"
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-7",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-7",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 7",
    "text": "Aufgabe 7\nIn der vorherigen Aufgabe haben wir die mittlere Temperatur pro Kalenderwoche über alle Jahre (2000 und 2001) berechnet. Wenn wir die Jahre aber miteinander vergleichen wollen, müssen wir das Jahr als zusätzliche convenience Variable erstellen und danach gruppieren. Versuche dies mit den Wetterdaten und visualisiere den Output anschliessend.\n\n\n\n\n\nAbbildung 8.1: baseplot mag keine long tables und macht aus den beiden Jahren eine kontinuierliche Linie"
  },
  {
    "objectID": "prepro/Prepro3_Uebung.html#aufgabe-8",
    "href": "prepro/Prepro3_Uebung.html#aufgabe-8",
    "title": "Prepro 3: Übung",
    "section": "Aufgabe 8",
    "text": "Aufgabe 8\nÜberführe den Output aus der letzten Übung in eine wide table. Nun lassen sich die beiden Jahre viel besser miteinander vergleichen."
  },
  {
    "objectID": "InfoVis.html#infovis-1",
    "href": "InfoVis.html#infovis-1",
    "title": "Informationsvisualisierung",
    "section": "Infovis 1",
    "text": "Infovis 1\nDie konventionelle schliessende Statistik arbeitet in der Regel konfirmatorisch, sprich aus der bestehenden Theorie heraus werden Hypothesen formuliert, welche sodann durch Experimente geprüft und akzeptiert oder verworfen werden. Die Explorative Datenanalyse (EDA) nimmt dazu eine antagonistische Analyseperspektive ein und will in den Daten zunächst Zusammenhänge aufdecken, welche dann wiederum zur Formulierung von prüfbaren Hypothesen führen kann. Die Einheit stellt dazu den klassischen 5-stufigen EDA-Prozess nach Tukey (1980!) vor. Abschliessend wird dann noch die Brücke geschlagen zur modernen Umsetzung der EDA in Form von Visual Analytics."
  },
  {
    "objectID": "InfoVis.html#infovis-2",
    "href": "InfoVis.html#infovis-2",
    "title": "Informationsvisualisierung",
    "section": "Infovis 2",
    "text": "Infovis 2\nDie Informationsvisualisierung ist eine vielseitige, effektive und effiziente Methode für die explorative Datenanalyse. Während Scatterplots und Histogramme weitherum bekannt sind, bieten weniger bekannte Informationsvisualisierungs-Typen wie etwa Parallelkoordinatenplots, TreeMaps oder Chorddiagramme originelle alternative Darstellungsformen zur visuellen Analyse von Datensätze, welche stets grösser und komplexer werden. Die Studierenden lernen in dieser lesson eine Reihe von Informationsvisualisierungstypen kennen, lernen diese zielführend zu gestalten und selber zu erstellen."
  },
  {
    "objectID": "infovis/Infovis1_Vorbereitung.html",
    "href": "infovis/Infovis1_Vorbereitung.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "Im Rahmen von InfoVis 1 - 2 werden wir einige R Packages brauchen. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Analog Kapitel 1 könnt ihr mit nachstehendem Code alle noch nicht installierten packages automatisch installieren.\n\nipak &lt;- function(pkg) {\n  new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) {\n    install.packages(new.pkg, dependencies = TRUE)\n  }\n}\n\npackages &lt;- c(\"dplyr\", \"ggplot\", \"lubridate\", \"readr\", \"scales\", \"tidyr\")\n\nipak(packages)\n\nZudem könnt ihr die Daten für die Übungen auf Moodle herunterladen."
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#base-plot-vs.-ggplot",
    "href": "infovis/Infovis1_Demo.html#base-plot-vs.-ggplot",
    "title": "Infovis 1: Demo A",
    "section": "Base-plot vs. ggplot",
    "text": "Base-plot vs. ggplot\nUm in “base-R” einen Scatterplot zu erstellen wo Datum der Temperatur gegenübersteht, gehen wir wie folgt vor:\n\nplot(temperature$time, temperature$SHA, type = \"l\", col = \"red\")\nlines(temperature$time, temperature$ZER, col = \"blue\")\n\n\n\n\nIn ggplot sieht das etwas anders und auf den ersten Blick etwas komplizierter aus: Ein plot wird durch den Befehl ggplot() initiiert. Hier wird einerseits der Datensatz festgelegt, auf dem der Plot beruht (data =), sowie die Variablen innerhalb des Datensatzes, die Einfluss auf den Plot ausüben (mapping = aes()).\n\n# Datensatz: \"temperature\" | Beeinflussende Variabeln: \"time\" und \"temp\"\nggplot(data = temperature, mapping = aes(time, SHA))\n\n\n\n\nWeiter braucht es mindestens ein “Layer” der beschreibt, wie die Daten dargestellt werden sollen (z.B. geom_point()). Anders als bei “Piping” (|&gt;) wird ein Layer mit + hinzugefügt.\n\nggplot(data = temperature, mapping = aes(time, SHA)) +\n  # Layer: \"geom_point\" entspricht Punkten in einem Scatterplot\n  geom_point()\n\n\n\n\nDa ggplot die Eingaben in der Reihenfolge data = und dann mapping =erwartet, können wir diese Spezifizierungen auch weglassen.\n\nggplot(temperature, aes(time, SHA)) +\n  geom_point()"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#long-vs.-wide",
    "href": "infovis/Infovis1_Demo.html#long-vs.-wide",
    "title": "Infovis 1: Demo A",
    "section": "Long vs. wide",
    "text": "Long vs. wide\nWie wir in PrePro 2 bereits erwähnt haben, ist ggplot2 auf long tables ausgelegt. Wir überführen deshalb an dieser Stelle die breite in eine lange Tabelle:\n\ntemperature_long &lt;- pivot_longer(temperature, -time, names_to = \"station\", values_to = \"temp\")\n\nNun wollen wir die unterschiedlichen Stationen unterschiedlich einfärben. Da wir Variablen definieren wollen, welche Einfluss auf die Grafik haben sollen, gehört diese Information in aes().\n\nggplot(temperature_long, aes(time, temp, colour = station)) +\n  geom_point()\n\n\n\n\nWir können noch einen Layer mit Linien hinzufügen:\n\nggplot(temperature_long, aes(time, temp, colour = station)) +\n  geom_point() +\n  geom_line()"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#beschriftungen-labels",
    "href": "infovis/Infovis1_Demo.html#beschriftungen-labels",
    "title": "Infovis 1: Demo A",
    "section": "Beschriftungen (labels)",
    "text": "Beschriftungen (labels)\nWeiter können wir die Achsen beschriften und einen Titel hinzufügen. Zudem lasse ich die Punkte (geom_point()) nun weg, da mir diese nicht gefallen.\n\nggplot(temperature_long, aes(time, temp, colour = station)) +\n  geom_line() +\n  labs(\n    x = \"Zeit\",\n    y = \"Temperatur in Grad C°\",\n    title = \"Temperaturdaten Schweiz\",\n    subtitle = \"2001 bis 2002\",\n    color = \"Station\"\n  )"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#split-apply-combine",
    "href": "infovis/Infovis1_Demo.html#split-apply-combine",
    "title": "Infovis 1: Demo A",
    "section": "Split Apply Combine",
    "text": "Split Apply Combine\nIm obigen Plot fällt auf, dass stündliche Werte eine zu hohe Auflösung ist, wenn wir daten über 2 Jahre visualisieren. Mit Split Apply Combine (PrePro 3) können wir die Auflösung unserer Daten verändern:\n\ntemperature_day &lt;- temperature_long |&gt;\n  mutate(time = as.Date(time))\n\ntemperature_day\n## # A tibble: 35,088 × 3\n##    time       station  temp\n##    &lt;date&gt;     &lt;chr&gt;   &lt;dbl&gt;\n##  1 2000-01-01 SHA       0.2\n##  2 2000-01-01 ZER      -8.8\n##  3 2000-01-01 SHA       0.3\n##  4 2000-01-01 ZER      -8.7\n##  5 2000-01-01 SHA       0.3\n##  6 2000-01-01 ZER      -9  \n##  7 2000-01-01 SHA       0.3\n##  8 2000-01-01 ZER      -8.7\n##  9 2000-01-01 SHA       0.4\n## 10 2000-01-01 ZER      -8.5\n## # ℹ 35,078 more rows\n\ntemperature_day &lt;- temperature_day |&gt;\n  group_by(station, time) |&gt;\n  summarise(temp = mean(temp))\n\ntemperature_day\n## # A tibble: 1,462 × 3\n## # Groups:   station [2]\n##    station time        temp\n##    &lt;chr&gt;   &lt;date&gt;     &lt;dbl&gt;\n##  1 SHA     2000-01-01  1.25\n##  2 SHA     2000-01-02  1.73\n##  3 SHA     2000-01-03  1.59\n##  4 SHA     2000-01-04  1.78\n##  5 SHA     2000-01-05  4.66\n##  6 SHA     2000-01-06  3.49\n##  7 SHA     2000-01-07  3.87\n##  8 SHA     2000-01-08  3.28\n##  9 SHA     2000-01-09  3.24\n## 10 SHA     2000-01-10  3.24\n## # ℹ 1,452 more rows"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#xy-achse-anpassen",
    "href": "infovis/Infovis1_Demo.html#xy-achse-anpassen",
    "title": "Infovis 1: Demo A",
    "section": "X/Y-Achse anpassen",
    "text": "X/Y-Achse anpassen\nMan kann auch Einfluss auf die x-/y-Achsen nehmen. Dabei muss man zuerst festlegen, was für ein Achsentyp der Plot hat (vorher hat ggplot eine Annahme auf der Basis der Daten getroffen).\nBei unserer y-Achse handelt es sich um numerische Daten, ggplot nennt diese: scale_y_continuous(). Unter ggplot2.tidyverse.org findet man noch andere x/y-Achsentypen (scale_x_irgenwas bzw. scale_y_irgendwas).\n\nggplot(temperature_day, aes(time, temp, colour = station)) +\n  geom_line() +\n  labs(\n    x = \"Zeit\",\n    y = \"Temperatur in Grad C°\",\n    title = \"Temperaturdaten Schweiz\",\n    subtitle = \"2001 bis 2002\",\n    color = \"Station\"\n  ) +\n  scale_y_continuous(limits = c(-30, 30)) # y-Achsenabschnitt bestimmen\n\n\n\n\nDas gleiche Spiel kann man für die y-Achse betreiben. Bei unserer y-Achse handelt es sich ja um Datumsangaben. ggplot nennt diese: scale_x_date().\n\nggplot(temperature_day, aes(time, temp, colour = station)) +\n  geom_line() +\n  labs(\n    x = \"Zeit\",\n    y = \"Temperatur in Grad C°\",\n    title = \"Temperaturdaten Schweiz\",\n    subtitle = \"2001 bis 2002\",\n    color = \"Station\"\n  ) +\n  scale_y_continuous(limits = c(-30, 30)) +\n  scale_x_date(\n    date_breaks = \"3 months\",\n    date_labels = \"%b\"\n  )"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#themes",
    "href": "infovis/Infovis1_Demo.html#themes",
    "title": "Infovis 1: Demo A",
    "section": "Themes",
    "text": "Themes\nMit theme verändert man das allgmeine Layout der Plots. Beispielsweise kann man mit theme_classic() ggplot-Grafiken etwas weniger “Poppig” erscheinen lassen: so sind sie besser für Bachelor- / Masterarbeiten sowie Publikationen geeignet. theme_classic() kann man indiviudell pro Plot anwenden, oder für die aktuelle Session global setzen (s.u.)\nIndividuell pro Plot:\n\nggplot(temperature_day, aes(time, temp, colour = station)) +\n  geom_line() +\n  theme_classic()\n\nGlobal (für alle nachfolgenden Plots der aktuellen Session):\n\ntheme_set(theme_classic())"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#facets-small-multiples",
    "href": "infovis/Infovis1_Demo.html#facets-small-multiples",
    "title": "Infovis 1: Demo A",
    "section": "Facets / Small Multiples",
    "text": "Facets / Small Multiples\nSehr praktisch sind auch die Funktionen für “Small multiples”. Dies erreicht man mit facet_wrap() (oder facet_grid(), mehr dazu später). Man muss mit einem Tilde-Symbol “~” nur festlegen, welche Variable für das Aufteilen des Plots in kleinere Subplots verantwortlich sein soll.\n\nggplot(temperature_day, aes(time, temp, colour = station)) +\n  geom_line() +\n  labs(\n    x = \"Zeit\",\n    y = \"Temperatur in Grad C°\",\n    title = \"Temperaturdaten Schweiz\",\n    subtitle = \"2001 bis 2002\",\n    color = \"Station\"\n  ) +\n  scale_y_continuous(limits = c(-30, 30)) +\n  scale_x_date(\n    date_breaks = \"3 months\",\n    date_labels = \"%b\"\n  ) +\n  facet_wrap(station ~ .)\n\n\n\n\nAuch facet_wrap kann man auf seine Bedürfnisse anpassen: Beispielweise kann man mit ncol = die Anzahl facets pro Zeile bestimmen.\nZudem brauchen wir die Legende nicht mehr, da der Stationsnamen über jedem Facet steht. Ich setze deshalb theme(legend.position=\"none\")\n\nggplot(temperature_day, aes(time, temp, colour = station)) +\n  geom_line() +\n  labs(\n    x = \"Zeit\",\n    y = \"Temperatur in Grad C°\",\n    title = \"Temperaturdaten Schweiz\",\n    subtitle = \"2001 bis 2002\"\n  ) +\n  scale_y_continuous(limits = c(-30, 30)) +\n  scale_x_date(\n    date_breaks = \"3 months\",\n    date_labels = \"%b\"\n  ) +\n  facet_wrap(~station, ncol = 1) +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#in-variabel-abspeichern-und-exportieren",
    "href": "infovis/Infovis1_Demo.html#in-variabel-abspeichern-und-exportieren",
    "title": "Infovis 1: Demo A",
    "section": "In Variabel abspeichern und Exportieren",
    "text": "In Variabel abspeichern und Exportieren\nGenau wie data.frames und andere Objekte, kann man einen ganzen Plot auch in einer Variabel speichern. Dies kann nützlich sein um einen Plot zu exportieren (als png, jpg usw.) oder sukzessive erweitern wie in diesem Beispiel.\n\np &lt;- ggplot(temperature_day, aes(time, temp, colour = station)) +\n  geom_line() +\n  labs(\n    x = \"Zeit\",\n    y = \"Temperatur in Grad C°\",\n    title = \"Temperaturdaten Schweiz\",\n    subtitle = \"2001 bis 2002\"\n  ) +\n  scale_y_continuous(limits = c(-30, 30)) +\n  scale_x_date(\n    date_breaks = \"3 months\",\n    date_labels = \"%b\"\n  ) +\n  facet_wrap(~station, ncol = 1)\n# ich habe an dieser Stelle theme(legend.position=\"none\") entfernt\n\nFolgendermassen kann ich den Plot als png-File abspeichern (ohne Angabe von “plot =” wird einfach der letzte Plot gespeichert)\n\nggsave(filename = \"plot.png\", plot = p)\n\n.. und so kann ich einen bestehenden Plot (in einer Variabel) mit einem Layer / einer Option erweitern\n\np +\n  theme(legend.position = \"none\")\n\nWie üblich wurde diese Änderung nicht gespeichert, sondern nur das Resultat davon ausgeben. Wenn die Änderung in meinem Plot (in der Variabel) abspeichern will, muss ich die Variabel überschreiben:\n\np &lt;- p +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "infovis/Infovis1_Demo.html#smoothing",
    "href": "infovis/Infovis1_Demo.html#smoothing",
    "title": "Infovis 1: Demo A",
    "section": "Smoothing",
    "text": "Smoothing\nMit geom_smooth() kann ggplot eine Trendlinie auf der Baiss von Punktdaten berechnen. Die zugrunde liegende statistische Methode kann selbst gewählt werden (ohne Angabe verwendet ggplot bei &lt; 1’000 Messungen stats::loess, ansonsten mgcv::gam)\n\np &lt;- p +\n  geom_smooth(colour = \"black\")\np"
  },
  {
    "objectID": "infovis/Infovis1_Script_eda.html",
    "href": "infovis/Infovis1_Script_eda.html",
    "title": "Infovis 1: Demo B",
    "section": "",
    "text": "library(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"scales\")\n\n# create some data about age and height of people\npeople &lt;- data.frame(\n  ID = c(1:30),\n  age = c(\n    5.0, 7.0, 6.5, 9.0, 8.0, 5.0, 8.6, 7.5, 9.0, 6.0,\n    63.5, 65.7, 57.6, 98.6, 76.5, 78.0, 93.4, 77.5, 256.6, 512.3,\n    15.5, 18.6, 18.5, 22.8, 28.5, 39.5, 55.9, 50.3, 31.9, 41.3\n  ),\n  height = c(\n    0.85, 0.93, 1.1, 1.25, 1.33, 1.17, 1.32, 0.82, 0.89, 1.13,\n    1.62, 1.87, 1.67, 1.76, 1.56, 1.71, 1.65, 1.55, 1.87, 1.69,\n    1.49, 1.68, 1.41, 1.55, 1.84, 1.69, 0.85, 1.65, 1.94, 1.80\n  ),\n  weight = c(\n    45.5, 54.3, 76.5, 60.4, 43.4, 36.4, 50.3, 27.8, 34.7, 47.6,\n    84.3, 90.4, 76.5, 55.6, 54.3, 83.2, 80.7, 55.6, 87.6, 69.5,\n    48.0, 55.6, 47.6, 60.5, 54.3, 59.5, 34.5, 55.4, 100.4, 110.3\n  )\n)\n\n# build a scatterplot for a first inspection\nggplot(people, aes(x = age, y = height)) +\n  geom_point()\n\n\n\n\n\nggplot(people, aes(x = age, y = height)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0.75, 2))\n\n\n\n# Go to help page: http://docs.ggplot2.org/current/ -&gt; Search for icon of fit-line\n# http://docs.ggplot2.org/current/geom_smooth.html\n\n\n# build a scatterplot for a first inspection, with regression line\nggplot(people, aes(x = age, y = height)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, 2.0)) +\n  geom_smooth()\n\n\n\n\n\n# stem and leaf plot\nstem(people$height)\n## \n##   The decimal point is 1 digit(s) to the left of the |\n## \n##    8 | 25593\n##   10 | 037\n##   12 | 523\n##   14 | 19556\n##   16 | 255789916\n##   18 | 04774\nstem(people$height, scale = 2)\n## \n##   The decimal point is 1 digit(s) to the left of the |\n## \n##    8 | 2559\n##    9 | 3\n##   10 | \n##   11 | 037\n##   12 | 5\n##   13 | 23\n##   14 | 19\n##   15 | 556\n##   16 | 2557899\n##   17 | 16\n##   18 | 0477\n##   19 | 4\n\n\n# explore the two variables with box-whiskerplots\nsummary(people$age)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##    5.00    8.70   30.20   59.14   65.15  512.30\nboxplot(people$age)\n\n\n\n\n\nsummary(people$height)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   0.820   1.190   1.555   1.455   1.690   1.940\nboxplot(people$height)\n\n\n\n\n\n# explore data with a histgram\nggplot(people, aes(x = age)) +\n  geom_histogram(binwidth = 20)\n\n\n\n\n\ndensity(x = people$height)\n## \n## Call:\n##  density.default(x = people$height)\n## \n## Data: people$height (30 obs.);   Bandwidth 'bw' = 0.1576\n## \n##        x                y           \n##  Min.   :0.3472   Min.   :0.001593  \n##  1st Qu.:0.8636   1st Qu.:0.102953  \n##  Median :1.3800   Median :0.510601  \n##  Mean   :1.3800   Mean   :0.483553  \n##  3rd Qu.:1.8964   3rd Qu.:0.722660  \n##  Max.   :2.4128   Max.   :1.216350\n\n# re-expression: use log or sqrt axes\n#\n# Find here guideline about scaling axes\n# http://www.cookbook-r.com/Graphs/Axes_(ggplot2)/\n# http://docs.ggplot2.org/0.9.3.1/scale_continuous.html\n\n\n# logarithmic axis: respond to skewness in the data, e.g. log10\nggplot(people, aes(x = age, y = height)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, 2.0)) +\n  geom_smooth() +\n  scale_x_log10()\n\n\n\n\n\n# outliers: Remove very small and very old people\n\npeopleClean &lt;- people |&gt;\n  filter(ID != 27) |&gt; # Diese Person war zu klein.\n  filter(age &lt; 100) # Fehler in der Erhebung des Alters\n\n\nggplot(peopleClean, aes(x = age)) +\n  geom_histogram(binwidth = 10)\n\n\n\n\n\nggplot(peopleClean, aes(x = age, y = height)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, 2.0)) +\n  geom_smooth()\n\n\n\n\n\n# with custom binwidth\nggplot(peopleClean, aes(x = age)) +\n  geom_histogram(binwidth = 10) +\n  theme_bw() # specifying the theme\n\n\n\n\n\n# quadratic axis\nggplot(peopleClean, aes(x = age, y = height)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, 2.0)) +\n  geom_smooth(method = \"lm\", fill = \"lightblue\", size = 0.5, alpha = 0.5) +\n  scale_x_sqrt()\n\n\n\n\n\n# filter \"teenies\": No trend\nfilter(peopleClean, age &lt; 15) |&gt;\n  ggplot(aes(x = age, y = height)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, 2.0)) +\n  geom_smooth(method = \"lm\", fill = \"lightblue\", size = 0.5, alpha = 0.5)\n\n\n\n\n\n# filter \"teenies\": No trend\npeopleClean |&gt;\n  filter(age &gt; 55) |&gt;\n  ggplot(aes(x = age, y = height)) +\n  geom_point() +\n  scale_y_continuous(limits = c(0, 2.0)) +\n  geom_smooth(method = \"lm\", fill = \"lightblue\", size = 0.5, alpha = 0.5)\n\n\n\n\n\n# Onwards towards multidimensional data\n\n# Finally, make a scatterplot matrix\npairs(peopleClean[, 2:4], panel = panel.smooth)\n\n\n\n\n\npairs(peopleClean[, 2:4], panel = panel.smooth)"
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-1",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-1",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nRekonstrukturiere folgenden Plot aus Kovic (2014) mithilfe von ggplot und dem tagi_data_kanton.csv Datensatz:\nTipp:\n\nNutze ggplot(kanton, aes(auslanderanteil, ja_anteil)) um den ggplot zu initiieren. Füge danach ein einen Punkte Layer hinzu (geom_point())\nNutze coord_fixed() um die beiden Achsen in ein fixes Verhältnis zu setzen (1:1).\nOptional:\n\nSetze die Achsen Start- und Endwerte mittels scale_y_continuous bzw. scale_x_continuous.\nSetze analog Kovic (2014) die breaks (0.0, 0.1…0.7) manuell (innerhalb scale_*_continuous)\nNutze labs() für die Beschriftung der Achsen"
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-2",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-2",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nRekonstrukturiere folgenden Plot aus Kovic (2014) mithilfe von ggplot:\nTipp:\n\nNutze geom_smooth"
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-3",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-3",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nImportiere die Gemeindedaten tagi_data_gemeinden.csv.\nRekonstrukturiere folgenden Plot aus Kovic (2014) mithilfe von ggplot und dem tagi_data_gemeinden.csv Datensatz:\nTipp:\n\nNutze geom_point()\nNutze labs()\nNutze coord_fixed()"
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-4",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-4",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nRekonstrukturiere folgenden Plot aus Kovic (2014) mithilfe von ggplot und dem tagi_data_gemeinden.csv Datensatz:\nTipp:\n\nNutze geom_smooth"
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-5",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-5",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 5",
    "text": "Aufgabe 5\nRekonstrukturiere folgenden Plot aus Kovic (2014) mithilfe von ggplot und dem tagi_data_gemeinden.csv Datensatz:\nTipp:\n\nNutze facet_wrap um einen Plot pro Kanton darzustellen."
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-6",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-6",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 6",
    "text": "Aufgabe 6\nRekonstrukturiere folgenden Plot aus Kovic (2014) mithilfe von ggplot und dem tagi_data_gemeinden.csv Datensatz:\nTipp:\n\nNutze geom_smooth"
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-7",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-7",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 7",
    "text": "Aufgabe 7\nRekonstrukturieren folgenden Plot aus Kovic (2014) mithilfe von ggplot und dem tagi_data_gemeinden.csv Datensatz:\nTipp:\n\nNutze facet_wrap"
  },
  {
    "objectID": "infovis/Infovis1_Uebung.html#aufgabe-8",
    "href": "infovis/Infovis1_Uebung.html#aufgabe-8",
    "title": "Infovis 1: Übung",
    "section": "Aufgabe 8",
    "text": "Aufgabe 8\nRekonstrukturiere folgenden Plot aus Kovic (2014) mithilfe von ggplot und dem tagi_data_gemeinden.csv Datensatz:\nTipp:\n\nNutze geom_smooth\n\n\n\n\n\n\n\n\n\n\nKovic, Marko. 2014. „Je weniger Ausländer, desto mehr Ja-Stimmen? Wirklich?“ Tagesanzeiger Datenblog. https://blog.tagesanzeiger.ch/datenblog/index.php/668/je-weniger-auslaender-desto-mehr-ja-stimmen-wirklich."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-1",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-1",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nMache aus der wide table eine long table die wie folgt aussieht.\nImportiere anschliessend den Datensatz temperature_2005_metadata.csv und verbinde die beiden Datensätze mit einem left_join via station (bzw. stn)."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-2",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-2",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nErstelle ein Scatterplot (time vs. temperature) wobei die Punkte aufgrund ihrer Meereshöhe eingefärbt werden sollen. Tiefe Werte sollen dabei blau eingefärbt werden und hohe Werte rot (scale_color_gradient). Verkleinere die Punkte um übermässiges Überplotten der Punkten zu vermeiden (size =). Weiter sollen auf der x-Achse im Abstand von 3 Monaten der jeweilige Monat vermerkt sein (date_breaks bzw. date_labels von scale_x_datetime())."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-3",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-3",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nErstelle eine Zusatzvariabel Date mit dem Datum der jeweiligen Messung ( mit as.Date). Nutze diese Spalte um die Tagesmitteltemperatur pro Station zu berechnen (mit summarise()).\nUm die Metadaten (Name, Meereshoehe, x, y) nicht zu verlieren kannst du den Join aus der ersten Übung wieder ausführen. Alternativ (schneller aber auch schwerer zu verstehen) kannst du diese Variabeln innerhalb deines group_by verwenden."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-4",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-4",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nWiederhole nun den Plot aus der ersten Aufgabe mit den aggregierten Daten aus der vorherigen Aufgabe. Um die labels korrekt zu setzen musst du scale_x_datetime mit scale_x_date ersetzen."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-5",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-5",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 5",
    "text": "Aufgabe 5\nFüge am obigen Plot eine schwarze, gestrichelte Trendlinie hinzu."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-6",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-6",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 6",
    "text": "Aufgabe 6\nPositioniere die Legende oberhalb des Plots (nutze dazu theme() mit legend.position)."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-7-optional-fortgeschritten",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-7-optional-fortgeschritten",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 7 (optional, fortgeschritten)",
    "text": "Aufgabe 7 (optional, fortgeschritten)\nFüge den Temperaturwerten auf der y-Ache ein °C hinzu (siehe unten und studiere diesen Tipp zur Hilfe)."
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-8",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-8",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 8",
    "text": "Aufgabe 8\nJetzt verlassen wir den Scatterplot und machen einen Boxplot mit den Temperaturdaten. Färbe die Boxplots wieder in Abhängigkeit der Meereshöhe ein.\n\nBeachte den Unterschied zwischen colour = und fill =\nBeachte den Unterschied zwischen facet_wrap() und facet_grid()\nfacet_grid() braucht übrigens noch einen Punkt (.) zur Tilde (~).\nBeachte den Unterschied zwischen “.~” und “~.” bei facet_grid()\nverschiebe nach Bedarf die Legende"
  },
  {
    "objectID": "infovis/Infovis2_Uebung_A.html#aufgabe-9",
    "href": "infovis/Infovis2_Uebung_A.html#aufgabe-9",
    "title": "Infovis 2: Übung A",
    "section": "Aufgabe 9",
    "text": "Aufgabe 9\nAls letzter wichtiger Plottyp noch zwei Übungen zum Histogramm. Erstelle ein Histogramm geom_histogram() mit den Temperaturwerten. Teile dazu die Stationen in verschiedene Höhenlagen ein (Tieflage [&lt; 400 m], Mittellage [400 - 600 m] und Hochlage [&gt; 600 m]). Vergleiche die Verteilung der Temperaturwerte in den verschiedenen Lagen mit einem Histogramm.\nTip: Nutze cut um die Stationen in die drei Gruppen aufzuteilen"
  },
  {
    "objectID": "infovis/Infovis2_Uebung_B.html#aufgabe-1-parallel-coordinate-plots",
    "href": "infovis/Infovis2_Uebung_B.html#aufgabe-1-parallel-coordinate-plots",
    "title": "Infovis 2: Übung B",
    "section": "Aufgabe 1: Parallel coordinate plots",
    "text": "Aufgabe 1: Parallel coordinate plots\nErstelle einen parallel coordinate plot. Dafür eignet sich der integrierte Datensatz mtcars. Extrahiere die Fahrzeugnamen mit rownames_to_column.\nZudem müssen die Werte jeweiles auf eine gemeinsame Skala normalisiert werden. Hierfür kannst du die Funktion scales::rescale verwenden.\nSo sieht der fertige Plot aus:"
  },
  {
    "objectID": "infovis/Infovis2_Uebung_B.html#aufgabe-2-polar-plot-mit-biber-daten",
    "href": "infovis/Infovis2_Uebung_B.html#aufgabe-2-polar-plot-mit-biber-daten",
    "title": "Infovis 2: Übung B",
    "section": "Aufgabe 2: Polar Plot mit Biber Daten",
    "text": "Aufgabe 2: Polar Plot mit Biber Daten\nPolar Plots eignen sich unter anderem für Daten, die zyklischer Natur sind, wie zum Beispiel zeitlich geprägte Daten (Tages-, Wochen-, oder Jahresrhythmen). Aus den Beispiels-Datensätzen habe ich zwei Datensätze gefunden, die zeitlich geprägt sind:\n\nbeaver1 und beaver2\nAirPassenger\n\nBeide Datensätze müssen noch etwas umgeformt werden, bevor wir sie für einen Radialplot verwenden können. In Aufgabe 2 verwenden wir die Biber-Datensätze, in der nächsten Aufgabe (3) die Passagier-Daten.\nWenn wir die Daten von beiden Bibern verwenden wollen, müssen wir diese noch zusammenfügen.\nZudem müssen wir die Zeitangabe noch anpassen: Gemäss der Datenbeschreibung handelt es sich bei der Zeitangabe um ein sehr programmier-unfreundliches Format. 3:30 wird als “0330” notiert. Wir müssen diese Zeitangabe, noch in ein Dezimalsystem umwandeln.\nSo sieht der fertige Plot aus:"
  },
  {
    "objectID": "infovis/Infovis2_Uebung_B.html#aufgabe-3-raster-visualisierung-mit-flugpassagieren",
    "href": "infovis/Infovis2_Uebung_B.html#aufgabe-3-raster-visualisierung-mit-flugpassagieren",
    "title": "Infovis 2: Übung B",
    "section": "Aufgabe 3: Raster Visualisierung mit Flugpassagieren",
    "text": "Aufgabe 3: Raster Visualisierung mit Flugpassagieren\nAnalog Aufgabe 2, dieses Mal mit dem Datensatz AirPassanger\nAirPassengers kommt in einem Format daher, das ich selbst noch gar nicht kannte. Es sieht zwar aus wie ein data.frame oder eine matrix, ist aber von der Klasse ts.\nDamit wir den Datensatz verwenden können, müssen wir ihn zuerst in eine matrix umwandeln. Wie das geht habe ich hier erfahren.\nAus der matrix muss noch ein Dataframe her, zudem müssen wir aus der breiten Tabelle eine lange Tabelle machen.\nSo sieht der fertige Plot aus:"
  },
  {
    "objectID": "Stat1-4.html",
    "href": "Stat1-4.html",
    "title": "Statistik 1 - 4",
    "section": "",
    "text": "Statistik 1\nIn Statistik 1 lernen die Studierenden, was (Inferenz-) Statistik im Kern leistet und warum sie für wissenschaftliche Erkenntnis (in den meisten Disziplinen) unentbehrlich ist. Nach einer Wiederholung der Rolle von Hypothesen wird erläutert, wie Hypothesentests in der frequentist-Statistik umgesetzt werden, einschliesslich p-Werten und Signifikanz-Levels. Die praktische Statistik beginnt mit den beiden einfachsten Fällen, dem Chi-Quadrat-Test für die Assoziation zwischen zwei kategorialen Variablen und dem t-Test auf Unterschiede in Mittelwerten zwischen zwei Gruppen. Abschliessend beschäftigen wir uns damit, wie man Ergebnisse statistischer Analysen am besten in Abbildungen, Tabellen und Text darstellt.\n\n\n\n\n\n\nStatistik 2\nIn Statistik 2 lernen die Studierenden die Idee, die Voraussetzungen und die praktische Anwendung „einfacher“ linearer Modelle in R (sowie teilweise ihrer „nicht-parametrischen“ bzw. „robusten“ Äquivalente). Am Anfang steht die Varianzanalyse (ANOVA) als Verallgemeinerung des t-Tests, einschliesslich post-hoc-Tests und mehrfaktorieller ANOVA. Dann geht es um die Voraussetzungen parametrischer (und nicht-parametrischer) Tests und Optionen, wenn diese verletzt sind. Dann beschäftigen wir uns mit Korrelationen, die auf einen linearen Zusammenhang zwischen zwei metrischen Variablen testen, ohne Annahme einer Kausalität. Es folgen einfache lineare Regressionen, die im Prinzip das Gleiche bei klarer Kausalität leisten. Abschliessend besprechen wir, was die grosse Gruppe linearer Modelle (Befehl lm in R) auszeichnet.\n\n\n\n\nStatistik 3\nStatistik 3 fassen wir zu Beginn den generellen Ablauf inferenzstatistischer Analysen in einem Flussdiagramm zusammen. Dann wird die ANCOVA als eine Technik vorgestellt, die eine ANOVA mit einer linearen Regression verbindet. Danach geht es um komplexere Versionen linearer Regressionen. Hier betrachten wir polynomiale Regressionen, die z. B. einen Test auf unimodale Beziehungen erlaubt, indem man dieselbe Prädiktorvariable linear und quadriert einspeist. Multiple Regressionen versuchen dagegen, eine abhängige Variable durch zwei oder mehr verschieden Prädiktorvariablen zu erklären. Wir thematisieren verschiedene dabei auftretende Probleme und ihre Lösung, insbesondere den Umgang mit korrelierten Prädiktoren und das Aufspüren des besten unter mehreren möglichen statistischen Modellen. Hieran wird auch der informatian theoretician-Ansatz der Statistik und die multimodel inference eingeführt.\n\n\nStatistik 4\nHeute geht es hauptsächlich um generalized linear models (GLMs), die einige wesentliche Limitierungen von linearen Modellen überwinden. Indem sie Fehler- und Varianzstrukturen explizit modellieren, ist man nicht mehr an Normalverteilung der Residuen und Varianzhomogenität gebunden. Bei generalized linear regressions muss man sich zwischen verschiedenen Verteilungen und link-Strukturen entscheiden. Spezifisch werden wir uns die Poisson-Regressionen für Zähldaten und die logistische Regression für ja/nein-Daten anschauen. Danach folgt ein Einstieg in nicht-lineare Regressionen, die es erlauben, etwa Potenzgesetze oder Sättigungsfunktionen direkt zu modellieren. Zum Abschluss gibt es einen Ausblick auf Glättungsverfahren (LOWESS) und general additive models (GAMs).\n\n\n\n\n\n\n\n\n\n\n\nTitel\n\n\nDatum\n\n\nLesson\n\n\nThema\n\n\n\n\n\n\nVorbereitung\n\n\n2023-10-30\n\n\nStat1\n\n\nVorbereitung\n\n\n\n\nStat1: Demo\n\n\n2023-10-30\n\n\nStat1\n\n\nGrundlagen der Statistik\n\n\n\n\nStat1: NOVANIMAL\n\n\n2023-10-30\n\n\nStat1\n\n\nGrundlagen der Statistik\n\n\n\n\nStat1: Übung\n\n\n2023-10-30\n\n\nStat1\n\n\nGrundlagen der Statistik\n\n\n\n\nStat2: Demo\n\n\n2023-10-31\n\n\nStat2\n\n\nEinführung in lineare Modelle\n\n\n\n\nStat2: Übung\n\n\n2023-10-31\n\n\nStat2\n\n\nEinführung in lineare Modelle\n\n\n\n\nStat2: Lösung Beispiel\n\n\n2023-10-31\n\n\nStat2\n\n\nEinführung in lineare Modelle\n\n\n\n\nStat3: Demo\n\n\n2023-11-06\n\n\nStat3\n\n\nLineare Modelle II\n\n\n\n\nStat3: Übung\n\n\n2023-11-06\n\n\nStat3\n\n\nLineare Modelle II\n\n\n\n\nStat4: Demo\n\n\n2023-11-07\n\n\nStat4\n\n\nKomplexere Regressionsmethoden\n\n\n\n\nStat4: Übung\n\n\n2023-11-07\n\n\nStat4\n\n\nKomplexere Regressionsmethoden\n\n\n\n\n\n\nKeine Treffer"
  },
  {
    "objectID": "stat1-4/Statistik1_Vorbereitung.html",
    "href": "stat1-4/Statistik1_Vorbereitung.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "Im Rahmen von Statistik 1 - 4 werden wir einige R Packages brauchen. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Analog der Vorbereitungsübung in Prepro1 könnt ihr mit nachstehendem Code alle noch nicht installierten packages automatisch installieren.\n\nipak &lt;- function(pkg) {\n    new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n    if (length(new.pkg)) {\n        install.packages(new.pkg, dependencies = TRUE)\n    }\n}\n\npackages &lt;- c(\n    \"agricolae\", \"ggplot2\", \"dplyr\", \"readr\", \"car\", \"FSA\", \"sjPlot\", \"ggfortify\", \"multcomp\",\n    \"nlstools\", \"corrplot\", \"corrplot\", \"MuMIn\", \"AER\", \"AICcmodavg\", \"mgcv\"\n)\n\nipak(packages)\n\nZudem könnt ihr die Daten für die Übungen auf Moodle herunterladen."
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#daten-generieren-und-anschauen",
    "href": "stat1-4/Statistik1_Demo.html#daten-generieren-und-anschauen",
    "title": "Stat1: Demo",
    "section": "Daten generieren und anschauen",
    "text": "Daten generieren und anschauen\n\na &lt;- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14)\nb &lt;- c(12, 15, 16, 7, 8, 10, 12, 11, 13, 10)\nblume &lt;- data.frame(a, b)\nblume\n##     a  b\n## 1  20 12\n## 2  19 15\n## 3  25 16\n## 4  10  7\n## 5   8  8\n## 6  15 10\n## 7  13 12\n## 8  18 11\n## 9  11 13\n## 10 14 10\nsummary(blume)\n##        a               b        \n##  Min.   : 8.00   Min.   : 7.00  \n##  1st Qu.:11.50   1st Qu.:10.00  \n##  Median :14.50   Median :11.50  \n##  Mean   :15.30   Mean   :11.40  \n##  3rd Qu.:18.75   3rd Qu.:12.75  \n##  Max.   :25.00   Max.   :16.00\nboxplot(blume$a, blume$b)\n\n\n\nboxplot(blume)\n\n\n\nhist(blume$a)\n\n\n\nhist(blume$b)"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#zweiseitiger-t-test",
    "href": "stat1-4/Statistik1_Demo.html#zweiseitiger-t-test",
    "title": "Stat1: Demo",
    "section": "Zweiseitiger t-Test",
    "text": "Zweiseitiger t-Test\n\nt.test(blume$a, blume$b) # Zweiseitig \"Test auf a ≠ b\" (default)\n## \n##  Welch Two Sample t-test\n## \n## data:  blume$a and blume$b\n## t = 2.0797, df = 13.907, p-value = 0.05654\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -0.1245926  7.9245926\n## sample estimates:\n## mean of x mean of y \n##      15.3      11.4"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#einseitiger-t-test",
    "href": "stat1-4/Statistik1_Demo.html#einseitiger-t-test",
    "title": "Stat1: Demo",
    "section": "Einseitiger t-Test",
    "text": "Einseitiger t-Test\n\nt.test(blume$a, blume$b, alternative = \"greater\") # Einseitig \"Test auf a &gt; b\"\n## \n##  Welch Two Sample t-test\n## \n## data:  blume$a and blume$b\n## t = 2.0797, df = 13.907, p-value = 0.02827\n## alternative hypothesis: true difference in means is greater than 0\n## 95 percent confidence interval:\n##  0.5954947       Inf\n## sample estimates:\n## mean of x mean of y \n##      15.3      11.4\nt.test(blume$a, blume$b, alternative = \"less\") # Einseitig \"Test auf a &lt; b\"\n## \n##  Welch Two Sample t-test\n## \n## data:  blume$a and blume$b\n## t = 2.0797, df = 13.907, p-value = 0.9717\n## alternative hypothesis: true difference in means is less than 0\n## 95 percent confidence interval:\n##      -Inf 7.204505\n## sample estimates:\n## mean of x mean of y \n##      15.3      11.4"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#klassischer-t-test-vs.-welch-test",
    "href": "stat1-4/Statistik1_Demo.html#klassischer-t-test-vs.-welch-test",
    "title": "Stat1: Demo",
    "section": "Klassischer t-Test vs. Welch Test",
    "text": "Klassischer t-Test vs. Welch Test\n\n# Varianzen gleich: klassischer t-Test\nt.test(blume$a, blume$b, var.equal = TRUE)\n## \n##  Two Sample t-test\n## \n## data:  blume$a and blume$b\n## t = 2.0797, df = 18, p-value = 0.05212\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -0.03981237  7.83981237\n## sample estimates:\n## mean of x mean of y \n##      15.3      11.4\n\n# Varianzen ungleich: Welch's t-Test (siehe Titelzeile des R-Outputs!)\nt.test(blume$a, blume$b) # dasselbe wie var.equal = FALSE\n## \n##  Welch Two Sample t-test\n## \n## data:  blume$a and blume$b\n## t = 2.0797, df = 13.907, p-value = 0.05654\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -0.1245926  7.9245926\n## sample estimates:\n## mean of x mean of y \n##      15.3      11.4"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#gepaarter-t-test",
    "href": "stat1-4/Statistik1_Demo.html#gepaarter-t-test",
    "title": "Stat1: Demo",
    "section": "Gepaarter t-Test",
    "text": "Gepaarter t-Test\n\n# Gepaarter t-Test: erster Wert von a wird mit erstem Wert von\n# b gepaart, zweiter Wert von a mit zweitem von b ect.\nt.test(blume$a, blume$b, paired = TRUE)\n## \n##  Paired t-test\n## \n## data:  blume$a and blume$b\n## t = 3.4821, df = 9, p-value = 0.006916\n## alternative hypothesis: true mean difference is not equal to 0\n## 95 percent confidence interval:\n##  1.366339 6.433661\n## sample estimates:\n## mean difference \n##             3.9\nt.test(blume$a, blume$b, paired = TRUE, alternative = \"greater\")\n## \n##  Paired t-test\n## \n## data:  blume$a and blume$b\n## t = 3.4821, df = 9, p-value = 0.003458\n## alternative hypothesis: true mean difference is greater than 0\n## 95 percent confidence interval:\n##  1.846877      Inf\n## sample estimates:\n## mean difference \n##             3.9\n\nDasselbe mit einer “long table”\n\n# \"Long table\" erstellen\ncultivar &lt;- c(rep(\"a\", 10), rep(\"b\", 10))\nsize &lt;- c(a, b)\nblume.long &lt;- data.frame(cultivar, size)\n\n# nicht mehr benötitgten Objekte entfernen\nrm(size)\nrm(cultivar)\n\n# Daten anschauen\nsummary(blume.long)\n##    cultivar              size      \n##  Length:20          Min.   : 7.00  \n##  Class :character   1st Qu.:10.00  \n##  Mode  :character   Median :12.50  \n##                     Mean   :13.35  \n##                     3rd Qu.:15.25  \n##                     Max.   :25.00\nhead(blume.long)\n##   cultivar size\n## 1        a   20\n## 2        a   19\n## 3        a   25\n## 4        a   10\n## 5        a    8\n## 6        a   15\nboxplot(size ~ cultivar, data = blume.long)\n\n\n\n\n# Tests durchführen\nt.test(size ~ cultivar, blume.long, var.equal = TRUE)\n## \n##  Two Sample t-test\n## \n## data:  size by cultivar\n## t = 2.0797, df = 18, p-value = 0.05212\n## alternative hypothesis: true difference in means between group a and group b is not equal to 0\n## 95 percent confidence interval:\n##  -0.03981237  7.83981237\n## sample estimates:\n## mean in group a mean in group b \n##            15.3            11.4\nt.test(size ~ cultivar, blume.long, paired = TRUE)\n## \n##  Paired t-test\n## \n## data:  size by cultivar\n## t = 3.4821, df = 9, p-value = 0.006916\n## alternative hypothesis: true mean difference is not equal to 0\n## 95 percent confidence interval:\n##  1.366339 6.433661\n## sample estimates:\n## mean difference \n##             3.9"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#base-r-vs.-ggplot2",
    "href": "stat1-4/Statistik1_Demo.html#base-r-vs.-ggplot2",
    "title": "Stat1: Demo",
    "section": "Base R vs. ggplot2",
    "text": "Base R vs. ggplot2\n\nlibrary(\"ggplot2\")\n\nggplot(blume.long, aes(cultivar, size)) +\n  geom_boxplot()\n\n\n\nggplot(blume.long, aes(cultivar, size)) +\n  geom_boxplot() +\n  theme_classic()\n\n\n\nggplot(blume.long, aes(cultivar, size)) +\n  geom_boxplot(size = 1) +\n  theme_classic() +\n  theme(axis.line = element_line(size = 1)) +\n  theme(axis.title = element_text(size = 14)) +\n  theme(axis.text = element_text(size = 14))\n\n\n\nggplot(blume.long, aes(cultivar, size)) +\n  geom_boxplot(size = 1) +\n  theme_classic() +\n  theme(\n    axis.line = element_line(size = 1), axis.ticks = element_line(size = 1),\n    axis.text = element_text(size = 20), axis.title = element_text(size = 20)\n  )\n\n\n\n\nDefinieren von mytheme mit allen gewünschten Settings, das man zu Beginn einer Sitzung einmal laden und dann immer wieder ausführen kann (statt des langen Codes)\n\nmytheme &lt;- theme_classic() +\n  theme(\n    axis.line = element_line(color = \"black\", size = 1),\n    axis.text = element_text(size = 20, color = \"black\"),\n    axis.title = element_text(size = 20, color = \"black\"),\n    axis.ticks = element_line(size = 1, color = \"black\"),\n    axis.ticks.length = unit(.5, \"cm\")\n  )\n\n\n# Schöne Boxplots erstellen\n\nggplot(blume.long, aes(cultivar, size)) +\n  geom_boxplot(size = 1) +\n  mytheme\n\n\n\n\nt_test &lt;- t.test(size ~ cultivar, blume.long)\n\n# Mit p-Wert im Plot\nggplot(blume.long, aes(cultivar, size)) +\n  geom_boxplot(size = 1) +\n  mytheme +\n  annotate(\"text\",\n    x = \"b\", y = 24,\n    label = paste0(\"italic(p) == \", round(t_test$p.value, 3)), parse = TRUE, size = 8\n  )\n\n\n\n\n# Ohne p-Wert im Plot (da dieser &gt; 0.05)\nggplot(blume.long, aes(cultivar, size)) +\n  geom_boxplot(size = 1) +\n  mytheme +\n  labs(x = \"Cultivar\", y = \"Size (cm)\")"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#binomialtest",
    "href": "stat1-4/Statistik1_Demo.html#binomialtest",
    "title": "Stat1: Demo",
    "section": "Binomialtest",
    "text": "Binomialtest\nIn Klammern übergibt man die Anzahl der Erfolge und die Stichprobengrösse\n\nbinom.test(84, 200) # Anzahl Frauen im Nationalrat (≙ 42.0 %; Stand 2019)\n## \n##  Exact binomial test\n## \n## data:  84 and 200\n## number of successes = 84, number of trials = 200, p-value = 0.02813\n## alternative hypothesis: true probability of success is not equal to 0.5\n## 95 percent confidence interval:\n##  0.3507439 0.4916638\n## sample estimates:\n## probability of success \n##                   0.42\nbinom.test(116, 200) # Anzahl Männer im Nationalrat (≙ 58.0 %; Stand 2019)\n## \n##  Exact binomial test\n## \n## data:  116 and 200\n## number of successes = 116, number of trials = 200, p-value = 0.02813\n## alternative hypothesis: true probability of success is not equal to 0.5\n## 95 percent confidence interval:\n##  0.5083362 0.6492561\n## sample estimates:\n## probability of success \n##                   0.58\nbinom.test(3, 7) # Anzahl Frauen im Bundesrat (≙ 42.9 %; Stand 2019)\n## \n##  Exact binomial test\n## \n## data:  3 and 7\n## number of successes = 3, number of trials = 7, p-value = 1\n## alternative hypothesis: true probability of success is not equal to 0.5\n## 95 percent confidence interval:\n##  0.09898828 0.81594843\n## sample estimates:\n## probability of success \n##              0.4285714"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#chi-quadrat-test-fishers-test",
    "href": "stat1-4/Statistik1_Demo.html#chi-quadrat-test-fishers-test",
    "title": "Stat1: Demo",
    "section": "Chi-Quadrat-Test & Fishers Test",
    "text": "Chi-Quadrat-Test & Fishers Test\nErmitteln des kritischen Wertes\n\nqchisq(0.95, 1)\n## [1] 3.841459"
  },
  {
    "objectID": "stat1-4/Statistik1_Demo.html#direkter-test-in-r-dazu-werte-als-matrix-nötig",
    "href": "stat1-4/Statistik1_Demo.html#direkter-test-in-r-dazu-werte-als-matrix-nötig",
    "title": "Stat1: Demo",
    "section": "Direkter Test in R (dazu Werte als Matrix nötig)",
    "text": "Direkter Test in R (dazu Werte als Matrix nötig)\n\n# Matrix mit Haarfarbe&Augenfarbe-Kombidnationen erstellen\n# 38 blond&blau, 14 dunkel&blau, 11 blond&braun,, 51 dunkel&braun\ncount &lt;- matrix(c(38, 14, 11, 51), nrow = 2)\ncount # Check\n##      [,1] [,2]\n## [1,]   38   11\n## [2,]   14   51\nrownames(count) &lt;- c(\"blond\", \"dunkel\") # Benennen für Übersicht\ncolnames(count) &lt;- c(\"blau\", \"braun\") #  Benennen für Übersicht\ncount # Check\n##        blau braun\n## blond    38    11\n## dunkel   14    51\n\n# Tests durchführen\nchisq.test(count)\n## \n##  Pearson's Chi-squared test with Yates' continuity correction\n## \n## data:  count\n## X-squared = 33.112, df = 1, p-value = 8.7e-09\nfisher.test(count)\n## \n##  Fisher's Exact Test for Count Data\n## \n## data:  count\n## p-value = 2.099e-09\n## alternative hypothesis: true odds ratio is not equal to 1\n## 95 percent confidence interval:\n##   4.746351 34.118920\n## sample estimates:\n## odds ratio \n##   12.22697"
  },
  {
    "objectID": "stat1-4/Statistik1_Novanimal.html",
    "href": "stat1-4/Statistik1_Novanimal.html",
    "title": "Stat1: NOVANIMAL",
    "section": "",
    "text": "Im Forschungsprojekt NOVANIMAL wird u.a. der Frage nachgegangen, was es braucht, damit Menschen freiwillig weniger tierische Produkte konsumieren? Ein interessanter Ansatzpunkt ist die Ausser-Haus-Verpflegung. Gemäss der ersten in den Jahren 2014/2015 durchgeführten nationalen Ernährungserhebung menuCH essen 70 % der Bevölkerung zwischen 18 und 75 Jahren am Mittag auswärts (Bochud u. a. 2017). Daher rückt die Gastronomie als zentraler Akteur einer innovativen und nachhaltigen Ernährungswirtschaft ins Blickfeld. Welche Innovationen in der Gastronomie könnten dazu beitragen, den Pro-Kopf-Verbrauch an tierischen Nahrungsmitteln zu senken?\nDazu wurde u.a. ein Experiment in zwei Hochschulmensen durchgeführt. Forschungsleitend war die Frage, wie die Gäste dazu bewogen werden können, häufiger vegetarische oder vegane Gerichte zu wählen. Konkret wurde untersucht, wie die Gäste auf ein verändertes Menü-Angebot mit einem höheren Anteil an vegetarischen und veganen Gerichten reagieren. Das Experiment fand während 12 Wochen statt und bestand aus zwei Mensazyklen à 6 Wochen. Über den gesamten Untersuchungszeitraum werden insgesamt 90 verschiedene Gerichte angeboten. In den 6 Referenz- bzw. Basiswochen wurden zwei fleisch- oder fischhaltige Menüs und ein vegetarisches Menü angeboten. In den 6 Interventionswochen wurde das Verhältnis umgekehrt und es wurden ein veganes, ein vegetarisches und ein fleisch- oder fischhaltiges Gericht angeboten. Basis- und Interventionsangebote wechselten wöchentlich ab. Während der gesamten 12 Wochen konnten die Gäste jeweils auf ein Buffet ausweichen und ihre Mahlzeit aus warmen und kalten Komponenten selber zusammenstellen. Die Gerichte wurden über drei vorgegebene Menülinien (F, K, W) randomisiert angeboten.\n\n\n\nDie Abbildung zeigt das Versuchsdesign der ersten 6 Experimentwochen (Kalenderwoche 40 bis 45).\n\n\nMehr Informationen über das Forschungsprojekt NOVANIMAL findet ihr auf der Webpage.\n\n\n\n\nBochud, Murielle, Angéline Chatelan, Juan-Manuel Blanco, und Sigrid Maria Beer-Borst. 2017. „Anthropometric characteristics and indicators of eating and physical activity behaviors in the Swiss adult population: results from menuCH 2014-2015“."
  },
  {
    "objectID": "stat1-4/Statistik1_Uebung.html#aufgabe-1.1-assoziationstest",
    "href": "stat1-4/Statistik1_Uebung.html#aufgabe-1.1-assoziationstest",
    "title": "Stat1: Übung",
    "section": "Aufgabe 1.1: Assoziationstest",
    "text": "Aufgabe 1.1: Assoziationstest\nFührt einen Assoziationstest zweier kategorialer Variablen (mit je zwei Ausprägungen) mit Chi-Quadrat und Fishers exaktem Test durch. Dazu erhebt ihr selbst die Daten (wozu ihr euch auch in Teams zusammenschliessen könnt). Ihr könnt z.B. eine Datenerhebung unter Mitstudierenden durchführen (etwa Nutzung Mac/Windows vs. männlich/weiblich). Bitte formuliert vor der Datenerhebung eine Hypothese, d.h. eine Erwartungshaltung, ob und welche Assoziation vorliegt und wenn ja warum. Beachtet, dass ihr für diese Form des Assoziationstests genau zwei binäre Variablen benötigt. Wenn ihr also kategoriale Variablen mit mehr als zwei Ausprägungen habt, so könnt ihr entweder Ausprägungen sinnvoll zusammenfassen oder seltene Ausprägungen im Test unberücksichtigt lassen."
  },
  {
    "objectID": "stat1-4/Statistik1_Uebung.html#aufgabe-1.2-t-test",
    "href": "stat1-4/Statistik1_Uebung.html#aufgabe-1.2-t-test",
    "title": "Stat1: Übung",
    "section": "Aufgabe 1.2: t-Test",
    "text": "Aufgabe 1.2: t-Test\nT-Test mit Datensatz Datensatz_novanimal_Uebung_Statistik1.2.csv\nWerden in den Basis- und Interventionswochen unterschiedlich viele Gerichte verkauft?\n\nSchau die Daten an: Verstehen und ggf. plotten.\nDefiniere die Null- (\\(H_0\\)) und die Alternativhypothese (\\(H_1\\)).\nWelche Form von t-Test musst Du anwenden: einseitig/zweiseitig resp. gepaart/ungepaart?\nFühre einen t-Test durch.\nWie gut sind die Voraussetzungen für einen t-Test erfüllt (z.B. Normalverteilung der Residuen und Varianzhomogenität)?\nStelle deine Ergebnisse angemessen dar, d.h. Text mit Abbildung und/oder Tabelle"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#t-test-als-anova",
    "href": "stat1-4/Statistik2_Demo.html#t-test-als-anova",
    "title": "Stat2: Demo",
    "section": "t-test als ANOVA",
    "text": "t-test als ANOVA\n\n# Daten generieren als \"long table\" (2 Kategorien)\na &lt;- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14)\nb &lt;- c(12, 15, 16, 7, 8, 10, 12, 11, 13, 10)\nblume &lt;- data.frame(cultivar = c(rep(\"a\", 10), rep(\"b\", 10)), size = c(a, b))\n\n# Daten anschauen\npar(mfrow = c(1, 1))\nboxplot(size ~ cultivar, xlab = \"Sorte\", ylab = \"Bluetengroesse [cm]\", data = blume)\n\n\n\n\n# Klassischer t-Test ausführen\nt.test(size ~ cultivar, blume, var.equal = TRUE)\n## \n##  Two Sample t-test\n## \n## data:  size by cultivar\n## t = 2.0797, df = 18, p-value = 0.05212\n## alternative hypothesis: true difference in means between group a and group b is not equal to 0\n## 95 percent confidence interval:\n##  -0.03981237  7.83981237\n## sample estimates:\n## mean in group a mean in group b \n##            15.3            11.4\n\n# ANOVA ausführen\naov(size ~ cultivar, data = blume)\n## Call:\n##    aov(formula = size ~ cultivar, data = blume)\n## \n## Terms:\n##                 cultivar Residuals\n## Sum of Squares     76.05    316.50\n## Deg. of Freedom        1        18\n## \n## Residual standard error: 4.193249\n## Estimated effects may be unbalanced\nsummary(aov(size ~ cultivar, data = blume))\n##             Df Sum Sq Mean Sq F value Pr(&gt;F)  \n## cultivar     1   76.0   76.05   4.325 0.0521 .\n## Residuals   18  316.5   17.58                 \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nsummary.lm(aov(size ~ cultivar, data = blume))\n## \n## Call:\n## aov(formula = size ~ cultivar, data = blume)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -7.300 -2.575 -0.350  2.925  9.700 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)   15.300      1.326   11.54 9.47e-10 ***\n## cultivarb     -3.900      1.875   -2.08   0.0521 .  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 4.193 on 18 degrees of freedom\n## Multiple R-squared:  0.1937, Adjusted R-squared:  0.1489 \n## F-statistic: 4.325 on 1 and 18 DF,  p-value: 0.05212"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#echte-anova",
    "href": "stat1-4/Statistik2_Demo.html#echte-anova",
    "title": "Stat2: Demo",
    "section": "Echte ANOVA",
    "text": "Echte ANOVA\n\n# Daten generieren mit 3 statt nur 2 Kategorien\nc &lt;- c(30, 19, 31, 23, 18, 25, 26, 24, 17, 20)\nblume2 &lt;- data.frame(cultivar = c(rep(\"a\", 10), rep(\"b\", 10), rep(\"c\", 10)), size = c(a, b, c))\nblume2$cultivar &lt;- as.factor(blume2$cultivar)\n\nsummary(blume2)\n##  cultivar      size      \n##  a:10     Min.   : 7.00  \n##  b:10     1st Qu.:11.25  \n##  c:10     Median :15.50  \n##           Mean   :16.67  \n##           3rd Qu.:20.00  \n##           Max.   :31.00\nhead(blume2)\n##   cultivar size\n## 1        a   20\n## 2        a   19\n## 3        a   25\n## 4        a   10\n## 5        a    8\n## 6        a   15\n\npar(mfrow = c(1, 1))\nboxplot(size ~ cultivar, xlab = \"Sorte\", ylab = \"Blütengrösse [cm]\", data = blume2)\n\n\n\n\naov(size ~ cultivar, data = blume2)\n## Call:\n##    aov(formula = size ~ cultivar, data = blume2)\n## \n## Terms:\n##                 cultivar Residuals\n## Sum of Squares  736.0667  528.6000\n## Deg. of Freedom        2        27\n## \n## Residual standard error: 4.424678\n## Estimated effects may be unbalanced\nsummary(aov(size ~ cultivar, data = blume2))\n##             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## cultivar     2  736.1   368.0    18.8 7.68e-06 ***\n## Residuals   27  528.6    19.6                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nsummary.lm(aov(size ~ cultivar, data = blume2))\n## \n## Call:\n## aov(formula = size ~ cultivar, data = blume2)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -7.300 -3.375 -0.300  2.700  9.700 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)   15.300      1.399  10.935 2.02e-11 ***\n## cultivarb     -3.900      1.979  -1.971 0.059065 .  \n## cultivarc      8.000      1.979   4.043 0.000395 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 4.425 on 27 degrees of freedom\n## Multiple R-squared:  0.582,  Adjusted R-squared:  0.5511 \n## F-statistic:  18.8 on 2 and 27 DF,  p-value: 7.683e-06\n\naov.1 &lt;- aov(size ~ cultivar, data = blume2)\nsummary(aov.1)\n##             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## cultivar     2  736.1   368.0    18.8 7.68e-06 ***\n## Residuals   27  528.6    19.6                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nsummary.lm(aov.1)\n## \n## Call:\n## aov(formula = size ~ cultivar, data = blume2)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -7.300 -3.375 -0.300  2.700  9.700 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)   15.300      1.399  10.935 2.02e-11 ***\n## cultivarb     -3.900      1.979  -1.971 0.059065 .  \n## cultivarc      8.000      1.979   4.043 0.000395 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 4.425 on 27 degrees of freedom\n## Multiple R-squared:  0.582,  Adjusted R-squared:  0.5511 \n## F-statistic:  18.8 on 2 and 27 DF,  p-value: 7.683e-06\n\n# Berechnung Mittelwerte usw. zur Charakterisierung der Gruppen\naggregate(size ~ cultivar, blume2, function(x) c(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x)))\n##   cultivar size.Mean   size.SD  size.Min  size.Max\n## 1        a 15.300000  5.207900  8.000000 25.000000\n## 2        b 11.400000  2.836273  7.000000 16.000000\n## 3        c 23.300000  4.854551 17.000000 31.000000\n\nlm.1 &lt;- lm(size ~ cultivar, data = blume2)\nsummary(lm.1)\n## \n## Call:\n## lm(formula = size ~ cultivar, data = blume2)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -7.300 -3.375 -0.300  2.700  9.700 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)   15.300      1.399  10.935 2.02e-11 ***\n## cultivarb     -3.900      1.979  -1.971 0.059065 .  \n## cultivarc      8.000      1.979   4.043 0.000395 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 4.425 on 27 degrees of freedom\n## Multiple R-squared:  0.582,  Adjusted R-squared:  0.5511 \n## F-statistic:  18.8 on 2 and 27 DF,  p-value: 7.683e-06"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#tukeys-posthoc-test",
    "href": "stat1-4/Statistik2_Demo.html#tukeys-posthoc-test",
    "title": "Stat2: Demo",
    "section": "Tukeys Posthoc-Test",
    "text": "Tukeys Posthoc-Test\n\n# Load library\nlibrary(\"agricolae\")\n## Error in library(\"agricolae\"): there is no package called 'agricolae'\n\n# Posthoc-Test\nHSD.test(aov.1, \"cultivar\", group = FALSE, console = TRUE)\n## Error in HSD.test(aov.1, \"cultivar\", group = FALSE, console = TRUE): could not find function \"HSD.test\""
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#beispiel-posthoc-labels-in-plot",
    "href": "stat1-4/Statistik2_Demo.html#beispiel-posthoc-labels-in-plot",
    "title": "Stat2: Demo",
    "section": "Beispiel Posthoc-Labels in Plot",
    "text": "Beispiel Posthoc-Labels in Plot\n\n# ANOVA Mit Iris-Datenset, das in R integriert ist\naov.2 &lt;- aov(Sepal.Width ~ Species, data = iris)\n\n# Posthoc-Test\nHSD.test(aov.2, \"Species\", console = TRUE)\n## Error in HSD.test(aov.2, \"Species\", console = TRUE): could not find function \"HSD.test\"\n\n# Plot mit labels\nboxplot(Sepal.Width ~ Species, data = iris)\n\n\n\nboxplot(Sepal.Width ~ Species, ylim = c(2, 5), data = iris)\ntext(1, 4.8, \"a\")\ntext(2, 4.8, \"c\")\ntext(3, 4.8, \"b\")\n\n\n\n\nDerselbe Plot mit ggplot\n\n# Load library\nlibrary(\"ggplot2\")\n\nggplot(iris, aes(Species, Sepal.Width)) +\n    geom_boxplot(size = 1) +\n    annotate(\"text\", y = 5, x = 1:3, label = c(\"a\", \"c\", \"b\"))"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#klassische-tests-der-modellannahmen-nicht-empfohlen",
    "href": "stat1-4/Statistik2_Demo.html#klassische-tests-der-modellannahmen-nicht-empfohlen",
    "title": "Stat2: Demo",
    "section": "Klassische Tests der Modellannahmen (NICHT EMPFOHLEN!!!)",
    "text": "Klassische Tests der Modellannahmen (NICHT EMPFOHLEN!!!)\n\n# Shapiro-Wilk Test auf Normalverteilung\n# Pro Kategorie!\n# (H0 = Notmalverteilung)\nshapiro.test(blume2$size[blume2$cultivar == \"a\"])\n## \n##  Shapiro-Wilk normality test\n## \n## data:  blume2$size[blume2$cultivar == \"a\"]\n## W = 0.97304, p-value = 0.9175\nshapiro.test(blume2$size[blume2$cultivar == \"b\"])\n## \n##  Shapiro-Wilk normality test\n## \n## data:  blume2$size[blume2$cultivar == \"b\"]\n## W = 0.97341, p-value = 0.9206\nshapiro.test(blume2$size[blume2$cultivar == \"c\"])\n## \n##  Shapiro-Wilk normality test\n## \n## data:  blume2$size[blume2$cultivar == \"c\"]\n## W = 0.94188, p-value = 0.5742\n?var.test\n\n# F-Test zum Vergleich zweier Varianzen\n# (H0= Gleiche Varianzen)\nvar.test(\n    blume2$size[blume2$cultivar == \"a\"],\n    blume2$size[blume2$cultivar == \"b\"]\n)\n## \n##  F test to compare two variances\n## \n## data:  blume2$size[blume2$cultivar == \"a\"] and blume2$size[blume2$cultivar == \"b\"]\n## F = 3.3715, num df = 9, denom df = 9, p-value = 0.08467\n## alternative hypothesis: true ratio of variances is not equal to 1\n## 95 percent confidence interval:\n##   0.8374446 13.5738284\n## sample estimates:\n## ratio of variances \n##           3.371547\n\n\n# Load library\nlibrary(\"car\")\n\n# Test auf Homogenität der Varianzen\nleveneTest(blume2$size[blume2$cultivar == \"a\"],\n    blume2$size[blume2$cultivar == \"b\"],\n    center = mean\n)\n## Levene's Test for Homogeneity of Variance (center = mean)\n##       Df    F value    Pr(&gt;F)    \n## group  7 2.2598e+30 &lt; 2.2e-16 ***\n##        2                         \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#nicht-parametrische-alternativen-wenn-modellannahmen-der-anvoa-massiv-verletzt-sind",
    "href": "stat1-4/Statistik2_Demo.html#nicht-parametrische-alternativen-wenn-modellannahmen-der-anvoa-massiv-verletzt-sind",
    "title": "Stat2: Demo",
    "section": "Nicht-parametrische Alternativen, wenn Modellannahmen der ANVOA massiv verletzt sind",
    "text": "Nicht-parametrische Alternativen, wenn Modellannahmen der ANVOA massiv verletzt sind\n\n# Nicht-parametrische Alternative zu t-Test\nwilcox.test(\n    blume2$size[blume2$cultivar == \"a\"],\n    blume2$size[blume2$cultivar == \"b\"]\n)\n## \n##  Wilcoxon rank sum test with continuity correction\n## \n## data:  blume2$size[blume2$cultivar == \"a\"] and blume2$size[blume2$cultivar == \"b\"]\n## W = 73, p-value = 0.08789\n## alternative hypothesis: true location shift is not equal to 0"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#zum-vergleich-normale-anova-noch-mal",
    "href": "stat1-4/Statistik2_Demo.html#zum-vergleich-normale-anova-noch-mal",
    "title": "Stat2: Demo",
    "section": "Zum Vergleich normale ANOVA noch mal",
    "text": "Zum Vergleich normale ANOVA noch mal\n\nsummary(aov(size ~ cultivar, data = blume2))\n##             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## cultivar     2  736.1   368.0    18.8 7.68e-06 ***\n## Residuals   27  528.6    19.6                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#bei-starken-abweichungen-von-der-normalverteilung-aber-ähnlichen-varianzen",
    "href": "stat1-4/Statistik2_Demo.html#bei-starken-abweichungen-von-der-normalverteilung-aber-ähnlichen-varianzen",
    "title": "Stat2: Demo",
    "section": "Bei starken Abweichungen von der Normalverteilung, aber ähnlichen Varianzen",
    "text": "Bei starken Abweichungen von der Normalverteilung, aber ähnlichen Varianzen"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#kruskal-wallis-test",
    "href": "stat1-4/Statistik2_Demo.html#kruskal-wallis-test",
    "title": "Stat2: Demo",
    "section": "Kruskal-Wallis-Test",
    "text": "Kruskal-Wallis-Test\n\nkruskal.test(size ~ cultivar, data = blume2)\n## \n##  Kruskal-Wallis rank sum test\n## \n## data:  size by cultivar\n## Kruskal-Wallis chi-squared = 16.686, df = 2, p-value = 0.0002381\n\n\n# Load library\nlibrary(\"FSA\")\n## Error in library(\"FSA\"): there is no package called 'FSA'\n\n# korrigierte p-Werte nach Bejamini-Hochberg\ndunnTest(size ~ cultivar, method = \"bh\", data = blume2)\n## Error in dunnTest(size ~ cultivar, method = \"bh\", data = blume2): could not find function \"dunnTest\""
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#bei-erheblicher-heteroskedastizität-aber-relative-normalsymmetrisch-verteilten-residuen",
    "href": "stat1-4/Statistik2_Demo.html#bei-erheblicher-heteroskedastizität-aber-relative-normalsymmetrisch-verteilten-residuen",
    "title": "Stat2: Demo",
    "section": "Bei erheblicher Heteroskedastizität, aber relative normal/symmetrisch verteilten Residuen",
    "text": "Bei erheblicher Heteroskedastizität, aber relative normal/symmetrisch verteilten Residuen"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#welch-test",
    "href": "stat1-4/Statistik2_Demo.html#welch-test",
    "title": "Stat2: Demo",
    "section": "Welch-Test",
    "text": "Welch-Test\n\noneway.test(size ~ cultivar, var.equal = F, data = blume2)\n## \n##  One-way analysis of means (not assuming equal variances)\n## \n## data:  size and cultivar\n## F = 21.642, num df = 2.000, denom df = 16.564, p-value = 2.397e-05"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#faktorielle-anova",
    "href": "stat1-4/Statistik2_Demo.html#faktorielle-anova",
    "title": "Stat2: Demo",
    "section": "2-faktorielle ANOVA",
    "text": "2-faktorielle ANOVA\n\n# Daten generieren\nd &lt;- c(10, 12, 11, 13, 10, 25, 12, 30, 26, 13)\ne &lt;- c(15, 13, 18, 11, 14, 25, 39, 38, 28, 24)\nf &lt;- c(10, 12, 11, 13, 10, 9, 2, 4, 7, 13)\n\nblume3 &lt;- data.frame(\n    cultivar = c(rep(\"a\", 20), rep(\"b\", 20), rep(\"c\", 20)),\n    house = c(rep(c(rep(\"yes\", 10), rep(\"no\", 10)), 3)),\n    size = c(a, b, c, d, e, f)\n)\nblume3\n##    cultivar house size\n## 1         a   yes   20\n## 2         a   yes   19\n## 3         a   yes   25\n## 4         a   yes   10\n## 5         a   yes    8\n## 6         a   yes   15\n## 7         a   yes   13\n## 8         a   yes   18\n## 9         a   yes   11\n## 10        a   yes   14\n## 11        a    no   12\n## 12        a    no   15\n## 13        a    no   16\n## 14        a    no    7\n## 15        a    no    8\n## 16        a    no   10\n## 17        a    no   12\n## 18        a    no   11\n## 19        a    no   13\n## 20        a    no   10\n## 21        b   yes   30\n## 22        b   yes   19\n## 23        b   yes   31\n## 24        b   yes   23\n## 25        b   yes   18\n## 26        b   yes   25\n## 27        b   yes   26\n## 28        b   yes   24\n## 29        b   yes   17\n## 30        b   yes   20\n## 31        b    no   10\n## 32        b    no   12\n## 33        b    no   11\n## 34        b    no   13\n## 35        b    no   10\n## 36        b    no   25\n## 37        b    no   12\n## 38        b    no   30\n## 39        b    no   26\n## 40        b    no   13\n## 41        c   yes   15\n## 42        c   yes   13\n## 43        c   yes   18\n## 44        c   yes   11\n## 45        c   yes   14\n## 46        c   yes   25\n## 47        c   yes   39\n## 48        c   yes   38\n## 49        c   yes   28\n## 50        c   yes   24\n## 51        c    no   10\n## 52        c    no   12\n## 53        c    no   11\n## 54        c    no   13\n## 55        c    no   10\n## 56        c    no    9\n## 57        c    no    2\n## 58        c    no    4\n## 59        c    no    7\n## 60        c    no   13\n\n\nboxplot(size ~ cultivar + house, data = blume3)\n\n\n\n\nsummary(aov(size ~ cultivar + house, data = blume3))\n##             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## cultivar     2  417.1   208.5   5.005     0.01 *  \n## house        1  992.3   992.3  23.815 9.19e-06 ***\n## Residuals   56 2333.2    41.7                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nsummary(aov(size ~ cultivar + house + cultivar:house, data = blume3))\n##                Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## cultivar        2  417.1   208.5   5.364   0.0075 ** \n## house           1  992.3   992.3  25.520 5.33e-06 ***\n## cultivar:house  2  233.6   116.8   3.004   0.0579 .  \n## Residuals      54 2099.6    38.9                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# Kurzschreibweise: \"*\" bedeutet, dass Interaktion zwischen cultivar und house eingeschlossen wird\nsummary(aov(size ~ cultivar * house, data = blume3))\n##                Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## cultivar        2  417.1   208.5   5.364   0.0075 ** \n## house           1  992.3   992.3  25.520 5.33e-06 ***\n## cultivar:house  2  233.6   116.8   3.004   0.0579 .  \n## Residuals      54 2099.6    38.9                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary.lm(aov(size ~ cultivar + house, data = blume3))\n## \n## Call:\n## aov(formula = size ~ cultivar + house, data = blume3)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -9.733 -4.696 -1.050  2.717 19.133 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)    9.283      1.667   5.570 7.52e-07 ***\n## cultivarb      6.400      2.041   3.135  0.00273 ** \n## cultivarc      2.450      2.041   1.200  0.23509    \n## houseyes       8.133      1.667   4.880 9.19e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 6.455 on 56 degrees of freedom\n## Multiple R-squared:  0.3766, Adjusted R-squared:  0.3432 \n## F-statistic: 11.28 on 3 and 56 DF,  p-value: 6.848e-06\n\ninteraction.plot(blume3$cultivar, blume3$house, blume3$size)\n\n\n\ninteraction.plot(blume3$house, blume3$cultivar, blume3$size)\n\n\n\n\n\nanova(lm(blume3$size ~ blume3$cultivar * blume3$house), lm(blume3$size ~ blume3$cultivar + blume3$house))\n## Analysis of Variance Table\n## \n## Model 1: blume3$size ~ blume3$cultivar * blume3$house\n## Model 2: blume3$size ~ blume3$cultivar + blume3$house\n##   Res.Df    RSS Df Sum of Sq      F  Pr(&gt;F)  \n## 1     54 2099.6                              \n## 2     56 2333.2 -2   -233.63 3.0044 0.05792 .\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nanova(lm(blume3$size ~ blume3$house), lm(blume3$size ~ blume3$cultivar * blume3$house))\n## Analysis of Variance Table\n## \n## Model 1: blume3$size ~ blume3$house\n## Model 2: blume3$size ~ blume3$cultivar * blume3$house\n##   Res.Df    RSS Df Sum of Sq      F   Pr(&gt;F)   \n## 1     58 2750.3                                \n## 2     54 2099.6  4    650.73 4.1841 0.005045 **\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Visualisierung 2-fach-Interaktion etwas elaborierter mit ggplot\nlibrary(\"sjPlot\")\nlibrary(\"ggplot2\")\ntheme_set(theme_classic())\n\naov &lt;- aov(size ~ cultivar * house, data = blume3)\nplot_model(aov, type = \"pred\", terms = c(\"cultivar\", \"house\"))\n\n\n\n\n\n# Geht auch für 3-fach-Interaktionen\n\n# Datensatz zum Einfluss von Management und Hirschbeweidung auf den Pflanzenartenreichtum\n\nRiesch &lt;- read.delim(\"datasets/stat1-4/Riesch_et_al_ReMe_Extract.csv\", sep = \";\", stringsAsFactors = TRUE)\nstr(Riesch)\n## 'data.frame':    60 obs. of  5 variables:\n##  $ Plot.ID         : Factor w/ 60 levels \"Eul_A1_MP_14\",..: 9 17 33 37 49 10 18 34 38 50 ...\n##  $ Year            : Factor w/ 2 levels \"Year 1\",\"Year 4\": 1 1 1 1 1 2 2 2 2 2 ...\n##  $ Treatment       : Factor w/ 3 levels \"burnt\",\"mown\",..: 1 1 1 1 1 1 1 1 1 1 ...\n##  $ Plot.type       : Factor w/ 2 levels \"fenced\",\"open\": 1 1 1 1 1 1 1 1 1 1 ...\n##  $ Species.richness: int  45 49 44 52 43 37 42 36 46 38 ...\n\naov.deer &lt;- aov(Species.richness ~ Year * Treatment * Plot.type, data = Riesch)\nplot_model(aov.deer, type = \"pred\", terms = c(\"Year\", \"Treatment\", \"Plot.type\"))"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#korrelationen",
    "href": "stat1-4/Statistik2_Demo.html#korrelationen",
    "title": "Stat2: Demo",
    "section": "Korrelationen",
    "text": "Korrelationen\n\n## Korrelationen und Regressionen\n\n# Datensatz zum Einfluss von Stickstoffdepositionen auf den Pflanzenartenreichtum\ndf &lt;- read.delim(\"datasets/stat1-4/Nitrogen.csv\", sep = \";\")\nsummary(df)\n##   N.deposition   Species.richness\n##  Min.   : 2.00   Min.   :12.0    \n##  1st Qu.: 9.00   1st Qu.:17.5    \n##  Median :20.00   Median :21.0    \n##  Mean   :20.53   Mean   :20.2    \n##  3rd Qu.:30.50   3rd Qu.:23.0    \n##  Max.   :55.00   Max.   :28.0\n\n# Plotten der Beziehung\nplot(Species.richness ~ N.deposition, data = df)\n\n\n\n\n# Daten anschauen\nscatterplot(Species.richness ~ N.deposition, data = df)\n\n\n\n\n\n# Korrelationen\ncor.test(df$Species.richness, df$N.deposition, method = \"pearson\")\n## \n##  Pearson's product-moment correlation\n## \n## data:  df$Species.richness and df$N.deposition\n## t = -5.2941, df = 13, p-value = 0.0001453\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  -0.9405572 -0.5450218\n## sample estimates:\n##        cor \n## -0.8265238\ncor.test(df$N.deposition, df$Species.richness, method = \"pearson\")\n## \n##  Pearson's product-moment correlation\n## \n## data:  df$N.deposition and df$Species.richness\n## t = -5.2941, df = 13, p-value = 0.0001453\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  -0.9405572 -0.5450218\n## sample estimates:\n##        cor \n## -0.8265238\ncor.test(df$Species.richness, df$N.deposition, method = \"spearman\")\n## \n##  Spearman's rank correlation rho\n## \n## data:  df$Species.richness and df$N.deposition\n## S = 1015.5, p-value = 0.0002259\n## alternative hypothesis: true rho is not equal to 0\n## sample estimates:\n##        rho \n## -0.8133721\ncor.test(df$Species.richness, df$N.deposition, method = \"kendall\")\n## \n##  Kendall's rank correlation tau\n## \n## data:  df$Species.richness and df$N.deposition\n## z = -3.308, p-value = 0.0009398\n## alternative hypothesis: true tau is not equal to 0\n## sample estimates:\n##       tau \n## -0.657115\n\n# Jetzt als Regression\nlm &lt;- lm(Species.richness ~ N.deposition, data = df)\nanova(lm) # ANOVA-Tabelle, 1. Möglichkeit\n## Analysis of Variance Table\n## \n## Response: Species.richness\n##              Df Sum Sq Mean Sq F value    Pr(&gt;F)    \n## N.deposition  1 233.91 233.908  28.028 0.0001453 ***\n## Residuals    13 108.49   8.346                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nsummary.aov(lm) # ANOVA-Tabelle, 2. Möglichkeit\n##              Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## N.deposition  1  233.9  233.91   28.03 0.000145 ***\n## Residuals    13  108.5    8.35                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nsummary(lm) # Regressionskoeffizienten\n## \n## Call:\n## lm(formula = Species.richness ~ N.deposition, data = df)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -4.9184 -1.9992  0.4493  2.0015  4.6081 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  25.60502    1.26440  20.251 3.25e-11 ***\n## N.deposition -0.26323    0.04972  -5.294 0.000145 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.889 on 13 degrees of freedom\n## Multiple R-squared:  0.6831, Adjusted R-squared:  0.6588 \n## F-statistic: 28.03 on 1 and 13 DF,  p-value: 0.0001453\n\n# Signifikantes Ergebnis visualisieren\nplot(Species.richness ~ N.deposition, data = df)\nabline(lm)"
  },
  {
    "objectID": "stat1-4/Statistik2_Demo.html#beispiele-modelldiagnostik",
    "href": "stat1-4/Statistik2_Demo.html#beispiele-modelldiagnostik",
    "title": "Stat2: Demo",
    "section": "Beispiele Modelldiagnostik",
    "text": "Beispiele Modelldiagnostik\n\npar(mfrow = c(2, 2)) # 4 Plots in einem Fenster\nplot(lm(b ~ a))\n\n\n\n\n\n# Load library\nlibrary(\"ggfortify\")\n\nautoplot(lm(b ~ a))\n\n\n\n\n# Modellstatistik nicht OK\ng &lt;- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14, 25, 39, 38, 28, 24)\nh &lt;- c(12, 15, 10, 7, 8, 10, 12, 11, 13, 10, 25, 12, 30, 26, 13)\npar(mfrow = c(1, 1))\n\nplot(h ~ g, xlim = c(0, 40), ylim = c(0, 30))\nabline(lm(h ~ g))\n\n\n\n\npar(mfrow = c(2, 2))\nplot(lm(h ~ g))\n\n\n\n\n\n# Modelldiagnostik mit ggplot\ndf &lt;- data.frame(g, h)\nggplot(df, aes(x = g, y = h)) +\n    # scale_x_continuous(limits = c(0,25)) +\n    # scale_y_continuous(limits = c(0,25)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", color = \"black\", size = .5, se = F) +\n    theme_classic()\n\n\n\n\npar(mfrow = c(2, 2))\nautoplot(lm(h ~ g))"
  },
  {
    "objectID": "stat1-4/Statistik2_Uebung.html",
    "href": "stat1-4/Statistik2_Uebung.html",
    "title": "Stat2: Übung",
    "section": "",
    "text": "Abzugeben sind am Ende\n\nlauffähiges R-Skript\nbegründeter Lösungsweg (Kombination aus R-Code, R Output und dessen Interpretation)\nausformulierter Methoden- und Ergebnisteil (für eine wiss.Arbeit).\n\n\nBitte erklärt und begründet die einzelnen Schritte, die ihr unternehmt, um zu eurem Ergebnis zu kommen. Dazu erstellt bitte ein Word-Dokument (oder ein z.B. mit Quarto generiertes pdf- oder html-Dokument), in dem ihr Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, eure Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentiert.\nDieser Ablauf sollte insbesondere beinhalten:\n\nÜberprüfen der Datenstruktur nach dem Einlesen, welches sind die abhängige(n) und welches die unabängige(n) Variablen etc.\nExplorative Datenanalyse, um zu sehen, ob evtl. Dateneingabefehler vorliegen oder Datentransformationen vorgenommen werden sollten\nAuswahl und Begründung eines statistischen Verfahrens\nBestimmung des vollständigen/maximalen Models\nSelektion des/der besten Models/Modelle\nDurchführen der Modelldiagnostik für dieses\nGenerieren aller Zahlen, Statistiken und Tabellen, die für eine wiss. Ergebnisdarstellung benötigt werden\n\nFormuliert abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen/Tabellen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (je einen ausformulierten Absatz von ca. 60-100 Worten bzw. 3-8 Sätzen). Alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\n\n\nÜbung 2.1: Regression\nRegressionsanalyse mit SAR.csv\nDer Datensatz beschreibt die Zunahme der Artenzahlen (richness) von Pflanzen in Trockenrasen der Schweiz in Abhängigkeit von der Probeflächengrösse (area, hier in m²). Diese Beziehung bezeichnet man als Artenzahl-Areal-Kurve (Species-area relationship = SAR).\n\nLadet den Datensatz in R und macht eine explorative Datenanalyse.\nWählt unter den schon gelernten Methoden der Regressionsanalyse ein adäquates Vorgehen zur Analyse dieser Daten und führt diese dann durch.\nPrüft anhand der Residuen, ob die Modellvoraussetzungen erfüllt waren\nFalls die Modelldiagnostik negativ ausfällt, überlegt, welche Datentransformation helfen könnte, und rechnet neue Modelle mit einer oder ggf. mehreren Datentransformationen, bis ihr eine statistisch zufriedenstellende Lösung gefunden habt.\nStellt die erhaltenen Ergebnisse angemessen dar (Text, Abbildung und/oder Tabelle).\nKennt ihr ggf. noch eine andere geeignete Herangehensweise?\n\n\n\nÜbung 2.2: Einfaktorielle ANOVA\nANOVA mit Datensatz Datensatz_novanimal_Uebung_Statistik2.2.csv\nFührt mit dem Datensatz novanimal.csv eine einfaktorielle ANOVA durch. Gibt es Unterschiede zwischen der Anzahl verkaufter Gerichte “tot_sold” (Buffet, Fleisch oder Vegetarisch) pro Woche?\n\n\nÜbung 2.3N: Mehrfaktorielle ANOVA (NatWis)\nANOVA mit kormoran.csv\nDer Datensatz enthält 40 Beobachtungen zu Tauchzeiten zweier Kormoranunterarten (C = Phalocrocorax carbo carbo und S = Phalacrocorax carbo sinensis) aus vier Jahreszeiten (F = Frühling, S = Sommer, H = Herbst, W = Winter).\n\nLest den Datensatz nach R ein und führt eine adäquate Analyse durch, um beantworten zu können, wie Unterart und Jahreszeit die Tauchzeit beeinflussen.\nStellt eure Ergebnisse dann angemessen dar (Text mit Abbildung und/oder Tabelle).\nGibt es eine Interaktion?\n\n\n\nÜbung 2.3S: Mehrfaktorielle ANOVA mit Interaktion (SozWis)\nMANOVA mit Datensatz_novanimal_Uebung_Statistik2.3.csv\nIn der Mensa gibt es zwei unterschiedliche Preisniveaus bzgl. den Gerichten: eine preisgünstigere Menülinie (“World” & “Favorite”) und eine teuere Menülinie (“Kitchen”). Gibt es Unterschiede zwischen dem Kauf von preisgünstigeren resp. teureren Menülinien betreffend Menüinhalt & Hochschulzugehörigkeit?"
  },
  {
    "objectID": "stat1-4/Statistik2_Loesung_Beispiel.html#musterlösung-beispiel",
    "href": "stat1-4/Statistik2_Loesung_Beispiel.html#musterlösung-beispiel",
    "title": "Stat2: Lösung Beispiel",
    "section": "Musterlösung Beispiel",
    "text": "Musterlösung Beispiel\n\nDownload dieses Lösungsscript via “&lt;/&gt;Code” (oben rechts)\nLösungstext als Download\n\n\nÜbungsaufgabe\n(hier so ausführlich formuliert, wie dies auch in der Klausur der Fall sein wird)\n\nLaden Sie den Datensatz decay.csv. Dieser enthält die Zahl radioaktiver Zerfälle pro Zeiteinheit (amount) für Zeitpunkte (time) nach dem Start des Experimentes.\nErmitteln Sie ein statistisches Modell, dass die Zerfallshäufigkeit in Abhängigkeit von der Zeit beschreibt.\nBitte erklären und begründen Sie die einzelnen Schritte, die Sie unternehmen, um zu diesem Ergebnis zu kommen. Dazu erstellen Sie bitte ein Word-Dokument (oder ein z.B. mit Quarto generiertes pdf- oder html-Dokument), in das Sie Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, Ihre Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentieren.\nDieser Ablauf sollte insbesondere beinhalten:\n\nÜberprüfen der Datenstruktur nach dem Einlesen, welches sind die abhängige(n) und welches die unabhängige(n) Variablen\nExplorative Datenanalyse, um zu sehen, ob evtl. Dateneingabefehler vorliegen oder Datentransformationen vorgenommen werden sollten\nAuswahl und Begründung eines statistischen Verfahrens (es gibt hier mehrere statistisch korrekte Möglichkeiten!)\nErmittlung eines Modells\nDurchführen der Modelldiagnostik für das gewählte Modell\nGenerieren aller Zahlen, Statistiken und Tabellen, die für eine wiss. Ergebnisdarstellung benötigt werden\nFormulieren Sie abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\nAbzugeben sind am Ende (a) Ein lauffähiges R-Skript; (b) begründeter Lösungsweg (Kombination aus R-Code, R Output und dessen Interpretation) und (c) ausformulierter Methoden- und Ergebnisteil (für eine wiss. Arbeit)."
  },
  {
    "objectID": "stat1-4/Statistik2_Loesung_Beispiel.html#kommentierter-lösungsweg",
    "href": "stat1-4/Statistik2_Loesung_Beispiel.html#kommentierter-lösungsweg",
    "title": "Stat2: Lösung Beispiel",
    "section": "Kommentierter Lösungsweg",
    "text": "Kommentierter Lösungsweg\n\nsummary(decay)\n##       time          amount       \n##  Min.   : 0.0   Min.   :  8.196  \n##  1st Qu.: 7.5   1st Qu.: 21.522  \n##  Median :15.0   Median : 35.015  \n##  Mean   :15.0   Mean   : 42.146  \n##  3rd Qu.:22.5   3rd Qu.: 57.460  \n##  Max.   :30.0   Max.   :125.000\nstr(decay)\n## 'data.frame':    31 obs. of  2 variables:\n##  $ time  : int  0 1 2 3 4 5 6 7 8 9 ...\n##  $ amount: num  125 100.2 70 83.5 100 ...\n\nMan erkennt, dass es 31 Beobachtungen für die Zeit als Integer von Zerfällen gibt, die als rationale Zahlen angegeben werden (dass die Zahl der Zerfälle nicht ganzzahlig ist, deutet darauf hin, dass sie möglicherweise nur in einem Teil des Zeitintervalls oder für einen Teil des betrachteten Raumes gemessen und dann hochgerechnet wurde.)\n\nExplorative Datenanalyse\n\nboxplot(decay$time)\n\n\n\nboxplot(decay$amount)\n\n\n\nplot(amount ~ time, data = decay)\n\n\n\n\nWährend der Boxplot für time wunderbar symmetrisch ohne Ausreisser ist, zeigt amount eine stark rechtsschiefe (linkssteile) Verteilung mit einem Ausreisser. Das deutet schon an, dass ein einfaches lineares Modell vermutlich die Modellannahmen verletzen wird. Auch der einfache Scatterplot zeigt, dass ein lineares Modell wohl nicht adäquat ist. Wir rechnen aber erst einmal weiter.\n\n\nEinfaches lineares Modell\n\nlm.1 &lt;- lm(amount ~ time, data = decay)\nsummary(lm.1)\n## \n## Call:\n## lm(formula = amount ~ time, data = decay)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -19.065 -10.029  -2.058   5.107  40.447 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  84.5534     5.0277   16.82  &lt; 2e-16 ***\n## time         -2.8272     0.2879   -9.82 9.94e-11 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 14.34 on 29 degrees of freedom\n## Multiple R-squared:  0.7688, Adjusted R-squared:  0.7608 \n## F-statistic: 96.44 on 1 and 29 DF,  p-value: 9.939e-11\n\nDas sieht erst einmal nach einem Supermodell aus, höchstsignifikant und mit einem hohen R² von fast 77%. ABER: wir müssen uns noch die Modelldiagnostik ansehen…\n\n\nModelldiagnostik\n\npar(mfrow = c(2, 2))\nplot(lm.1)\n\n\n\n\nHier zeigen die wichtigen oberen Plots beide massive Abweichungen vom „Soll”. Der Plot oben links zeigt eine „Banane” und beim Q-Q-Plot oben rechts weichen die Punkte rechts der Mitte alle stark nach oben von der Solllinie ab. Wir haben unser Modell also offensichtlich falsch spezifiziert. Um eine Idee zu bekommen, was falsch ist, plotten wir noch, wie das Ergebnis dieses Modells aussähe:\n\n\nErgebnisplot\n\npar(mfrow = c(1, 1))\nplot(decay$time, decay$amount)\nabline(lm.1, col = \"red\")\n\n\n\n\nDie Punkte links liegen alle über der Regressionslinie, die in der Mitte darunter und die ganz rechts wieder systematisch darüber (darum im Diagnostikplot oben die „Banane”). Es liegt also offensichtlich keine lineare Beziehung vor, sondern eine curvilineare.\nUm diese korrekt zu analysieren, gibt es im Prinzip drei Möglichkeiten, wovon am zweiten Kurstag nur eine hatten, während die zweite und dritte in Statistik 3 und 4 folgten. Im Folgenden sind alle drei nacheinander dargestellt (in der Klausur würde es aber genügen, eine davon darzustellen, wenn die Aufgabenstellung wie oben lautet)."
  },
  {
    "objectID": "stat1-4/Statistik2_Loesung_Beispiel.html#variante-1-log-transformation-der-abängigen-variablen",
    "href": "stat1-4/Statistik2_Loesung_Beispiel.html#variante-1-log-transformation-der-abängigen-variablen",
    "title": "Stat2: Lösung Beispiel",
    "section": "Variante (1): log-Transformation der abängigen Variablen",
    "text": "Variante (1): log-Transformation der abängigen Variablen\nDass die Verteilung der abhängigen Variable nicht normal ist, haben wir ja schon bei der explorativen Datenanalyse am Anfang gesehen. Da sie stark linkssteil ist, zugleich aber keine Nullwerte enthält, bietet sich eine Logarithmustransformation an, hier z. B. mit dem natürlichen Logarithmus.\n\npar(mfrow = c(1, 2))\nboxplot(decay$amount)\nboxplot(log(decay$amount))\n\n\n\nhist(decay$amount)\nhist(log(decay$amount))\n\n\n\n\nDie log-transformierte Variante rechts sieht sowohl im Boxplot als auch im Histogramm viel symmetrischer/besser normalverteilt aus. Damit ergibt sich dann folgendes lineares Modell\n\nlm.2 &lt;- lm(log(amount) ~ time, data = decay)\nsummary(lm.2)\n## \n## Call:\n## lm(formula = log(amount) ~ time, data = decay)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -0.5935 -0.2043  0.0067  0.2198  0.6297 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  4.547386   0.100295   45.34  &lt; 2e-16 ***\n## time        -0.068528   0.005743  -11.93 1.04e-12 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.286 on 29 degrees of freedom\n## Multiple R-squared:  0.8308, Adjusted R-squared:  0.825 \n## F-statistic: 142.4 on 1 and 29 DF,  p-value: 1.038e-12\n\nJetzt ist der R²-Wert noch höher und der p-Wert noch niedriger als im ursprünglichen linearen Modell ohne Transformation. Das erlaubt aber keine Aussage, da wir Äpfel mit Birnen vergleichen, da die abhängige Variable einmal untransformiert und einmal log-transformiert ist. Entscheidend ist die Modelldiagnostik.\n\nModelldiagnostik\n\npar(mfrow = c(2, 2))\nplot(lm.2)\n\n\n\n\nDer Q-Q-Plot sieht jetzt exzellent aus, der Plot rechts oben hat kaum noch eine Banane, nur noch einen leichten Keil. Insgesamt deutlich besser und auf jeden Fall ein statistisch korrektes Modell.\nLösungen 2 und 3 greifen auf Methoden von Statistik 3 und 4 zurück, sie sind hier nur zum Vergleich angeführt"
  },
  {
    "objectID": "stat1-4/Statistik2_Loesung_Beispiel.html#variante-2-quadratische-regression",
    "href": "stat1-4/Statistik2_Loesung_Beispiel.html#variante-2-quadratische-regression",
    "title": "Stat2: Lösung Beispiel",
    "section": "Variante (2): Quadratische Regression",
    "text": "Variante (2): Quadratische Regression\n(kommt erst in Statistik 3) könnte für die Datenverteilung passen, entspricht aber nicht der physikalischen\n\nGesetzmässigkeit\n\nmodel.quad &lt;- lm(amount ~ time + I(time^2), data = decay)\nsummary(model.quad)\n## \n## Call:\n## lm(formula = amount ~ time + I(time^2), data = decay)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -22.302  -6.044  -1.603   4.224  20.581 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept) 106.38880    4.65627  22.849  &lt; 2e-16 ***\n## time         -7.34485    0.71844 -10.223 5.90e-11 ***\n## I(time^2)     0.15059    0.02314   6.507 4.73e-07 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 9.205 on 28 degrees of freedom\n## Multiple R-squared:  0.908,  Adjusted R-squared:  0.9014 \n## F-statistic: 138.1 on 2 and 28 DF,  p-value: 3.122e-15\n\nHier können wir R² mit dem ursprünglichen Modell vergleichen (beide haben amount als abhängige Grösse) und es sieht viel besser aus. Sowohl der lineare als auch der quadratische Term sind hochsignifikant. Sicherheitshalber vergleichen wir die beiden Modelle aber noch mittels ANOVA.\n\n\nVergleich mit dem einfachen Modell mittels ANOVA (es ginge auch AICc)\n\nanova(lm.1, model.quad)\n## Analysis of Variance Table\n## \n## Model 1: amount ~ time\n## Model 2: amount ~ time + I(time^2)\n##   Res.Df    RSS Df Sum of Sq      F    Pr(&gt;F)    \n## 1     29 5960.6                                  \n## 2     28 2372.6  1    3588.1 42.344 4.727e-07 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nIn der Tat ist das komplexere Modell (jenes mit dem quadratischen Term) höchstsignifikant besser. Jetzt brauchen wir noch die Modelldiagnostik.\n\n\nModelldiagnostik\n\npar(mfrow = c(2, 2))\nplot(model.quad)"
  },
  {
    "objectID": "stat1-4/Statistik2_Loesung_Beispiel.html#variante-3-nicht-lineare-regression",
    "href": "stat1-4/Statistik2_Loesung_Beispiel.html#variante-3-nicht-lineare-regression",
    "title": "Stat2: Lösung Beispiel",
    "section": "Variante (3): Nicht lineare Regression",
    "text": "Variante (3): Nicht lineare Regression\n(die beste, hatten wir aber am 2. Tag noch nicht; mit Startwerten muss man ggf. ausprobieren) mit Startwerten muss man ggf. ausprobieren\n\nmodel.nls &lt;- nls(amount ~ a * exp(-b * time), start = (list(a = 100, b = 1)), data = decay)\nsummary(model.nls)\n## \n## Formula: amount ~ a * exp(-b * time)\n## \n## Parameters:\n##    Estimate Std. Error t value Pr(&gt;|t|)    \n## a 1.081e+02  4.993e+00   21.66  &lt; 2e-16 ***\n## b 8.019e-02  5.833e-03   13.75 3.12e-14 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 9.243 on 29 degrees of freedom\n## \n## Number of iterations to convergence: 8 \n## Achieved convergence tolerance: 7.966e-06\n\n\nModelldiagnostik\n\nlibrary(\"nlstools\")\n## Error in library(\"nlstools\"): there is no package called 'nlstools'\n\nresiduals.nls &lt;- nlsResiduals(model.nls)\n## Error in nlsResiduals(model.nls): could not find function \"nlsResiduals\"\nplot(residuals.nls)\n## Error in plot(residuals.nls): object 'residuals.nls' not found\n\nFür nls kann man nicht den normalen Plotbefehl für die Residualdiagnostik nehmen, sondern verwendet das Äquivalent aus nlstools. Die beiden entscheidenden Plots sind jetzt links oben und rechts unten. Der QQ-Plot hat im unteren Bereich einen kleinen Schönheitsfehler, aber ansonsten ist alles OK."
  },
  {
    "objectID": "stat1-4/Statistik2_Loesung_Beispiel.html#ergebnisplots",
    "href": "stat1-4/Statistik2_Loesung_Beispiel.html#ergebnisplots",
    "title": "Stat2: Lösung Beispiel",
    "section": "Ergebnisplots",
    "text": "Ergebnisplots\nDa alle drei Lösungen zumindest statistisch OK waren, sollen jetzt noch die zugehörigen Ergebnisplots erstellt werden.\n\npar(mfrow = c(1, 1))\nxv &lt;- seq(0, 30, 0.1)\n\n\nlineares Modell mit log-transformierter Abhängiger\n\n\nplot(decay$time, decay$amount)\nyv1 &lt;- exp(predict(lm.2, list(time = xv)))\nlines(xv, yv1, col = \"red\")\n\n\n\n\n\nquadratisches Modell\n\n\nplot(decay$time, decay$amount)\nyv2 &lt;- predict(model.quad, list(time = xv))\nlines(xv, yv2, col = \"blue\")\n\n\n\n\n\nnicht-lineares Modell\n\n\nplot(decay$time, decay$amount)\nyv3 &lt;- predict(model.nls, list(time = xv))\nlines(xv, yv3, col = \"green\")\n\n\n\n\nOptisch betrachtet, geben (2) und (3) den empirischen Zusammenhang etwas besser wieder als (1), da sie im linken Bereich die hohen Werte besser treffen. Man könnte sogar meinen, bei Betrachtung der Daten, dass die Werte ab time = 28 wieder leicht ansteigen, was die quadratische Funktion wiedergibt. Wer sich aber mit Physik etwas auskennt, weiss, dass Version (2) physikalisch nicht zutrifft, da die Zerfallsrate mit der Zeit immer weiter abfällt. Aufgrund der kurzen Messreihe wäre eine quadratische Funktion trotzdem eine statistisch korrekte Interpretation. Mit längeren Messreihen würde sich jedoch schnell zeigen, dass sie nicht zutrifft."
  },
  {
    "objectID": "stat1-4/Statistik3_Demo.html#ancova",
    "href": "stat1-4/Statistik3_Demo.html#ancova",
    "title": "Stat3: Demo",
    "section": "ANCOVA",
    "text": "ANCOVA\nExperiment zur Fruchtproduktion (“Fruit”) von Ipomopsis sp. (“Fruit”) in Abhängigkeit von der Beweidung (“Grazing” mit 2 Levels: “Grazed”, “Ungrazed”) und korrigiert für die Pflanzengrösse vor der Beweidung (hier ausgedrückt als Durchmesser an der Spitze des Wurzelstock: “Root”)\n\n# Daten einlesen und anschauen\n\ncompensation &lt;- read.delim(\"datasets/stat1-4/ipomopsis.csv\", sep = \",\", stringsAsFactors = T)\nhead(compensation)\n##   X  Root Fruit  Grazing\n## 1 1 6.225 59.77 Ungrazed\n## 2 2 6.487 60.98 Ungrazed\n## 3 3 4.919 14.73 Ungrazed\n## 4 4 5.130 19.28 Ungrazed\n## 5 5 5.417 34.25 Ungrazed\n## 6 6 5.359 35.53 Ungrazed\nsummary(compensation)\n##        X              Root            Fruit            Grazing  \n##  Min.   : 1.00   Min.   : 4.426   Min.   : 14.73   Grazed  :20  \n##  1st Qu.:10.75   1st Qu.: 6.083   1st Qu.: 41.15   Ungrazed:20  \n##  Median :20.50   Median : 7.123   Median : 60.88                \n##  Mean   :20.50   Mean   : 7.181   Mean   : 59.41                \n##  3rd Qu.:30.25   3rd Qu.: 8.510   3rd Qu.: 76.19                \n##  Max.   :40.00   Max.   :10.253   Max.   :116.05\n\n# Pflanzengrösse (\"Root\") vs. Fruchtproduktion (\"Fruit\")\nplot(Fruit ~ Root, data = compensation)\n\n\n\n\n-&gt; Je grösser die Pflanze, desto grösser ihre Fruchtproduktion.\n\n# Beweidung (\"Grazing\") vs. Fruchtroduktion (\"Fruit)\nboxplot(Fruit ~ Grazing, data = compensation)\n\n\n\n\n-&gt; In der beweideten Gruppe scheint die Fruchtproduktion grösser. Liegt dies an der Beweidung oder an unterschiedlichen Pflanzengrössen zwischen den Gruppen?\n\n# Plotten der vollständigen Daten/Information\nlibrary(\"ggplot2\")\nggplot(compensation, aes(Root, Fruit, color = Grazing)) +\n  geom_point() +\n  theme_classic()\n\n\n\n\n-&gt; Die grössere Fruchtproduktion innerhalb der beweideten Gruppe scheint also ein Resultat von unterschiedlichen Pflanzengrössen zwischen den Gruppen zu sein und nicht an der Beweidung zu liegen.\n\n# Lineare Modelle definieren und anschauen\n\naoc.1 &lt;- lm(Fruit ~ Root * Grazing, data = compensation) # Volles Modell mit Interaktion\nsummary.aov(aoc.1)\n##              Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## Root          1  16795   16795 359.968  &lt; 2e-16 ***\n## Grazing       1   5264    5264 112.832 1.21e-12 ***\n## Root:Grazing  1      5       5   0.103     0.75    \n## Residuals    36   1680      47                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\naoc.2 &lt;- lm(Fruit ~ Grazing + Root, data = compensation) # Finales Modell ohne die (nicht signifikante Interaktion)\nsummary.aov(aoc.2) # ANOVA-Tabelle\n##             Df Sum Sq Mean Sq F value  Pr(&gt;F)    \n## Grazing      1   2910    2910   63.93 1.4e-09 ***\n## Root         1  19149   19149  420.62 &lt; 2e-16 ***\n## Residuals   37   1684      46                    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nsummary(aoc.2) # Parameter-Tabelle\n## \n## Call:\n## lm(formula = Fruit ~ Grazing + Root, data = compensation)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -17.1920  -2.8224   0.3223   3.9144  17.3290 \n## \n## Coefficients:\n##                 Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)     -127.829      9.664  -13.23 1.35e-15 ***\n## GrazingUngrazed   36.103      3.357   10.75 6.11e-13 ***\n## Root              23.560      1.149   20.51  &lt; 2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 6.747 on 37 degrees of freedom\n## Multiple R-squared:  0.9291, Adjusted R-squared:  0.9252 \n## F-statistic: 242.3 on 2 and 37 DF,  p-value: &lt; 2.2e-16\n\n# Residualplots anschauen\npar(mfrow = c(2, 2))\nplot(aoc.2)\n\n\n\n\n-&gt; Das ANCOVA-Modell widerspiegelt die Zusammenhänge wie sie aufgrund der grafisch dargestellten Daten zu vermuten sind gut. Die Residual-Plots zeigen 3 Ausreisser (Beobachtungen 27, 34 und 37), welche “aus der Reihe tanzen”."
  },
  {
    "objectID": "stat1-4/Statistik3_Demo.html#polynomische-regression",
    "href": "stat1-4/Statistik3_Demo.html#polynomische-regression",
    "title": "Stat3: Demo",
    "section": "Polynomische Regression",
    "text": "Polynomische Regression\n\n# Daten generieren und Modelle rechnen\npred &lt;- c(20, 19, 25, 10, 8, 15, 13, 18, 11, 14, 25, 39, 38, 28, 24) # \"pred\" sei unsere unabhängige Variable\nresp &lt;- c(12, 15, 10, 7, 2, 10, 12, 11, 13, 10, 9, 2, 4, 7, 13) # \"resp\" sei unsere abhängige Variable\n\nplot(pred, resp) # So sehen die Daten aus\n\n\n\n\n# Modelle definieren\nlm.1 &lt;- lm(resp ~ pred) # Einfaches lineares Modell\nlm.quad &lt;- lm(resp ~ pred + I(pred^2)) # lineares Modell mit quadratischem Term\n\nsummary(lm.1) # Modell anschauen\n## \n## Call:\n## lm(formula = resp ~ pred)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -9.0549 -1.7015  0.5654  2.0617  5.6406 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  12.2879     2.4472   5.021 0.000234 ***\n## pred         -0.1541     0.1092  -1.412 0.181538    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 3.863 on 13 degrees of freedom\n## Multiple R-squared:  0.1329, Adjusted R-squared:  0.06622 \n## F-statistic: 1.993 on 1 and 13 DF,  p-value: 0.1815\n\n-&gt; kein signifikanter Zusammenhang und entsprechend kleines Bestimmtheitsmass (adj. R2 = 0.07)\n\nsummary(lm.quad) # Modell anschauen\n## \n## Call:\n## lm(formula = resp ~ pred + I(pred^2))\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -4.3866 -1.1018 -0.2027  1.3831  4.4211 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(&gt;|t|)   \n## (Intercept) -2.239308   3.811746  -0.587  0.56777   \n## pred         1.330933   0.360105   3.696  0.00306 **\n## I(pred^2)   -0.031587   0.007504  -4.209  0.00121 **\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.555 on 12 degrees of freedom\n## Multiple R-squared:  0.6499, Adjusted R-squared:  0.5915 \n## F-statistic: 11.14 on 2 and 12 DF,  p-value: 0.001842\n\n-&gt; signifikanter Zusammenhang und viel besseres Bestimmtheitsmass (adj. R2 = 0.60)\n\n# Modelle plotten\n\npar(mfrow = c(1, 2))\n\n# 1. lineares Modell\nplot(resp ~ pred, main = \"Lineares Modell\")\nabline(lm.1, col = \"blue\")\n\n# 2. quadratisches Modell\nplot(resp ~ pred, main = \"Quadratisches  Modell\")\nxv &lt;- seq(0, 40, 0.1) # Input für Modellvoraussage via predict ()\nyv2 &lt;- predict(lm.quad, list(pred = xv))\nlines(xv, yv2, col = \"red\")\n\n\n\n\n\n# Residualplots\npar(mfrow = c(2, 2))\nplot(lm.1, main = \"Lineares Modell\")\n\n\n\nplot(lm.quad, main = \"Quadratisches  Modell\")\n\n\n\n\n\nSimulation Overfitting\n\n# Beispieldaten mit 6 Datenpunkten\ntest &lt;- data.frame(\"x\" = c(1, 2, 3, 4, 5, 6), \"y\" = c(34, 21, 70, 47, 23, 45))\n\npar(mfrow = c(1, 1))\nplot(y ~ x, data = test)\n\n\n\n\n\n# Zunehmend komplizierte Modelle (je komplizierter desto overfitteter) definieren\nlm.0 &lt;- lm(y ~ 1, data = test)\nlm.1 &lt;- lm(y ~ x, data = test)\nlm.2 &lt;- lm(y ~ x + I(x^2), data = test)\nlm.3 &lt;- lm(y ~ x + I(x^2) + I(x^3), data = test)\nlm.4 &lt;- lm(y ~ x + I(x^2) + I(x^3) + I(x^4), data = test)\nlm.5 &lt;- lm(y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5), data = test)\n\n# Summaries rechnen\nsmy.0 &lt;- summary(lm.0)\nsmy.1 &lt;- summary(lm.1)\nsmy.2 &lt;- summary(lm.2)\nsmy.3 &lt;- summary(lm.3)\nsmy.4 &lt;- summary(lm.4)\nsmy.5 &lt;- summary(lm.5)\n\n# R2 vergleichen\n\nsmy.0$r.squared\n## [1] 0\nsmy.1$r.squared\n## [1] 0.01242685\nsmy.2$r.squared\n## [1] 0.1105981\nsmy.3$r.squared\n## [1] 0.1697982\nsmy.4$r.squared\n## [1] 0.874639\nsmy.5$r.squared\n## [1] 1\nsmy.5$adj.r.squared\n## [1] NaN\n\n-&gt; R2 wird immer grösser, d.h. die Modelle werden immer besser. ;-)\n\n# Modelle plotten\nxv &lt;- seq(from = 0, to = 10, by = 0.1)\nplot(y ~ x, cex = 2, col = \"black\", lwd = 3, data = test)\nyv &lt;- predict(lm.1, list(x = xv))\nlines(xv, yv, col = \"red\", lwd = 3)\ntext(x = c(1, 70), \"lm.1\", col = \"red\")\nyv &lt;- predict(lm.2, list(x = xv))\nlines(xv, yv, col = \"blue\", lwd = 3)\ntext(x = c(1, 65), \"lm.2\", col = \"blue\")\nyv &lt;- predict(lm.3, list(x = xv))\nlines(xv, yv, col = \"green\", lwd = 3)\ntext(x = c(1, 60), \"lm.3\", col = \"green\")\nyv &lt;- predict(lm.4, list(x = xv))\nlines(xv, yv, col = \"orange\", lwd = 3)\ntext(x = c(1, 55), \"lm.4\", col = \"orange\")\nyv &lt;- predict(lm.5, list(x = xv))\nlines(xv, yv, col = \"violet\", lwd = 3)\ntext(x = c(1, 50), \"lm.5\", col = \"violet\")\n\n\n\n\n-&gt; Auch der optische Fit wird immer besser. Wir bestreiben jedoch Overfitting und Overfittig ist nicht gut: Denn, macht es Sinn, 6 Datenpunkte mit einem Modell mit 6 Parametern zu fitten??"
  },
  {
    "objectID": "stat1-4/Statistik3_Demo.html#multiple-lineare-regression-basierend-auf-logan-beispiel-9a",
    "href": "stat1-4/Statistik3_Demo.html#multiple-lineare-regression-basierend-auf-logan-beispiel-9a",
    "title": "Stat3: Demo",
    "section": "Multiple lineare Regression (basierend auf Logan, Beispiel 9A)",
    "text": "Multiple lineare Regression (basierend auf Logan, Beispiel 9A)\n\n# Daten laden und anschauen\nloyn &lt;- read.delim(\"datasets/stat1-4/loyn.csv\", sep = \",\")\nsummary(loyn)\n##        X             ABUND            AREA            YR.ISOL    \n##  Min.   : 1.00   Min.   : 1.50   Min.   :   0.10   Min.   :1890  \n##  1st Qu.:14.75   1st Qu.:12.40   1st Qu.:   2.00   1st Qu.:1928  \n##  Median :28.50   Median :21.05   Median :   7.50   Median :1962  \n##  Mean   :28.50   Mean   :19.51   Mean   :  69.27   Mean   :1950  \n##  3rd Qu.:42.25   3rd Qu.:28.30   3rd Qu.:  29.75   3rd Qu.:1966  \n##  Max.   :56.00   Max.   :39.60   Max.   :1771.00   Max.   :1976  \n##       DIST            LDIST            GRAZE            ALT       \n##  Min.   :  26.0   Min.   :  26.0   Min.   :1.000   Min.   : 60.0  \n##  1st Qu.:  93.0   1st Qu.: 158.2   1st Qu.:2.000   1st Qu.:120.0  \n##  Median : 234.0   Median : 338.5   Median :3.000   Median :140.0  \n##  Mean   : 240.4   Mean   : 733.3   Mean   :2.982   Mean   :146.2  \n##  3rd Qu.: 333.2   3rd Qu.: 913.8   3rd Qu.:4.000   3rd Qu.:182.5  \n##  Max.   :1427.0   Max.   :4426.0   Max.   :5.000   Max.   :260.0\n\n\nKorrelation zwischen den Prädiktoren\n\n# Wir setzen die Schwelle bei |0.7|\n\ncor &lt;- cor(loyn[, 3:8]) # Korrelationen rechnen details siehe: \"?cor\"\n\n# Korrelationen Visualisieren (google: \"correlation plot r\"...)\nlibrary(\"corrplot\")\n\ncorrplot.mixed(cor, lower = \"ellipse\", upper = \"number\", order = \"AOE\")\n\n\n\n\n-&gt; Keine Korrelation ist &gt;|0.7| . Aber es gilt zu beachten , dass GRAZE ziemlich stark |&gt;0.6| mit YR.ISOL korreliert ist\n\n# Volles Modell definieren\n\nnames(loyn)\n## [1] \"X\"       \"ABUND\"   \"AREA\"    \"YR.ISOL\" \"DIST\"    \"LDIST\"   \"GRAZE\"  \n## [8] \"ALT\"\nlm.1 &lt;- lm(ABUND ~ YR.ISOL + AREA + DIST + LDIST + GRAZE + ALT, data = loyn)\n\nlibrary(\"car\")\n\npar(mfrow = c(2, 2))\nplot(lm.1)\n\n\n\n\n-&gt; Plot sieht zwar ok aus, aber mit 6 Prädiktoren ist das Modell wohl “overfitted”\n\nvif(lm.1)\n##  YR.ISOL     AREA     DIST    LDIST    GRAZE      ALT \n## 1.841657 1.337627 1.227387 1.255028 2.307661 1.574537\n\n\n\nModellvereinfachung\nSchrittweise die am wenigsten signifkanten Terme entfernen:\n\nlm.1 &lt;- lm(ABUND ~ YR.ISOL + AREA + DIST + LDIST + GRAZE + ALT, data = loyn)\nsummary(lm.1)\n## \n## Call:\n## lm(formula = ABUND ~ YR.ISOL + AREA + DIST + LDIST + GRAZE + \n##     ALT, data = loyn)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -17.6638  -4.6409  -0.0883   4.2858  20.1042 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(&gt;|t|)   \n## (Intercept) -1.097e+02  1.133e+02  -0.968  0.33791   \n## YR.ISOL      6.693e-02  5.684e-02   1.177  0.24472   \n## AREA         8.866e-04  4.657e-03   0.190  0.84980   \n## DIST         3.811e-03  5.418e-03   0.703  0.48514   \n## LDIST        1.418e-03  1.310e-03   1.082  0.28451   \n## GRAZE       -3.447e+00  1.107e+00  -3.114  0.00308 **\n## ALT          4.772e-02  3.089e-02   1.545  0.12878   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.947 on 49 degrees of freedom\n## Multiple R-squared:  0.5118, Adjusted R-squared:  0.452 \n## F-statistic: 8.561 on 6 and 49 DF,  p-value: 2.24e-06\n\nlm.2 &lt;- update(lm.1, ~ . - AREA) # Prädiktor mit grösstem p-Wert entfernen\nanova(lm.1, lm.2) # Modelle vergleichen (falls signifikant, so müssten man den Prädiktor wieder ins Modell nehmen)\n## Analysis of Variance Table\n## \n## Model 1: ABUND ~ YR.ISOL + AREA + DIST + LDIST + GRAZE + ALT\n## Model 2: ABUND ~ YR.ISOL + DIST + LDIST + GRAZE + ALT\n##   Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)\n## 1     49 3094.2                           \n## 2     50 3096.5 -1   -2.2886 0.0362 0.8498\nsummary(lm.2) # Neues einfacheres Modell anschauen und Prädiktor mit grösstem p-Wert ausfindig machen\n## \n## Call:\n## lm(formula = ABUND ~ YR.ISOL + DIST + LDIST + GRAZE + ALT, data = loyn)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -17.7240  -4.7245   0.0206   4.2698  20.0630 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(&gt;|t|)   \n## (Intercept) -1.044e+02  1.089e+02  -0.959  0.34202   \n## YR.ISOL      6.418e-02  5.445e-02   1.179  0.24409   \n## DIST         3.884e-03  5.352e-03   0.726  0.47145   \n## LDIST        1.440e-03  1.292e-03   1.115  0.27036   \n## GRAZE       -3.500e+00  1.060e+00  -3.303  0.00177 **\n## ALT          4.964e-02  2.891e-02   1.717  0.09212 . \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.87 on 50 degrees of freedom\n## Multiple R-squared:  0.5114, Adjusted R-squared:  0.4626 \n## F-statistic: 10.47 on 5 and 50 DF,  p-value: 6.532e-07\n\n# Oben beschriebene Schritte wiederholen bis nur noch signifikante Prädiktoren im Modell\nlm.3 &lt;- update(lm.2, ~ . - DIST)\nanova(lm.2, lm.3)\n## Analysis of Variance Table\n## \n## Model 1: ABUND ~ YR.ISOL + DIST + LDIST + GRAZE + ALT\n## Model 2: ABUND ~ YR.ISOL + LDIST + GRAZE + ALT\n##   Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)\n## 1     50 3096.5                           \n## 2     51 3129.1 -1   -32.609 0.5265 0.4714\nsummary(lm.3)\n## \n## Call:\n## lm(formula = ABUND ~ YR.ISOL + LDIST + GRAZE + ALT, data = loyn)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -18.4659  -4.8236   0.1506   4.9245  19.8891 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept) -99.587487 108.158382  -0.921 0.361513    \n## YR.ISOL       0.062627   0.054157   1.156 0.252910    \n## LDIST         0.001677   0.001245   1.347 0.184026    \n## GRAZE        -3.699613   1.018706  -3.632 0.000653 ***\n## ALT           0.046485   0.028446   1.634 0.108386    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.833 on 51 degrees of freedom\n## Multiple R-squared:  0.5063, Adjusted R-squared:  0.4676 \n## F-statistic: 13.07 on 4 and 51 DF,  p-value: 2.123e-07\n\nlm.4 &lt;- update(lm.3, ~ . - YR.ISOL)\nanova(lm.3, lm.4)\n## Analysis of Variance Table\n## \n## Model 1: ABUND ~ YR.ISOL + LDIST + GRAZE + ALT\n## Model 2: ABUND ~ LDIST + GRAZE + ALT\n##   Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)\n## 1     51 3129.1                           \n## 2     52 3211.2 -1   -82.047 1.3372 0.2529\nsummary(lm.4)\n## \n## Call:\n## lm(formula = ABUND ~ LDIST + GRAZE + ALT, data = loyn)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -18.155  -4.148  -0.503   4.649  18.588 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept) 25.289313   6.080034   4.159  0.00012 ***\n## LDIST        0.001455   0.001234   1.179  0.24362    \n## GRAZE       -4.430947   0.801206  -5.530 1.05e-06 ***\n## ALT          0.043565   0.028425   1.533  0.13144    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.858 on 52 degrees of freedom\n## Multiple R-squared:  0.4933, Adjusted R-squared:  0.4641 \n## F-statistic: 16.88 on 3 and 52 DF,  p-value: 8.777e-08\n\nlm.5 &lt;- update(lm.4, ~ . - LDIST)\nanova(lm.4, lm.5)\n## Analysis of Variance Table\n## \n## Model 1: ABUND ~ LDIST + GRAZE + ALT\n## Model 2: ABUND ~ GRAZE + ALT\n##   Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)\n## 1     52 3211.2                           \n## 2     53 3297.1 -1   -85.892 1.3909 0.2436\nsummary(lm.5)\n## \n## Call:\n## lm(formula = ABUND ~ GRAZE + ALT, data = loyn)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -19.1677  -4.8261   0.0266   4.6944  19.1054 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept) 28.55582    5.43245   5.257 2.67e-06 ***\n## GRAZE       -4.59679    0.79167  -5.806 3.67e-07 ***\n## ALT          0.03191    0.02675   1.193    0.238    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.887 on 53 degrees of freedom\n## Multiple R-squared:  0.4798, Adjusted R-squared:  0.4602 \n## F-statistic: 24.44 on 2 and 53 DF,  p-value: 3.011e-08\n\nlm.6 &lt;- update(lm.5, ~ . - ALT)\nanova(lm.5, lm.6)\n## Analysis of Variance Table\n## \n## Model 1: ABUND ~ GRAZE + ALT\n## Model 2: ABUND ~ GRAZE\n##   Res.Df    RSS Df Sum of Sq      F Pr(&gt;F)\n## 1     53 3297.1                           \n## 2     54 3385.6 -1   -88.519 1.4229 0.2382\nsummary(lm.6)\n## \n## Call:\n## lm(formula = ABUND ~ GRAZE, data = loyn)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -19.1066  -5.4097   0.0934   4.4856  18.2747 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  34.3692     2.4095  14.264  &lt; 2e-16 ***\n## GRAZE        -4.9813     0.7259  -6.862  6.9e-09 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.918 on 54 degrees of freedom\n## Multiple R-squared:  0.4658, Adjusted R-squared:  0.4559 \n## F-statistic: 47.09 on 1 and 54 DF,  p-value: 6.897e-09\n\npar(mfrow = c(2, 2))\nplot(lm.6)\n\n\n\n\n-&gt; das minimal adäquate Modell enthält nur noch einen Prädiktor (GRAZE) und dessen Residualplots sehen ok aus.\n\n\nHierarchical partitioning\nWir können auch schauen wie bedeutsam die einzelnen Variablen sind:\n\nlibrary(\"hier.part\")\n## Error in library(\"hier.part\"): there is no package called 'hier.part'\n\nloyn.preds &lt;- with(loyn, data.frame(YR.ISOL, AREA, DIST, LDIST, GRAZE, ALT))\n\npar(mfrow = c(1, 1))\nhier.part(loyn$ABUND, loyn.preds, gof = \"Rsqu\")\n## Error in hier.part(loyn$ABUND, loyn.preds, gof = \"Rsqu\"): could not find function \"hier.part\"\n\n-&gt; auch hier sticht GRAZE heraus. (und an zweiter Stelle YR.ISOL, der mit GRAZE am stärksten korreliert ist)\n\n\nPartial regressions\n\navPlots(lm.1, ask = F)"
  },
  {
    "objectID": "stat1-4/Statistik3_Demo.html#multimodel-inference",
    "href": "stat1-4/Statistik3_Demo.html#multimodel-inference",
    "title": "Stat3: Demo",
    "section": "Multimodel inference",
    "text": "Multimodel inference\n\nlibrary(\"MuMIn\")\n\nglobal.model &lt;- lm(ABUND ~ YR.ISOL + AREA +  DIST + LDIST + GRAZE + ALT, data = loyn)\n\noptions(na.action = \"na.fail\")\n\nallmodels &lt;- dredge(global.model)\nallmodels\n## Global model call: lm(formula = ABUND ~ YR.ISOL + AREA + DIST + LDIST + GRAZE + \n##     ALT, data = loyn)\n## ---\n## Model selection table \n##        (Int)     ALT        ARE      DIS    GRA       LDI  YR.ISO df   logLik\n## 9    34.3700                             -4.981                    3 -194.315\n## 10   28.5600 0.03191                     -4.597                    4 -193.573\n## 41  -62.7500                             -4.440           0.04898  4 -193.886\n## 26   25.2900 0.04356                     -4.431 0.0014550          5 -192.834\n## 25   33.7400                             -4.967 0.0007979          4 -194.071\n## 13   33.2300                    0.003224 -4.858                    4 -194.102\n## 11   33.9000          1.969e-03          -4.871                    4 -194.201\n## 14   25.6300 0.03834            0.004970 -4.330                    5 -193.081\n## 42  -73.5800 0.03285                     -4.017           0.05143  5 -193.087\n## 58  -99.5900 0.04649                     -3.700 0.0016770 0.06263  6 -192.109\n## 57  -74.9700                             -4.359 0.0009527 0.05477  5 -193.538\n## 12   28.6100 0.03094  5.055e-04          -4.580                    5 -193.566\n## 43  -85.8200          3.243e-03          -4.133           0.06023  5 -193.596\n## 45  -68.9900                    0.003542 -4.277           0.05150  5 -193.626\n## 46  -85.3900 0.03990            0.005386 -3.679           0.05577  6 -192.503\n## 30   23.6500 0.04645            0.003635 -4.262 0.0012290          6 -192.583\n## 27   33.3100          1.892e-03          -4.861 0.0007836          5 -193.965\n## 29   33.0400                    0.002360 -4.880 0.0006227          5 -193.968\n## 15   32.8100          1.886e-03 0.003153 -4.755                    5 -193.997\n## 28   25.2400 0.04416 -2.645e-04          -4.438 0.0014660          6 -192.832\n## 44  -85.1900 0.02954  1.785e-03          -3.891           0.05737  6 -193.006\n## 16   25.6300 0.03828  2.748e-05 0.004967 -4.329                    6 -193.081\n## 62 -104.4000 0.04964            0.003884 -3.500 0.0014400 0.06418  7 -191.816\n## 59  -98.3600          3.274e-03          -4.049 0.0009602 0.06617  6 -193.239\n## 47  -91.6700          3.200e-03 0.003490 -3.977           0.06256  6 -193.341\n## 60 -106.3000 0.04414  1.117e-03          -3.627 0.0016430 0.06612  7 -192.076\n## 61  -77.0200                    0.002499 -4.260 0.0007691 0.05543  6 -193.420\n## 48  -93.8000 0.03722  1.342e-03 0.005240 -3.593           0.06013  7 -192.456\n## 31   32.6300          1.848e-03 0.002304 -4.779 0.0006130          6 -193.867\n## 32   23.5300 0.04762 -5.038e-04 0.003682 -4.274 0.0012470          7 -192.576\n## 63 -100.1000          3.239e-03 0.002430 -3.956 0.0007817 0.06669  7 -193.127\n## 64 -109.7000 0.04772  8.866e-04 0.003811 -3.447 0.0014180 0.06693  8 -191.795\n## 38 -325.3000 0.07807            0.011030                  0.16960  5 -198.542\n## 50 -355.4000 0.08742                            0.0027220 0.18470  5 -198.549\n## 54 -336.0000 0.08950            0.008464        0.0020850 0.17380  6 -197.343\n## 52 -363.9000 0.07191  5.500e-03                 0.0024540 0.19020  6 -197.858\n## 40 -336.7000 0.06363  5.431e-03 0.009912                  0.17650  6 -197.870\n## 56 -344.8000 0.07638  4.590e-03 0.007723        0.0019170 0.17930  7 -196.852\n## 34 -348.5000 0.07006                                      0.18350  4 -200.670\n## 36 -360.2000 0.05243  7.028e-03                           0.19060  5 -199.584\n## 35 -393.4000          1.036e-02                           0.21140  4 -201.103\n## 39 -380.7000          9.678e-03 0.007598                  0.20400  5 -200.121\n## 51 -402.6000          1.019e-02                 0.0014210 0.21560  5 -200.496\n## 55 -389.0000          9.682e-03 0.006312        0.0009292 0.20800  6 -199.883\n## 37 -377.6000                    0.008890                  0.20260  4 -202.444\n## 33 -392.3000                                              0.21120  3 -203.690\n## 49 -402.3000                                    0.0015230 0.21580  4 -203.054\n## 53 -385.8000                    0.007611        0.0009246 0.20660  5 -202.227\n## 6     1.1570 0.10280            0.013820                           4 -204.646\n## 22   -1.1380 0.11310            0.011680        0.0017790          5 -203.948\n## 8     2.2060 0.09511  3.112e-03 0.013240                           5 -204.467\n## 18    1.1530 0.11220                            0.0026530          4 -205.786\n## 2     5.5980 0.09515                                               3 -207.358\n## 24   -0.2323 0.10680  2.339e-03 0.011360        0.0016890          6 -203.846\n## 20    2.4160 0.10280  3.509e-03                 0.0024810          5 -205.568\n## 4     6.9990 0.08318  5.050e-03                                    4 -206.917\n## 7    16.3800          9.404e-03 0.010330                           4 -208.625\n## 3    18.8000          1.033e-02                                    3 -209.974\n## 5    16.7300                    0.011570                           3 -210.265\n## 1    19.5100                                                       2 -211.871\n## 19   18.1300          1.022e-02                 0.0009186          4 -209.789\n## 23   16.3100          9.404e-03 0.010120        0.0001591          5 -208.620\n## 21   16.6700                    0.011360        0.0001598          4 -210.260\n## 17   18.7700                                    0.0010210          3 -211.658\n##     AICc delta weight\n## 9  395.1  0.00  0.145\n## 10 395.9  0.84  0.095\n## 41 396.6  1.46  0.070\n## 26 396.9  1.78  0.059\n## 25 396.9  1.84  0.058\n## 13 397.0  1.90  0.056\n## 11 397.2  2.10  0.051\n## 14 397.4  2.27  0.046\n## 42 397.4  2.28  0.046\n## 58 397.9  2.84  0.035\n## 57 398.3  3.19  0.029\n## 12 398.3  3.24  0.029\n## 43 398.4  3.30  0.028\n## 45 398.5  3.36  0.027\n## 46 398.7  3.63  0.024\n## 30 398.9  3.79  0.022\n## 27 399.1  4.04  0.019\n## 29 399.1  4.04  0.019\n## 15 399.2  4.10  0.019\n## 28 399.4  4.29  0.017\n## 44 399.7  4.63  0.014\n## 16 399.9  4.79  0.013\n## 62 400.0  4.87  0.013\n## 59 400.2  5.10  0.011\n## 47 400.4  5.31  0.010\n## 60 400.5  5.40  0.010\n## 61 400.6  5.46  0.009\n## 48 401.2  6.15  0.007\n## 31 401.4  6.36  0.006\n## 32 401.5  6.39  0.006\n## 63 402.6  7.50  0.003\n## 64 402.7  7.56  0.003\n## 38 408.3 13.19  0.000\n## 50 408.3 13.21  0.000\n## 54 408.4 13.31  0.000\n## 52 409.4 14.34  0.000\n## 40 409.5 14.36  0.000\n## 56 410.0 14.95  0.000\n## 34 410.1 15.03  0.000\n## 36 410.4 15.28  0.000\n## 35 411.0 15.90  0.000\n## 39 411.4 16.35  0.000\n## 51 412.2 17.10  0.000\n## 55 413.5 18.39  0.000\n## 37 413.7 18.58  0.000\n## 33 413.8 18.75  0.000\n## 49 414.9 19.80  0.000\n## 53 415.7 20.56  0.000\n## 6  418.1 22.99  0.000\n## 22 419.1 24.01  0.000\n## 8  420.1 25.04  0.000\n## 18 420.4 25.27  0.000\n## 2  421.2 26.09  0.000\n## 24 421.4 26.32  0.000\n## 20 422.3 27.25  0.000\n## 4  422.6 27.53  0.000\n## 7  426.0 30.94  0.000\n## 3  426.4 31.32  0.000\n## 5  427.0 31.90  0.000\n## 1  428.0 32.88  0.000\n## 19 428.4 33.27  0.000\n## 23 428.4 33.35  0.000\n## 21 429.3 34.21  0.000\n## 17 429.8 34.69  0.000\n## Models ranked by AICc(x)\n\n# Variable importance\nsw(allmodels)\n##                      GRAZE ALT  YR.ISOL LDIST DIST AREA\n## Sum of weights:      1.00  0.44 0.34    0.32  0.28 0.25\n## N containing models:   32    32   32      32    32   32\n\n-&gt; Auch mit dieser Sichtweise ist GRAZE der wichtigste Prädiktor\n\navgmodel &lt;- model.avg(allmodels, subset = TRUE)\nsummary(avgmodel)\n## \n## Call:\n## model.avg(object = allmodels, subset = TRUE)\n## \n## Component model call: \n## lm(formula = ABUND ~ &lt;64 unique rhs&gt;, data = loyn)\n## \n## Component models: \n##        df  logLik   AICc delta weight\n## 4       3 -194.31 395.09  0.00   0.14\n## 14      4 -193.57 395.93  0.84   0.10\n## 46      4 -193.89 396.56  1.46   0.07\n## 145     5 -192.83 396.87  1.78   0.06\n## 45      4 -194.07 396.93  1.84   0.06\n## 34      4 -194.10 396.99  1.90   0.06\n## 24      4 -194.20 397.19  2.10   0.05\n## 134     5 -193.08 397.36  2.27   0.05\n## 146     5 -193.09 397.37  2.28   0.05\n## 1456    6 -192.11 397.93  2.84   0.03\n## 456     5 -193.54 398.28  3.19   0.03\n## 124     5 -193.57 398.33  3.24   0.03\n## 246     5 -193.60 398.39  3.30   0.03\n## 346     5 -193.63 398.45  3.36   0.03\n## 1346    6 -192.50 398.72  3.63   0.02\n## 1345    6 -192.58 398.88  3.79   0.02\n## 245     5 -193.97 399.13  4.04   0.02\n## 345     5 -193.97 399.14  4.04   0.02\n## 234     5 -194.00 399.19  4.10   0.02\n## 1245    6 -192.83 399.38  4.29   0.02\n## 1246    6 -193.01 399.73  4.63   0.01\n## 1234    6 -193.08 399.88  4.79   0.01\n## 13456   7 -191.82 399.96  4.87   0.01\n## 2456    6 -193.24 400.19  5.10   0.01\n## 2346    6 -193.34 400.40  5.31   0.01\n## 12456   7 -192.08 400.49  5.40   0.01\n## 3456    6 -193.42 400.55  5.46   0.01\n## 12346   7 -192.46 401.25  6.15   0.01\n## 2345    6 -193.87 401.45  6.36   0.01\n## 12345   7 -192.58 401.49  6.39   0.01\n## 23456   7 -193.13 402.59  7.50   0.00\n## 123456  8 -191.79 402.65  7.56   0.00\n## 136     5 -198.54 408.28 13.19   0.00\n## 156     5 -198.55 408.30 13.21   0.00\n## 1356    6 -197.34 408.40 13.31   0.00\n## 1256    6 -197.86 409.43 14.34   0.00\n## 1236    6 -197.87 409.45 14.36   0.00\n## 12356   7 -196.85 410.04 14.95   0.00\n## 16      4 -200.67 410.13 15.03   0.00\n## 126     5 -199.58 410.37 15.28   0.00\n## 26      4 -201.10 410.99 15.90   0.00\n## 236     5 -200.12 411.44 16.35   0.00\n## 256     5 -200.50 412.19 17.10   0.00\n## 2356    6 -199.88 413.48 18.39   0.00\n## 36      4 -202.44 413.67 18.58   0.00\n## 6       3 -203.69 413.84 18.75   0.00\n## 56      4 -203.05 414.89 19.80   0.00\n## 356     5 -202.23 415.65 20.56   0.00\n## 13      4 -204.65 418.08 22.99   0.00\n## 135     5 -203.95 419.10 24.01   0.00\n## 123     5 -204.47 420.13 25.04   0.00\n## 15      4 -205.79 420.36 25.27   0.00\n## 1       3 -207.36 421.18 26.09   0.00\n## 1235    6 -203.85 421.41 26.32   0.00\n## 125     5 -205.57 422.34 27.25   0.00\n## 12      4 -206.92 422.62 27.53   0.00\n## 23      4 -208.63 426.04 30.94   0.00\n## 2       3 -209.97 426.41 31.32   0.00\n## 3       3 -210.27 426.99 31.90   0.00\n## (Null)  2 -211.87 427.97 32.88   0.00\n## 25      4 -209.79 428.36 33.27   0.00\n## 235     5 -208.62 428.44 33.35   0.00\n## 35      4 -210.26 429.30 34.21   0.00\n## 5       3 -211.66 429.78 34.69   0.00\n## \n## Term codes: \n##     ALT    AREA    DIST   GRAZE   LDIST YR.ISOL \n##       1       2       3       4       5       6 \n## \n## Model-averaged coefficients:  \n## (full average) \n##               Estimate Std. Error Adjusted SE z value Pr(&gt;|z|)    \n## (Intercept) -7.5601112 84.0460963  85.2129010   0.089    0.929    \n## GRAZE       -4.4923671  0.9653718   0.9836120   4.567  4.9e-06 ***\n## ALT          0.0168833  0.0269646   0.0272737   0.619    0.536    \n## YR.ISOL      0.0192028  0.0420833   0.0426707   0.450    0.653    \n## LDIST        0.0003700  0.0009029   0.0009158   0.404    0.686    \n## DIST         0.0010880  0.0033129   0.0033689   0.323    0.747    \n## AREA         0.0004120  0.0023720   0.0024205   0.170    0.865    \n##  \n## (conditional average) \n##              Estimate Std. Error Adjusted SE z value Pr(&gt;|z|)    \n## (Intercept) -7.560111  84.046096   85.212901   0.089    0.929    \n## GRAZE       -4.497801   0.953221    0.971711   4.629  3.7e-06 ***\n## ALT          0.038392   0.028768    0.029424   1.305    0.192    \n## YR.ISOL      0.056407   0.055710    0.057008   0.989    0.322    \n## LDIST        0.001152   0.001280    0.001308   0.881    0.378    \n## DIST         0.003833   0.005305    0.005428   0.706    0.480    \n## AREA         0.001673   0.004554    0.004656   0.359    0.719    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "stat1-4/Statistik3_Uebung.html",
    "href": "stat1-4/Statistik3_Uebung.html",
    "title": "Stat3: Übung",
    "section": "",
    "text": "Datensatz Ukraine_bearbeitet.csv\n\n\nÜbung 3: Multiple Regression\n\nBereiten Sie den Datensatz Ukraine_bearbeitet.csv für das Einlesen in R vor und lesen Sie ihn dann ein. Dieser enthält Pflanzenartenzahlen (Species.richness) von 199 10 m² grossen Plots (Vegetationsaufnahmen) von Steppenrasen in der Ukraine sowie zahlreiche Umweltvariablen, deren Bedeutung und Einheiten im Kopf der ExcelTabelle angegeben sind.\nErmitteln Sie ein minimal adäquates Modell, das den Artenreichtum in den Plots durch die Umweltvariablen erklärt.\nBitte erklären und begründen Sie die einzelnen Schritte, die Sie unternehmen, um zu diesem Ergebnis zu kommen. Dazu erstellen Sie bitte ein Word-Dokument, in das Sie Schritt für Schritt den verwendeten R-Code, die dazu gehörigen Ausgaben von R, Ihre Interpretation derselben und die sich ergebenden Schlussfolgerungen für das weitere Vorgehen dokumentieren.\nDieser Ablauf sollte insbesondere beinhalten:\n\nÜberprüfen der Datenstruktur nach dem Einlesen: welches sind die abhängige(n) und welches die unabängige(n) Variablen, sind alle Variablen für die Analyse geeignet?\nExplorative Datenanalyse, um zu sehen, ob die abhängige Variable in der vorliegenden Form für die Analyse geeignet ist\nDefinition eines globalen Modelles und dessen Reduktion zu einem minimal adäquaten Modell\nDurchführen der Modelldiagnostik für dieses\nGenerieren aller Zahlen, Statistiken und Tabellen, die für eine wiss. Ergebnisdarstellung benötigt werden\nFormulieren Sie abschliessend einen Methoden- und Ergebnisteil (ggf. incl. adäquaten Abbildungen) zu dieser Untersuchung in der Form einer wissenschaftlichen Arbeit (ausformulierte schriftliche Zusammenfassung, mit je einem Absatz von ca. 60-100 Worten, resp. 3-8 Sätzen für den Methoden- und Ergebnisteil). D. h. alle wichtigen Informationen sollten enthalten sein, unnötige Redundanz dagegen vermieden werden.\nAbzugeben sind am Ende (a) Ein lauffähiges R-Skript; (b) begründeter Lösungsweg (Kombination aus R-Code, R Output und dessen Interpretation) und (c) ausformulierter Methoden- und Ergebnisteil (für eine wiss. Arbeit)."
  },
  {
    "objectID": "stat1-4/Statistik4_Demo.html#von-lms-zu-glms",
    "href": "stat1-4/Statistik4_Demo.html#von-lms-zu-glms",
    "title": "Stat4: Demo",
    "section": "von LMs zu GLMs",
    "text": "von LMs zu GLMs\n\n# Daten erstellen und anschauen\ntemp &lt;- c(10, 12, 16, 20, 24, 25, 30, 33, 37)\nbesucher &lt;- c(40, 12, 50, 500, 400, 900, 1500, 900, 2000)\nstrand &lt;- data.frame(\"Temperatur\" = temp, \"Besucher\" = besucher)\n\nplot(besucher ~ temp, data = strand)\n\n\n\n\n\n# Modell definieren und anschauen\nlm.strand &lt;- lm(Besucher ~ Temperatur, data = strand)\nsummary(lm.strand)\n## \n## Call:\n## lm(formula = Besucher ~ Temperatur, data = strand)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -476.41 -176.89   55.59  218.82  353.11 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  -855.01     290.54  -2.943 0.021625 *  \n## Temperatur     67.62      11.80   5.732 0.000712 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 311.7 on 7 degrees of freedom\n## Multiple R-squared:  0.8244, Adjusted R-squared:  0.7993 \n## F-statistic: 32.86 on 1 and 7 DF,  p-value: 0.0007115\n\npar(mfrow = c(2, 2))\nplot(lm.strand)\n\n\n\n\n\npar(mfrow = c(1, 1))\nxv &lt;- seq(0, 40, by = .1)\nyv &lt;- predict(lm.strand, list(Temperatur = xv))\nplot(strand$Temperatur, strand$Besucher, xlim = c(0, 40))\nlines(xv, yv, lwd = 3, col = \"blue\")\n\n\n\n\n\n# GLMs definieren und anschauen\nglm.gaussian &lt;- glm(Besucher ~ Temperatur, family = gaussian, data = strand)\nglm.poisson &lt;- glm(Besucher ~ Temperatur, family = poisson, data = strand)\n\nsummary(glm.gaussian)\n## \n## Call:\n## glm(formula = Besucher ~ Temperatur, family = gaussian, data = strand)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -476.41  -176.89    55.59   218.82   353.11  \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  -855.01     290.54  -2.943 0.021625 *  \n## Temperatur     67.62      11.80   5.732 0.000712 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for gaussian family taken to be 97138.03)\n## \n##     Null deviance: 3871444  on 8  degrees of freedom\n## Residual deviance:  679966  on 7  degrees of freedom\n## AIC: 132.63\n## \n## Number of Fisher Scoring iterations: 2\nsummary(glm.poisson)\n## \n## Call:\n## glm(formula = Besucher ~ Temperatur, family = poisson, data = strand)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -13.577  -12.787   -4.491    9.515   15.488  \n## \n## Coefficients:\n##             Estimate Std. Error z value Pr(&gt;|z|)    \n## (Intercept) 3.500301   0.056920   61.49   &lt;2e-16 ***\n## Temperatur  0.112817   0.001821   61.97   &lt;2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for poisson family taken to be 1)\n## \n##     Null deviance: 6011.8  on 8  degrees of freedom\n## Residual deviance: 1113.7  on 7  degrees of freedom\n## AIC: 1185.1\n## \n## Number of Fisher Scoring iterations: 5\n\nRücktranformation der Werte auf die orginale Skale (Hier Exponentialfunktion da family=possion als Link-Funktion den natürlichen Logarithmus (log) verwendet) Besucher = exp(3.50 + 0.11 Temperatur/°C)\n\nexp(3.500301) # Anzahl besucher bei 0°C\n## [1] 33.12542\nexp(glm.poisson$coefficients[1]) # Werte aus Modell\n## (Intercept) \n##    33.12542\nexp(3.500301 + 30 * 0.112817) # Anzahl besucher bei 30°C\n## [1] 977.3169\nexp(glm.poisson$coeff[1] * glm.poisson$coeff[2]) # coefficients kann mit coeff abgekürzt werden\n## (Intercept) \n##    1.484225\n\n# Test Overdispersion\nlibrary(\"AER\")\n## Error in library(\"AER\"): there is no package called 'AER'\ndispersiontest(glm.poisson)\n## Error in dispersiontest(glm.poisson): could not find function \"dispersiontest\"\n\nglm.quasi &lt;- glm(Besucher ~ Temperatur, family = quasipoisson, data = strand)\nsummary(glm.quasi)\n## \n## Call:\n## glm(formula = Besucher ~ Temperatur, family = quasipoisson, data = strand)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -13.577  -12.787   -4.491    9.515   15.488  \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)   \n## (Intercept)  3.50030    0.69639   5.026  0.00152 **\n## Temperatur   0.11282    0.02227   5.065  0.00146 **\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for quasipoisson family taken to be 149.6826)\n## \n##     Null deviance: 6011.8  on 8  degrees of freedom\n## Residual deviance: 1113.7  on 7  degrees of freedom\n## AIC: NA\n## \n## Number of Fisher Scoring iterations: 5\n\n\npar(mfrow = c(2, 2))\nplot(glm.gaussian, main = \"glm.gaussian\")\n\n\n\n\n\npar(mfrow = c(2, 2))\nplot(glm.poisson, main = \"glm.poisson\")\n\n\n\n\n\npar(mfrow = c(2, 2))\nplot(glm.quasi, main = \"glm.quasi\")\n\n\n\n\n\npar(mfrow = c(1, 1))\nplot(strand$Temperatur, strand$Besucher, xlim = c(0, 40))\nxv &lt;- seq(0, 40, by = .1)\n\nyv &lt;- predict(lm.strand, list(Temperatur = xv))\nlines(xv, yv, lwd = 3, col = \"blue\")\n\nyv2 &lt;- predict(glm.poisson, list(Temperatur = xv))\nlines(xv, exp(yv2), lwd = 3, col = \"red\")\n\nyv3 &lt;- predict(glm.quasi, list(Temperatur = xv))\nlines(xv, exp(yv3), lwd = 3, col = \"green\")"
  },
  {
    "objectID": "stat1-4/Statistik4_Demo.html#logistische-regression",
    "href": "stat1-4/Statistik4_Demo.html#logistische-regression",
    "title": "Stat4: Demo",
    "section": "Logistische Regression",
    "text": "Logistische Regression\n\nbathing &lt;- data.frame(\n  \"temperature\" = c(1, 2, 5, 9, 14, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29),\n  \"bathing\" = c(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1)\n)\nplot(bathing ~ temperature, data = bathing)\n\n\n\n\nglm.1 &lt;- glm(bathing ~ temperature, family = \"binomial\", data = bathing)\nsummary(glm.1)\n## \n## Call:\n## glm(formula = bathing ~ temperature, family = \"binomial\", data = bathing)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -1.7408  -0.4723  -0.1057   0.5123   1.8615  \n## \n## Coefficients:\n##             Estimate Std. Error z value Pr(&gt;|z|)  \n## (Intercept)  -5.4652     2.8501  -1.918   0.0552 .\n## temperature   0.2805     0.1350   2.077   0.0378 *\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 20.728  on 14  degrees of freedom\n## Residual deviance: 10.829  on 13  degrees of freedom\n## AIC: 14.829\n## \n## Number of Fisher Scoring iterations: 6\n\n# Modeldiagnostik (wenn nicht signifikant, dann OK)\n1 - pchisq(glm.1$deviance, glm.1$df.resid)\n## [1] 0.6251679\n\n# Modellgüte (pseudo-R²)\n1 - (glm.1$dev / glm.1$null)\n## [1] 0.4775749\n\n# Steilheit der Beziehung (relative Änderung der odds bei x + 1 vs. x)\nexp(glm.1$coefficients[2])\n## temperature \n##    1.323807\n\n# LD50 (also hier: Temperatur, bei der 50% der Touristen baden)\n-glm.1$coefficients[1] / glm.1$coefficients[2]\n## (Intercept) \n##    19.48311\n\n# Vorhersagen\npredicted &lt;- predict(glm.1, type = \"response\")\n\n# Konfusionsmatrix\nkm &lt;- table(bathing$bathing, predicted &gt; 0.5)\nkm\n##    \n##     FALSE TRUE\n##   0     7    1\n##   1     1    6\n\n# Missklassifizierungsrate\n1 - sum(diag(km) / sum(km))\n## [1] 0.1333333\n\n# Plotting\nxs &lt;- seq(0, 30, l = 1000)\nmodel.predict &lt;- predict(glm.1,\n  type = \"response\", se = T,\n  newdata = data.frame(temperature = xs)\n)\n\nplot(bathing ~ temperature,\n  xlab = \"Temperature (°C)\",\n  ylab = \"% Bathing\", pch = 16, col = \"red\", data = bathing\n)\npoints(model.predict$fit ~ xs, type = \"l\")\nlines(model.predict$fit + model.predict$se.fit ~ xs, type = \"l\", lty = 2)\nlines(model.predict$fit - model.predict$se.fit ~ xs, type = \"l\", lty = 2)"
  },
  {
    "objectID": "stat1-4/Statistik4_Demo.html#nicht-lineare-regression",
    "href": "stat1-4/Statistik4_Demo.html#nicht-lineare-regression",
    "title": "Stat4: Demo",
    "section": "Nicht-lineare Regression",
    "text": "Nicht-lineare Regression\n\nlibrary(\"AICcmodavg\")\nlibrary(\"nlstools\")\n## Error in library(\"nlstools\"): there is no package called 'nlstools'\n\nloyn &lt;- read.delim(\"datasets/stat1-4/loyn.csv\", sep = \",\") # Verzeichnis muss dort gesetzt sein wo Daten sind\n\n# Selbstdefinierte Funktion, hier Potenzfunktion\npower.model &lt;- nls(ABUND ~ c * AREA^z, start = (list(c = 1, z = 0)), data = loyn)\nsummary(power.model)\n## \n## Formula: ABUND ~ c * AREA^z\n## \n## Parameters:\n##   Estimate Std. Error t value Pr(&gt;|t|)    \n## c 13.39418    1.30721  10.246 2.87e-14 ***\n## z  0.16010    0.02438   6.566 2.09e-08 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.995 on 54 degrees of freedom\n## \n## Number of iterations to convergence: 12 \n## Achieved convergence tolerance: 7.124e-06\nAICc(power.model)\n## [1] 396.1723\n\n# Modeldiagnostik (in nlstools)\nplot(nlsResiduals(power.model))\n## Error in nlsResiduals(power.model): could not find function \"nlsResiduals\"\n\n# Vordefinierte \"Selbststartfunktionen\"#\n?selfStart\nlogistic.model &lt;- nls(ABUND ~ SSlogis(AREA, Asym, xmid, scal), data = loyn)\nsummary(logistic.model)\n## \n## Formula: ABUND ~ SSlogis(AREA, Asym, xmid, scal)\n## \n## Parameters:\n##      Estimate Std. Error t value Pr(&gt;|t|)    \n## Asym   31.306      2.207  14.182  &lt; 2e-16 ***\n## xmid    6.501      2.278   2.854  0.00614 ** \n## scal    9.880      3.152   3.135  0.00280 ** \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.274 on 53 degrees of freedom\n## \n## Number of iterations to convergence: 8 \n## Achieved convergence tolerance: 4.371e-06\nAICc(logistic.model)\n## [1] 386.8643\n\n# Modeldiagnostik (in nlstools)\nplot(nlsResiduals(logistic.model))\n## Error in nlsResiduals(logistic.model): could not find function \"nlsResiduals\"\n\n# Visualisierung\nplot(ABUND ~ AREA, data = loyn)\npar(mfrow = c(1, 1))\nxv &lt;- seq(0, 2000, 0.01)\n\n# 1. Potenzfunktion\nyv1 &lt;- predict(power.model, list(AREA = xv))\nlines(xv, yv1, col = \"green\")\n\n# 2. Logistische Funktion\nyv2 &lt;- predict(logistic.model, list(AREA = xv))\nlines(xv, yv2, col = \"blue\")\n\n\n\n\n# Visualisierung II\nplot(ABUND ~ log10(AREA), data = loyn)\npar(mfrow = c(1, 1))\n\n# 1. Potenzfunktion\nyv1 &lt;- predict(power.model, list(AREA = xv))\nlines(log10(xv), yv1, col = \"green\")\n\n# 2. Logistische Funktion\nyv2 &lt;- predict(logistic.model, list(AREA = xv))\nlines(log10(xv), yv2, col = \"blue\")\n\n\n\n\n# Model seletkion zwischen den nicht-lineraen Modelen\ncand.models &lt;- list()\ncand.models[[1]] &lt;- power.model\ncand.models[[2]] &lt;- logistic.model\n\nModnames &lt;- c(\"Power\", \"Logistic\")\n\naictab(cand.set = cand.models, modnames = Modnames)\n## \n## Model selection based on AICc:\n## \n##          K   AICc Delta_AICc AICcWt Cum.Wt      LL\n## Logistic 4 386.86       0.00   0.99   0.99 -189.04\n## Power    3 396.17       9.31   0.01   1.00 -194.86"
  },
  {
    "objectID": "stat1-4/Statistik4_Demo.html#smoother",
    "href": "stat1-4/Statistik4_Demo.html#smoother",
    "title": "Stat4: Demo",
    "section": "Smoother",
    "text": "Smoother\n\nloyn$log_AREA &lt;- log10(loyn$AREA)\nplot(ABUND ~ log_AREA, data = loyn)\nlines(lowess(loyn$log_AREA, loyn$ABUND, f = 0.25), lwd = 2, col = \"red\")\nlines(lowess(loyn$log_AREA, loyn$ABUND, f = 0.5), lwd = 2, col = \"blue\")\nlines(lowess(loyn$log_AREA, loyn$ABUND, f = 1), lwd = 2, col = \"green\")"
  },
  {
    "objectID": "stat1-4/Statistik4_Demo.html#gams",
    "href": "stat1-4/Statistik4_Demo.html#gams",
    "title": "Stat4: Demo",
    "section": "GAMs",
    "text": "GAMs\n\nlibrary(\"mgcv\")\n\ngam.1 &lt;- gam(ABUND ~ s(log_AREA), data = loyn)\ngam.1\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## ABUND ~ s(log_AREA)\n## \n## Estimated degrees of freedom:\n## 2.88  total = 3.88 \n## \n## GCV score: 52.145\nsummary(gam.1)\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## ABUND ~ s(log_AREA)\n## \n## Parametric coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  19.5143     0.9309   20.96   &lt;2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Approximate significance of smooth terms:\n##               edf Ref.df     F p-value    \n## s(log_AREA) 2.884  3.628 21.14  &lt;2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## R-sq.(adj) =  0.579   Deviance explained = 60.1%\n## GCV = 52.145  Scale est. = 48.529    n = 56\n\nplot(loyn$log_AREA, loyn$ABUND, pch = 16)\nxv &lt;- seq(-1, 4, by = 0.1)\nyv &lt;- predict(gam.1, list(log_AREA = xv))\nlines(xv, yv, lwd = 2, col = \"red\")\n\n\n\n\nAICc(gam.1)\n## [1] 383.2109\nsummary(gam.1)\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## ABUND ~ s(log_AREA)\n## \n## Parametric coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  19.5143     0.9309   20.96   &lt;2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Approximate significance of smooth terms:\n##               edf Ref.df     F p-value    \n## s(log_AREA) 2.884  3.628 21.14  &lt;2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## R-sq.(adj) =  0.579   Deviance explained = 60.1%\n## GCV = 52.145  Scale est. = 48.529    n = 56"
  },
  {
    "objectID": "stat1-4/Statistik4_Uebung.html#aufgabe-4.1-nicht-lineare-regression",
    "href": "stat1-4/Statistik4_Uebung.html#aufgabe-4.1-nicht-lineare-regression",
    "title": "Stat4: Übung",
    "section": "Aufgabe 4.1: Nicht-lineare Regression",
    "text": "Aufgabe 4.1: Nicht-lineare Regression\nDatensatz Curonian_Spit.csv\nDieser enthält gemittelte Pflanzenartenzahlen (Species.richness) von geschachtelten Plots (Vegetationsaufnahmen) der Pflanzengesellschaft LolioCynosuretum im Nationalpark Kurische Nehrung (Russland) auf Flächengrössen (Area) von 0.0001 bis 900 m².\nErmittelt den funktionellen Zusammenhang (das beste Modell), der die Zunahme der Artenzahl mit der Flächengrösse am besten beschreibt.Berücksichtigt dabei mindestens die Potenzfunktion (power function, die logarithmische Funktion (logarithmic function,und eine Funktion mit Sättigung (saturation, asymptote) eurer Wahl."
  },
  {
    "objectID": "stat1-4/Statistik4_Uebung.html#aufgabe-4.2n-logistische-regression-natwis",
    "href": "stat1-4/Statistik4_Uebung.html#aufgabe-4.2n-logistische-regression-natwis",
    "title": "Stat4: Übung",
    "section": "Aufgabe 4.2N: Logistische Regression (NatWis)",
    "text": "Aufgabe 4.2N: Logistische Regression (NatWis)\nDatensatz polis.csv\nDer Datensatz polis.csv beschreibt für 19 Inseln im Golf von Kalifornien, ob Eidechsen der Gattung Uta vorkommen (presence/absence: PA) in Abhängigkeit von der Form der Inseln (Verhältnis Umfang zu Fläche: RATIO).\nBitte prüft mit einer logistischen Regression, ob und ggf. wie die Inselform die Präsenz der Eidechsen beinflusst"
  },
  {
    "objectID": "stat1-4/Statistik4_Uebung.html#aufgabe-4.2s-multiple-logistische-regression-sozwis",
    "href": "stat1-4/Statistik4_Uebung.html#aufgabe-4.2s-multiple-logistische-regression-sozwis",
    "title": "Stat4: Übung",
    "section": "Aufgabe 4.2S: Multiple logistische Regression (SozWis)",
    "text": "Aufgabe 4.2S: Multiple logistische Regression (SozWis)\nDatensatz Datensatz_novanimal_Uebung_Statistik4.2.csv\nFührt mit dem Datensatz der Gästebefragung eine logistische Regression durch. Kann der Mensabesuch durch die sozioökonomischen Variablen (Alter, Geschlecht, Hochschulzugehörigkeit), wahrgenommener Fleischkonsum und Umwelteinstellung vorhergesagt werden?"
  },
  {
    "objectID": "Stat5-8.html",
    "href": "Stat5-8.html",
    "title": "Statistik 5 - 8",
    "section": "",
    "text": "Statistik 5\nIn Statistik 5 lernen die Studierenden Lösungen kennen, welche die diversen Limitierungen von linearen Modellen überwinden. Während generalized linear models (GLMs) aus Statistik 4 bekannt sind, geht es jetzt um linear mixed effect models (LMMs und generalized linear mixed effect models (GLMMs). Dabei bezeichnet generalized die explizite Modellierung anderer Fehler- und Varianzstrukturen und mixed die Berücksichtigung von Abhängigkeiten bzw. Schachtelungen unter den Beobachtungen. Einfachere Fälle von LMMs, wie split-plot und repeated-measures ANOVAs, lassen sich noch mit dem aov-Befehl in Base R bewältigen, für komplexere Versuchsdesigns/Analysen gibt es spezielle R packages. Abschliessend gibt es eine kurze Einführung in GLMMs, die eine Analyse komplexerer Beobachtungsdaten z. B. mit räumlichen Abhängigkeiten, erlauben.\n\n\nStatistik 6\nStatistik 6 führt in multivariat-deskriptive Methoden ein, die dazu dienen Datensätze mit multiplen abhängigen und multiplen unabhängigen Variablen effektiv zu analysieren. Dabei betonen Ordinationen kontinuierliche Gradienten und fokussieren auf zusammengehörende Variablen, während Cluster-Analysen Diskontinuitäten betonen und auf zusammengehörende Beobachtungen fokussieren. Es folgt eine konzeptionelle Einführung in die Idee von Ordinationen als einer Technik der deskriptiven Statistik, die Strukturen in multivariaten Datensätzen via Dimensionsreduktion visualisiert. Das Prinzip und die praktische Implementierung wird detailliert am Beispiel der Hauptkomponentenanalyse (PCA) erklärt. Danach folgen kurze Einführungen in weitere Ordinationstechniken für besondere Fälle, welche bestimmte Limitierungen der PCA überwinden, namentlich CA, DCA und NMDS.\n\n\nStatistik 7\nIn Statistik 7 beschäftigen wir uns zunächst damit, wie wir Ordinationsdiagramme informativer gestalten können, etwa durch die Beschriftung der Beobachtunge, post-hoc-Projektion der Prädiktorvariablen oder Response surfaces. Während wir bislang mit «unconstrained» Ordinationen gearbeitet haben, welche die Gesamtvariabilität in den Beobachtungen visualisieren, beschränken die jeweiligen «constrained»-Varianten derselben Ordinationsmethoden die Betrachtung auf den Teil der Variabilität, welcher durch eine Linearkombination der berücksichtigen Prädiktoren erklärt werden kann. Wir beschäftigen uns im Detail mit der Redundanz-Analyse (RDA), der «constrained»-Variante der PCA und gehen einen kompletten analytischen Ablauf mit Aufbereitung, Interpretation und Visualisierung der Ergebnisse am Beispiel eines gemeinschaftsökologischen Datensatzes (Fischgesellschaften und Umweltfaktoren im Jura-Fluss Doubs) durch\n\n\nStatistik 8\nIn Statistik 8 lernen die Studierenden Clusteranalysen/Klassifikationen als eine den Ordinationen komplementäre Technik der deskriptiven Statistik multivariater Datensätze kennen. Es gibt Partitionierungen (ohne Hierarchie), divisive und agglomerative Clusteranalysen (die jeweils eine Hierarchie produzieren). Etwas genauer gehen wir auf die k-means Clusteranalyse (eine Partitionierung) und eine Reihe von agglomerativen Clusterverfahren ein. Hierbei hat das gewählte Distanzmass und der Modus für die sukzessive Fusion von Clustern einen grossen Einfluss auf das Endergebnis. Wir besprechen ferner, wie man die Ergebnisse von Clusteranalysen adäquat visualisieren und mit anderen statistischen Prozeduren kombinieren kann. Im Abschluss von Statistik 8 werden wir dann die an den acht Statistiktagen behandelten Verfahren noch einmal rückblickend betrachten und thematisieren, welches Verfahren wann gewählt werden sollte. Ebenfalls ist Platz, um den adäquaten Ablauf statistischer Analysen vom Einlesen der Daten bis zur Verschriftlichung der Ergebnisse, einschliesslich der verschiedenen zu treffenden Entscheidungen, zu thematisieren.\n\n\n\n\n\n\n\n\n\n\n\nTitel\n\n\nDatum\n\n\nLesson\n\n\nThema\n\n\n\n\n\n\nVorbereitung\n\n\n2023-11-13\n\n\nStat5\n\n\nVorbereitung\n\n\n\n\nStat5: Demo\n\n\n2023-11-13\n\n\nStat5\n\n\nVon linearen Modellen zu GLMMs\n\n\n\n\nStat5: Übung\n\n\n2023-11-13\n\n\nStat5\n\n\nVon linearen Modellen zu GLMMs\n\n\n\n\nStat6: Demo\n\n\n2023-11-14\n\n\nStat6\n\n\nEinführung in “multivariate” Methoden\n\n\n\n\nStat6: Übung\n\n\n2023-11-14\n\n\nStat6\n\n\nEinführung in “multivariate” Methoden\n\n\n\n\nStat7: Demo\n\n\n2023-11-20\n\n\nStat7\n\n\nOrdinationen II\n\n\n\n\nStat7: Übung\n\n\n2023-11-20\n\n\nStat7\n\n\nOrdinationen II\n\n\n\n\nStat8: Demo\n\n\n2023-11-21\n\n\nStat8\n\n\nClusteranalysen\n\n\n\n\nStat8: Übung\n\n\n2023-11-21\n\n\nStat8\n\n\nClusteranalysen\n\n\n\n\n\n\nKeine Treffer"
  },
  {
    "objectID": "stat5-8/Statistik5_Vorbereitung.html",
    "href": "stat5-8/Statistik5_Vorbereitung.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "Im Rahmen von Statistik 5 - 8 werden wir einige R Packages brauchen. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Analog der Vorbereitungsübung in Prepro1 könnt ihr mit nachstehendem Code alle noch nicht installierten packages automatisch installieren.\n\nipak &lt;- function(pkg) {\n  new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) {\n    install.packages(new.pkg, dependencies = TRUE)\n  }\n}\n\npackages &lt;- c(\n  \"nlme\", \"MASS\", \"lme4\", \"glmmML\",  \"dplyr\", \"readr\", \"ggplot2\", \"MuMIn\", \"labdsv\",\n  \"vegan\", \"AER\", \"sveg\", \"ssit\", \"gclus\", \"cclust\", \"cluster\", \"multcomp\", \"readr\"\n)\n\nipak(packages)\n\nZudem könnt ihr die Daten für die Übungen auf Moodle herunterladen."
  },
  {
    "objectID": "stat5-8/Statistik5_Demo.html#split-plot-anova",
    "href": "stat5-8/Statistik5_Demo.html#split-plot-anova",
    "title": "Stat5: Demo",
    "section": "Split-plot ANOVA",
    "text": "Split-plot ANOVA\nReaktionszeitenbeispiel aus Kapitel 14 von Logan (2010)\n\n# Daten laden\nspf &lt;- read.delim(\"datasets/stat5-8/spf.csv\", sep = \";\")\n# Daten anschauen\nhead(spf)\n##      Signal  VP Messung Reaktion\n## 1 akustisch VP1      H1        3\n## 2 akustisch VP1      H2        4\n## 3 akustisch VP1      H3        7\n## 4 akustisch VP1      H4        7\n## 5 akustisch VP2      H1        6\n## 6 akustisch VP2      H2        5\n\n# LM mit random intercept = einfaches LMM\nspf.aov &lt;- aov(Reaktion ~ Signal * Messung + Error(VP), data = spf)\nsummary(spf.aov)\n## \n## Error: VP\n##           Df Sum Sq Mean Sq F value Pr(&gt;F)\n## Signal     1  3.125   3.125       2  0.207\n## Residuals  6  9.375   1.562               \n## \n## Error: Within\n##                Df Sum Sq Mean Sq F value   Pr(&gt;F)    \n## Messung         3 194.50   64.83  127.89 2.52e-12 ***\n## Signal:Messung  3  19.37    6.46   12.74 0.000105 ***\n## Residuals      18   9.13    0.51                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# Interaktion anschauen\ninteraction.plot(spf$Messung, spf$Signal, spf$Reaktion)\n\n# Nun als LMM\nlibrary(\"nlme\")\n\n\n\n# Mit random intercept (VP) und random slope (Messung)\nspf.lme.1 &lt;- lme(Reaktion ~ Signal * Messung, random = ~ Messung | VP, data = spf)\n# Nur random intercept\nspf.lme.2 &lt;- lme(Reaktion ~ Signal * Messung, random = ~ 1 | VP, data = spf)\n# Modelle anschauen\nanova(spf.lme.1)\n##                numDF denDF   F-value p-value\n## (Intercept)        1    18 1488.1631  &lt;.0001\n## Signal             1     6    2.0808  0.1993\n## Messung            3    18   70.7887  &lt;.0001\n## Signal:Messung     3    18   11.8592  0.0002\nanova(spf.lme.2)\n##                numDF denDF  F-value p-value\n## (Intercept)        1    18 591.6800  &lt;.0001\n## Signal             1     6   2.0000  0.2070\n## Messung            3    18 127.8904  &lt;.0001\n## Signal:Messung     3    18  12.7397  0.0001\n\nsummary(spf.lme.1)\n## Linear mixed-effects model fit by REML\n##   Data: spf \n##        AIC      BIC    logLik\n##   97.63924 120.0223 -29.81962\n## \n## Random effects:\n##  Formula: ~Messung | VP\n##  Structure: General positive-definite, Log-Cholesky parametrization\n##             StdDev    Corr                \n## (Intercept) 1.0801385 (Intr) MssnH2 MssnH3\n## MessungH2   0.6455527 -0.717              \n## MessungH3   0.6455528 -0.837  0.600       \n## MessungH4   1.3229024 -0.816  0.390  0.878\n## Residual    0.2886126                     \n## \n## Fixed effects:  Reaktion ~ Signal * Messung \n##                         Value Std.Error DF   t-value p-value\n## (Intercept)              3.75 0.5590162 18  6.708213  0.0000\n## Signalvisuell           -2.00 0.7905683  6 -2.529826  0.0447\n## MessungH2                0.25 0.3818811 18  0.654654  0.5210\n## MessungH3                3.25 0.3818811 18  8.510501  0.0000\n## MessungH4                4.25 0.6922184 18  6.139681  0.0000\n## Signalvisuell:MessungH2  1.00 0.5400614 18  1.851641  0.0806\n## Signalvisuell:MessungH3  0.50 0.5400615 18  0.925821  0.3668\n## Signalvisuell:MessungH4  4.00 0.9789446 18  4.086033  0.0007\n##  Correlation: \n##                         (Intr) Sgnlvs MssnH2 MssnH3 MssnH4 Sg:MH2 Sg:MH3\n## Signalvisuell           -0.707                                          \n## MessungH2               -0.683  0.483                                   \n## MessungH3               -0.781  0.552  0.571                            \n## MessungH4               -0.808  0.571  0.394  0.788                     \n## Signalvisuell:MessungH2  0.483 -0.683 -0.707 -0.404 -0.279              \n## Signalvisuell:MessungH3  0.552 -0.781 -0.404 -0.707 -0.557  0.571       \n## Signalvisuell:MessungH4  0.571 -0.808 -0.279 -0.557 -0.707  0.394  0.788\n## \n## Standardized Within-Group Residuals:\n##         Min          Q1         Med          Q3         Max \n## -0.86583578 -0.26649517 -0.03263197  0.23603775  0.95285749 \n## \n## Number of Observations: 32\n## Number of Groups: 8\nsummary(spf.lme.2)\n## Linear mixed-effects model fit by REML\n##   Data: spf \n##        AIC      BIC    logLik\n##   89.64876 101.4293 -34.82438\n## \n## Random effects:\n##  Formula: ~1 | VP\n##         (Intercept)  Residual\n## StdDev:   0.5137012 0.7120003\n## \n## Fixed effects:  Reaktion ~ Signal * Messung \n##                         Value Std.Error DF   t-value p-value\n## (Intercept)              3.75 0.4389856 18  8.542422  0.0000\n## Signalvisuell           -2.00 0.6208194  6 -3.221549  0.0181\n## MessungH2                0.25 0.5034602 18  0.496564  0.6255\n## MessungH3                3.25 0.5034602 18  6.455326  0.0000\n## MessungH4                4.25 0.5034602 18  8.441580  0.0000\n## Signalvisuell:MessungH2  1.00 0.7120003 18  1.404494  0.1772\n## Signalvisuell:MessungH3  0.50 0.7120003 18  0.702247  0.4915\n## Signalvisuell:MessungH4  4.00 0.7120003 18  5.617975  0.0000\n##  Correlation: \n##                         (Intr) Sgnlvs MssnH2 MssnH3 MssnH4 Sg:MH2 Sg:MH3\n## Signalvisuell           -0.707                                          \n## MessungH2               -0.573  0.405                                   \n## MessungH3               -0.573  0.405  0.500                            \n## MessungH4               -0.573  0.405  0.500  0.500                     \n## Signalvisuell:MessungH2  0.405 -0.573 -0.707 -0.354 -0.354              \n## Signalvisuell:MessungH3  0.405 -0.573 -0.354 -0.707 -0.354  0.500       \n## Signalvisuell:MessungH4  0.405 -0.573 -0.354 -0.354 -0.707  0.500  0.500\n## \n## Standardized Within-Group Residuals:\n##         Min          Q1         Med          Q3         Max \n## -1.34519292 -0.63943480 -0.06164167  0.41510594  2.15199656 \n## \n## Number of Observations: 32\n## Number of Groups: 8"
  },
  {
    "objectID": "stat5-8/Statistik5_Demo.html#glmm",
    "href": "stat5-8/Statistik5_Demo.html#glmm",
    "title": "Stat5: Demo",
    "section": "GLMM",
    "text": "GLMM\n-&gt; Hirschparasitenbeispiel aus Kapitel 13 von Zuur et al. (2009)\n\n# Daten laden und für GLMM aufbereiten\nDeerEcervi &lt;- read.delim(\"datasets/stat5-8/DeerEcervi.txt\", sep = \"\", stringsAsFactors = TRUE)\n# Daten anschauen\nhead(DeerEcervi)\n##   Farm Sex Length Ecervi\n## 1   AL   2    164   0.00\n## 2   AL   1    216   0.00\n## 3   AL   1    208   0.00\n## 4   AL   1    206  14.37\n## 5   AL   1    204   0.00\n## 6   AL   1    200   0.00\nsummary(DeerEcervi)\n##       Farm          Sex            Length          Ecervi       \n##  MO     :209   Min.   :1.000   Min.   : 75.0   Min.   :   0.00  \n##  CB     : 85   1st Qu.:1.000   1st Qu.:151.0   1st Qu.:   0.00  \n##  QM     : 60   Median :1.000   Median :163.0   Median :   6.60  \n##  BA     : 50   Mean   :1.458   Mean   :161.8   Mean   :  45.42  \n##  PN     : 37   3rd Qu.:2.000   3rd Qu.:174.9   3rd Qu.:  35.79  \n##  MB     : 34   Max.   :2.000   Max.   :216.0   Max.   :2186.60  \n##  (Other):351\n# Anzahl Larven hier in Presence/Absence übersetzt\nDeerEcervi$Ecervi.01 &lt;- DeerEcervi$Ecervi\nDeerEcervi$Ecervi.01[DeerEcervi$Ecervi &gt; 0] &lt;- 1\n# Numerische Geschlechtscodierung als Factor\nDeerEcervi$fSex &lt;- as.factor(DeerEcervi$Sex)\n# Hischlänge standardisieren\nDeerEcervi$CLength &lt;- DeerEcervi$Length - mean(DeerEcervi$Length)\n\n-&gt; Nun sind die Daten bereit:\n\nDie Parasitenbefalldaten wurden in Parasiten Präsenz/Absenz (1/0) übersetzt.\nDie Hirschlänge wurde standardisiert, damit der Achsenabschnitt (intercept) des Modells interpretierbar ist, standardisierte entspricht nun der Achsenabschnitt einem durschnittlich langen Hirsch.\n\n\n# Zunächst als GLM\n# Interaktionen mit fFarm nicht berücksichtigt, da zu viele Freiheitsgrade verbraucht würden\nDE.glm &lt;- glm(Ecervi.01 ~ CLength * fSex + Farm, family = binomial, data = DeerEcervi)\n\ndrop1(DE.glm, test = \"Chi\")\n## Single term deletions\n## \n## Model:\n## Ecervi.01 ~ CLength * fSex + Farm\n##              Df Deviance     AIC     LRT  Pr(&gt;Chi)    \n## &lt;none&gt;            745.50  799.50                      \n## Farm         23  1003.72 1011.72 258.225 &lt; 2.2e-16 ***\n## CLength:fSex  1   755.48  807.48   9.984  0.001579 ** \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsummary(DE.glm)\n## \n## Call:\n## glm(formula = Ecervi.01 ~ CLength * fSex + Farm, family = binomial, \n##     data = DeerEcervi)\n## \n## Deviance Residuals: \n##     Min       1Q   Median       3Q      Max  \n## -2.8400  -0.7576   0.3556   0.6431   2.2964  \n## \n## Coefficients:\n##                 Estimate Std. Error z value Pr(&gt;|z|)    \n## (Intercept)   -1.796e+00  5.900e-01  -3.044 0.002336 ** \n## CLength        4.062e-02  7.132e-03   5.695 1.24e-08 ***\n## fSex2          6.280e-01  2.292e-01   2.740 0.006150 ** \n## FarmAU         3.340e+00  7.841e-01   4.259 2.05e-05 ***\n## FarmBA         3.510e+00  7.150e-01   4.908 9.19e-07 ***\n## FarmBE         1.883e+01  6.216e+02   0.030 0.975831    \n## FarmCB         3.012e+00  6.573e-01   4.583 4.58e-06 ***\n## FarmCRC       -1.293e+01  2.400e+03  -0.005 0.995701    \n## FarmHB        -2.364e-01  9.730e-01  -0.243 0.808045    \n## FarmLN         3.831e+00  8.881e-01   4.314 1.60e-05 ***\n## FarmMAN        1.046e+00  6.960e-01   1.503 0.132855    \n## FarmMB         3.693e+00  8.152e-01   4.529 5.91e-06 ***\n## FarmMO         9.722e-01  5.969e-01   1.629 0.103380    \n## FarmNC         1.370e+00  6.904e-01   1.985 0.047169 *  \n## FarmNV         2.098e+00  7.702e-01   2.725 0.006435 ** \n## FarmPN         4.185e+00  8.584e-01   4.875 1.09e-06 ***\n## FarmQM         3.975e+00  7.220e-01   5.506 3.68e-08 ***\n## FarmRF         4.552e+00  1.050e+00   4.337 1.45e-05 ***\n## FarmRN         8.706e-01  7.454e-01   1.168 0.242822    \n## FarmRO         4.555e+00  9.556e-01   4.766 1.88e-06 ***\n## FarmSAU       -1.545e+01  1.368e+03  -0.011 0.990986    \n## FarmSE         2.785e+00  7.876e-01   3.536 0.000407 ***\n## FarmTI         3.900e+00  1.166e+00   3.343 0.000828 ***\n## FarmTN         3.102e+00  7.665e-01   4.046 5.21e-05 ***\n## FarmVISO       3.720e+00  1.011e+00   3.679 0.000234 ***\n## FarmVY         3.974e+00  1.257e+00   3.162 0.001565 ** \n## CLength:fSex2  3.618e-02  1.168e-02   3.097 0.001953 ** \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 1073.1  on 825  degrees of freedom\n## Residual deviance:  745.5  on 799  degrees of freedom\n## AIC: 799.5\n## \n## Number of Fisher Scoring iterations: 15\nanova(DE.glm)\n## Analysis of Deviance Table\n## \n## Model: binomial, link: logit\n## \n## Response: Ecervi.01\n## \n## Terms added sequentially (first to last)\n## \n## \n##              Df Deviance Resid. Df Resid. Dev\n## NULL                           825    1073.13\n## CLength       1   64.815       824    1008.31\n## fSex          1    0.191       823    1008.12\n## Farm         23  252.638       800     755.48\n## CLength:fSex  1    9.984       799     745.50\n\n# Response curves für die einzelnen Farmen (Weibliche Tiere: fSex = \"1\" )\nplot(DeerEcervi$CLength, DeerEcervi$Ecervi.01,\n  xlab = \"Length\", ylab = \"Probability of \\\n     presence of E. cervi L1\"\n)\nI &lt;- order(DeerEcervi$CLength)\nAllFarms &lt;- unique(DeerEcervi$Farm)\nfor (j in AllFarms) {\n  mydata &lt;- data.frame(\n    CLength = DeerEcervi$CLength, fSex = \"1\",\n    Farm = j\n  )\n  n &lt;- dim(mydata)[1]\n  if (n &gt; 10) {\n    P.DE2 &lt;- predict(DE.glm, mydata, type = \"response\")\n    lines(mydata$CLength[I], P.DE2[I])\n  }\n}\n\n\n\n\n# glmm\nlibrary(\"MASS\")\n\nDE.PQL &lt;- glmmPQL(Ecervi.01 ~ CLength * fSex,\n  random = ~ 1 | Farm, family = binomial, data = DeerEcervi\n)\nsummary(DE.PQL)\n## Linear mixed-effects model fit by maximum likelihood\n##   Data: DeerEcervi \n##   AIC BIC logLik\n##    NA  NA     NA\n## \n## Random effects:\n##  Formula: ~1 | Farm\n##         (Intercept)  Residual\n## StdDev:    1.462108 0.9620576\n## \n## Variance function:\n##  Structure: fixed weights\n##  Formula: ~invwt \n## Fixed effects:  Ecervi.01 ~ CLength * fSex \n##                   Value Std.Error  DF  t-value p-value\n## (Intercept)   0.8883697 0.3373283 799 2.633547  0.0086\n## CLength       0.0378608 0.0065269 799 5.800768  0.0000\n## fSex2         0.6104570 0.2137293 799 2.856216  0.0044\n## CLength:fSex2 0.0350666 0.0108558 799 3.230228  0.0013\n##  Correlation: \n##               (Intr) CLngth fSex2 \n## CLength       -0.108              \n## fSex2         -0.191  0.230       \n## CLength:fSex2  0.092 -0.522  0.235\n## \n## Standardized Within-Group Residuals:\n##        Min         Q1        Med         Q3        Max \n## -6.3466592 -0.6387839  0.2978382  0.5218829  3.4912879 \n## \n## Number of Observations: 826\n## Number of Groups: 24\n\n# Modellvoraussagen berechnen\ng &lt;- 0.8883697 + 0.0378608 * DeerEcervi$CLength\n# Rücktransformieren aus Logit\np.averageFarm1 &lt;- exp(g) / (1 + exp(g))\n# Sortierung der Hirschgrössen für's Plotten\nI &lt;- order(DeerEcervi$CLength)\n# Plotten\nplot(DeerEcervi$CLength, DeerEcervi$Ecervi.01,\n  xlab = \"Length\",\n  ylab = \"Probability of presence of E. cervi L1\"\n)\nlines(DeerEcervi$CLength[I], p.averageFarm1[I], lwd = 3)\n# Vertrauensintervalle (CI) mit SD von Random factor berechnen\n# Generell CI = mean + 1.96*SD\np.Upp &lt;- exp(g + 1.96 * 1.462108) / (1 + exp(g + 1.96 * 1.462108))\np.Low &lt;- exp(g - 1.96 * 1.462108) / (1 + exp(g - 1.96 * 1.462108))\nlines(DeerEcervi$CLength[I], p.Upp[I])\nlines(DeerEcervi$CLength[I], p.Low[I])\n\n\n\n\n# Dasselbe mit dem lme4-Package\nlibrary(\"lme4\")\nDE.lme4 &lt;- glmer(Ecervi.01 ~ CLength * fSex + (1 | Farm),\n  family = binomial, data = DeerEcervi\n)\nsummary(DE.lme4)\n## Generalized linear mixed model fit by maximum likelihood (Laplace\n##   Approximation) [glmerMod]\n##  Family: binomial  ( logit )\n## Formula: Ecervi.01 ~ CLength * fSex + (1 | Farm)\n##    Data: DeerEcervi\n## \n##      AIC      BIC   logLik deviance df.resid \n##    832.6    856.1   -411.3    822.6      821 \n## \n## Scaled residuals: \n##     Min      1Q  Median      3Q     Max \n## -6.2678 -0.6090  0.2809  0.5022  3.4546 \n## \n## Random effects:\n##  Groups Name        Variance Std.Dev.\n##  Farm   (Intercept) 2.391    1.546   \n## Number of obs: 826, groups:  Farm, 24\n## \n## Fixed effects:\n##               Estimate Std. Error z value Pr(&gt;|z|)    \n## (Intercept)   0.938969   0.356004   2.638  0.00835 ** \n## CLength       0.038964   0.006917   5.633 1.77e-08 ***\n## fSex2         0.624487   0.222938   2.801  0.00509 ** \n## CLength:fSex2 0.035859   0.011409   3.143  0.00167 ** \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Correlation of Fixed Effects:\n##             (Intr) CLngth fSex2 \n## CLength     -0.107              \n## fSex2       -0.189  0.238       \n## CLngth:fSx2  0.091 -0.514  0.232\n\nlibrary(\"glmmML\")\n## Error in library(\"glmmML\"): there is no package called 'glmmML'\nDE.glmmML &lt;- glmmML(Ecervi.01 ~ CLength * fSex,\n  cluster = Farm, family = binomial, data = DeerEcervi\n)\n## Error in glmmML(Ecervi.01 ~ CLength * fSex, cluster = Farm, family = binomial, : could not find function \"glmmML\"\nsummary(DE.glmmML)\n## Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'DE.glmmML' not found"
  },
  {
    "objectID": "stat5-8/Statistik5_Uebung.html#aufgabe-5.1-split-plot-anova",
    "href": "stat5-8/Statistik5_Uebung.html#aufgabe-5.1-split-plot-anova",
    "title": "Stat5: Übung",
    "section": "Aufgabe 5.1: Split-plot ANOVA",
    "text": "Aufgabe 5.1: Split-plot ANOVA\nDatensatz splityield.csv\nVersuch zum Ernteertrag (yield) einer Kulturpflanze in Abhängigkeit der drei Faktoren Bewässerung (irrigated vs. control), Düngung (N, NP, P) und Aussaatdichten (low, medium, high). Es gab vier ganze Felder (block), die zwei Hälften mit den beiden Bewässerungstreatments, diese wiederum drei Drittel für die drei Saatdichten und diese schliesslich je drei Drittel für die drei Düngertreatments hatten.\n\nAufgaben\n\nBestimmt das minimal adäquate Modell\nStellt die Ergebnisse da"
  },
  {
    "objectID": "stat5-8/Statistik5_Uebung.html#aufgabe-5.2-glmm",
    "href": "stat5-8/Statistik5_Uebung.html#aufgabe-5.2-glmm",
    "title": "Stat5: Übung",
    "section": "Aufgabe 5.2: GLMM",
    "text": "Aufgabe 5.2: GLMM\nDatensatz Datensatz_novanimal_Uebung_Statistik5.2.csv\nFührt mit dem novanimal Datensatz (inviduelle Daten) eine logistische Regression durch, wobei ihr die einzelnen Käufer (single campus_card holder) als weitere randomisierte Variable mitberücksichtigt. Kann der Fleischkonsum durch das Geschlecht, die Hochschulzugehörigkeit und das Alter erklärt werden? Vergleich die Ergebnisse mit der eurem multiplen logistische Modell von Aufgabe 4.2.\n\nAufgaben\n\nBestimmt das minimal adäquate Modell\nStellt die Ergebnisse dar"
  },
  {
    "objectID": "stat5-8/Statistik6_Demo.html#ordinationen-i",
    "href": "stat5-8/Statistik6_Demo.html#ordinationen-i",
    "title": "Stat6: Demo",
    "section": "Ordinationen I",
    "text": "Ordinationen I\n\nPCA\n\nlibrary(\"labdsv\")\n\n# Für Ordinationen benötigen wir Matrizen, nicht Dataframes\n# Generieren von Daten\nraw &lt;- matrix(c(1, 2, 2.5, 2.5, 1, 0.5, 0, 1, 2, 4, 3, 1), nrow = 6)\ncolnames(raw) &lt;- c(\"Art1\", \"Art2\")\nrownames(raw) &lt;- c(\"Ort1\", \"Ort2\", \"Ort3\", \"Ort4\", \"Ort5\", \"Ort6\")\nraw\n##      Art1 Art2\n## Ort1  1.0    0\n## Ort2  2.0    1\n## Ort3  2.5    2\n## Ort4  2.5    4\n## Ort5  1.0    3\n## Ort6  0.5    1\n\n# Originaldaten für Plot separieren\nx1 &lt;- raw[, 1]\ny1 &lt;- raw[, 2]\nz &lt;- c(rep(1:6))\n\n# Plot Abhängigkeit der Arten vom Umweltgradienten\nplot(c(x1, y1) ~ c(z, z),\n  type = \"n\", axes = T, bty = \"l\",\n  las = 1, xlim = c(1, 6), ylim = c(0, 5),\n  xlab = \"Umweltgradient\", ylab = \"Deckung der Arten\"\n)\npoints(x1 ~ z, pch = 21, type = \"b\")\npoints(y1 ~ z, pch = 16, type = \"b\")\ntext(1.5, 1.5, \"Art 1\", col = \"darkgray\")\ntext(1.5, 0.5, \"Art 2\", col = \"darkgray\")\n\n\n\n\n# Daten zentrieren\n# d.h. transformieren so, dass Mittelwert = 0\ncent &lt;- scale(raw, scale = FALSE)\nx2 &lt;- cent[, 1] # für nachfolgenden Plot speichern\ny2 &lt;- cent[, 2] # für nachfolgenden Plot speichern\n\n# Daten zusätzlich rotieren\n# PCA zentriert und rotiert Daten\no.pca &lt;- pca(raw)\nx3 &lt;- o.pca$scores[, 1] # für nachfolgenden Plot speichern\ny3 &lt;- o.pca$scores[, 2] # für nachfolgenden Plot speichern\n\n# Visualisierung der Schritte im Ordinationsraum\nplot(c(y1, y2, y3) ~ c(x1, x2, x3),\n  type = \"n\", axes = T, bty = \"l\", las = 1,\n  xlim = c(-4, 4), ylim = c(-4, 4), xlab = \"Art 1\", ylab = \"Art 2\"\n)\npoints(y1 ~ x1, pch = 21, type = \"b\", col = \"green\", lwd = 2)\ntext(-2.5, 4, \"Originaldaten\", col = \"green\")\npoints(y2 ~ x2, pch = 16, type = \"b\", col = \"red\", lwd = 2)\ntext(-2.5, 3.5, \"Zentriert\", col = \"red\")\npoints(y3 ~ x3, pch = 17, type = \"b\", col = \"blue\", lwd = 2)\ntext(-2.5, 3, \"Zentriert & rotiert\", col = \"blue\")\n\n\n\n\n# Durchführung der PCA\no.pca &lt;- pca(raw)\nplot(o.pca)\n\n\n\n\n# Koordinaten im Ordinationsraum\no.pca$scores\n##             PC1         PC2\n## Ort1 -1.9216223 -0.09357697\n## Ort2 -0.6353776 -0.68143293\n## Ort3  0.4762699 -0.80076373\n## Ort4  2.3503705 -0.10237502\n## Ort5  0.8895287  0.95400610\n## Ort6 -1.1591692  0.72414255\n\n# Korrelationen der Variablen mit den Ordinationsachsen\no.pca$loadings\n##            PC1        PC2\n## Art1 0.3491944 -0.9370503\n## Art2 0.9370503  0.3491944\n\n# Erklärte Varianz der Achsen\nE &lt;- o.pca$sdev^2 / o.pca$totdev * 100\nE\n## [1] 82.40009 17.59991\n\n# Visualisieren mit prcomp\npca.2 &lt;- prcomp(raw, scale = F)\nsummary(pca.2)\n## Importance of components:\n##                          PC1    PC2\n## Standard deviation     1.548 0.7154\n## Proportion of Variance 0.824 0.1760\n## Cumulative Proportion  0.824 1.0000\nplot(pca.2) #\n\n\n\nbiplot(pca.2)\n\n\n\n\n# mit vegan\nlibrary(\"vegan\")\n# Die Funktion rda führt ein PCA aus an wenn nicht Artdaten UND Umweltdaten definiert werden\npca.3 &lt;- rda(raw, scale = FALSE)\n# scores(pca.3, display = c(\"sites\"))\n# scores(pca.3, display = c(\"species\"))\nsummary(pca.3, axes = 0)\n## \n## Call:\n## rda(X = raw, scale = FALSE) \n## \n## Partitioning of variance:\n##               Inertia Proportion\n## Total           2.908          1\n## Unconstrained   2.908          1\n## \n## Eigenvalues, and their contribution to the variance \n## \n## Importance of components:\n##                         PC1    PC2\n## Eigenvalue            2.396 0.5119\n## Proportion Explained  0.824 0.1760\n## Cumulative Proportion 0.824 1.0000\n## \n## Scaling 2 for species and site scores\n## * Species are scaled proportional to eigenvalues\n## * Sites are unscaled: weighted dispersion equal on all dimensions\n## * General scaling constant of scores:\nbiplot(pca.3)\n\n\n\n\n\n# Mit Beispieldaten aus Wildi\nlibrary(\"readr\")\nsveg &lt;- read_delim(\"datasets/stat5-8/dave_sveg.csv\")\n\nstr(sveg)\nsummary(sveg)\nnames(sveg)\n\n\n# PCA: Deckungen Wurzeltransformiert, cor=TRUE erzwingt Nutzung der Korrelationsmatrix\npca.5 &lt;- pca(sveg^0.25, cor = TRUE)\n\n\n# Koordinaten im Ordinationsraum\npca.5$scores\n\n# Korrelationen der Variablen mit den Ordinationsachsen\npca.5$loadings\n\n\n# Erklärte Varianz der Achsen in Prozent (sdev ist die Wurzel daraus)\nE &lt;- pca.5$sdev^2 / pca.5$totdev * 100\nE\n##  [1] 2.061885e+01 8.098205e+00 6.070537e+00 3.666650e+00 3.322363e+00\n##  [6] 3.128942e+00 3.003875e+00 2.634636e+00 2.605558e+00 2.449637e+00\n## [11] 2.339344e+00 2.265430e+00 2.116464e+00 2.046578e+00 1.969912e+00\n## [16] 1.871020e+00 1.777063e+00 1.693483e+00 1.524015e+00 1.503332e+00\n## [21] 1.434245e+00 1.378271e+00 1.329404e+00 1.291336e+00 1.251895e+00\n## [26] 1.186157e+00 1.109340e+00 1.068661e+00 1.044385e+00 9.891552e-01\n## [31] 9.764586e-01 8.869747e-01 8.451212e-01 8.049318e-01 7.603242e-01\n## [36] 7.311274e-01 6.945830e-01 6.339064e-01 6.063542e-01 5.502527e-01\n## [41] 5.411059e-01 4.956931e-01 4.795188e-01 4.601244e-01 3.936176e-01\n## [46] 3.477631e-01 3.402128e-01 3.165971e-01 2.951856e-01 2.728882e-01\n## [51] 2.635725e-01 2.233500e-01 2.125542e-01 1.989449e-01 1.681852e-01\n## [56] 1.555571e-01 1.485298e-01 1.271079e-01 9.164615e-02 7.880113e-02\n## [61] 5.913306e-02 5.113452e-02 4.066351e-30\nE[1:5]\n## [1] 20.618848  8.098205  6.070537  3.666650  3.322363\nplot(pca.5)\n\n\n\n# PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nplot(pca.5$scores[, 1], pca.5$scores[, 2], type = \"n\", asp = 1, xlab = \"PC1\", ylab = \"PC2\")\npoints(pca.5$scores[, 1], pca.5$scores[, 2], pch = 18)\n\n\n\n\n# Subjektive Auswahl von Arten zur Darstellung\nsel.sp &lt;- c(3, 11, 23, 39, 46, 72, 77, 96)\nsnames &lt;- names(sveg[, sel.sp])\nsnames\n## [1] \"Vaccinium.oxycoccos\" \"Carex.echinata\"      \"Arnica.montana\"     \n## [4] \"Carex.pulicaris\"     \"Sphagnum.recurvum\"   \"Viola.palustris\"    \n## [7] \"Galium.uliginosum\"   \"Stachys.officinalis\"\n\n# PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen (h)\nx &lt;- pca.5$loadings[, 1]\ny &lt;- pca.5$loadings[, 2]\nplot(x, y, type = \"n\", asp = 1)\narrows(0, 0, x[sel.sp], y[sel.sp], length = 0.08)\ntext(x[sel.sp], y[sel.sp], snames, pos = 1, cex = 0.6)\n\n\n\n\n# Mit vegan\npca.6 &lt;- rda(sveg^0.25, scale = TRUE)\n# Erklärte Varianz der Achsen\nsummary(pca.6, axes = 0)\n## \n## Call:\n## rda(X = sveg^0.25, scale = TRUE) \n## \n## Partitioning of correlations:\n##               Inertia Proportion\n## Total             119          1\n## Unconstrained     119          1\n## \n## Eigenvalues, and their contribution to the correlations \n## \n## Importance of components:\n##                           PC1     PC2     PC3     PC4     PC5     PC6     PC7\n## Eigenvalue            24.5364 9.63686 7.22394 4.36331 3.95361 3.72344 3.57461\n## Proportion Explained   0.2062 0.08098 0.06071 0.03667 0.03322 0.03129 0.03004\n## Cumulative Proportion  0.2062 0.28717 0.34788 0.38454 0.41777 0.44906 0.47909\n##                           PC8     PC9   PC10    PC11    PC12    PC13    PC14\n## Eigenvalue            3.13522 3.10061 2.9151 2.78382 2.69586 2.51859 2.43543\n## Proportion Explained  0.02635 0.02606 0.0245 0.02339 0.02265 0.02116 0.02047\n## Cumulative Proportion 0.50544 0.53150 0.5560 0.57939 0.60204 0.62320 0.64367\n##                         PC15    PC16    PC17    PC18    PC19    PC20    PC21\n## Eigenvalue            2.3442 2.22651 2.11470 2.01524 1.81358 1.78896 1.70675\n## Proportion Explained  0.0197 0.01871 0.01777 0.01693 0.01524 0.01503 0.01434\n## Cumulative Proportion 0.6634 0.68208 0.69985 0.71679 0.73203 0.74706 0.76140\n##                          PC22    PC23    PC24    PC25    PC26    PC27    PC28\n## Eigenvalue            1.64014 1.58199 1.53669 1.48976 1.41153 1.32011 1.27171\n## Proportion Explained  0.01378 0.01329 0.01291 0.01252 0.01186 0.01109 0.01069\n## Cumulative Proportion 0.77518 0.78848 0.80139 0.81391 0.82577 0.83687 0.84755\n##                          PC29     PC30     PC31    PC32     PC33     PC34\n## Eigenvalue            1.24282 1.177095 1.161986 1.05550 1.005694 0.957869\n## Proportion Explained  0.01044 0.009892 0.009765 0.00887 0.008451 0.008049\n## Cumulative Proportion 0.85800 0.867887 0.877652 0.88652 0.894973 0.903022\n##                           PC35     PC36     PC37     PC38     PC39     PC40\n## Eigenvalue            0.904786 0.870042 0.826554 0.754349 0.721562 0.654801\n## Proportion Explained  0.007603 0.007311 0.006946 0.006339 0.006064 0.005503\n## Cumulative Proportion 0.910626 0.917937 0.924883 0.931222 0.937285 0.942788\n##                           PC41     PC42     PC43     PC44     PC45     PC46\n## Eigenvalue            0.643916 0.589875 0.570627 0.547548 0.468405 0.413838\n## Proportion Explained  0.005411 0.004957 0.004795 0.004601 0.003936 0.003478\n## Cumulative Proportion 0.948199 0.953156 0.957951 0.962552 0.966488 0.969966\n##                           PC47     PC48     PC49     PC50     PC51     PC52\n## Eigenvalue            0.404853 0.376750 0.351271 0.324737 0.313651 0.265787\n## Proportion Explained  0.003402 0.003166 0.002952 0.002729 0.002636 0.002234\n## Cumulative Proportion 0.973368 0.976534 0.979486 0.982215 0.984851 0.987084\n##                           PC53     PC54     PC55     PC56     PC57     PC58\n## Eigenvalue            0.252939 0.236744 0.200140 0.185113 0.176750 0.151258\n## Proportion Explained  0.002126 0.001989 0.001682 0.001556 0.001485 0.001271\n## Cumulative Proportion 0.989210 0.991199 0.992881 0.994436 0.995922 0.997193\n##                            PC59     PC60      PC61      PC62\n## Eigenvalue            0.1090589 0.093773 0.0703683 0.0608501\n## Proportion Explained  0.0009165 0.000788 0.0005913 0.0005113\n## Cumulative Proportion 0.9981093 0.998897 0.9994887 1.0000000\n## \n## Scaling 2 for species and site scores\n## * Species are scaled proportional to eigenvalues\n## * Sites are unscaled: weighted dispersion equal on all dimensions\n## * General scaling constant of scores:\n# PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nbiplot(pca.6, display = \"sites\", type = \"points\", scaling = 1)\n\n\n\n# Subjektive Auswahl von Arten zur Darstellung\nsel.sp &lt;- c(3, 11, 23, 39, 46, 72, 77, 96)\nsnames &lt;- names(sveg[, sel.sp])\nsnames\n## [1] \"Vaccinium.oxycoccos\" \"Carex.echinata\"      \"Arnica.montana\"     \n## [4] \"Carex.pulicaris\"     \"Sphagnum.recurvum\"   \"Viola.palustris\"    \n## [7] \"Galium.uliginosum\"   \"Stachys.officinalis\"\n# PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen (h)\nscores &lt;- scores(pca.6, display = \"species\")\nx &lt;- scores[, 1]\ny &lt;- scores[, 2]\nplot(x, y, type = \"n\", asp = 1)\narrows(0, 0, x[sel.sp], y[sel.sp], length = 0.08)\ntext(x[sel.sp], y[sel.sp], snames, pos = 1, cex = 0.6)\n\n\n\n\n# Mit angepassten Achsen\nplot(x, y, type = \"n\", asp = 1, xlim = c(-1, 1), ylim = c(-0.6, 0.6))\narrows(0, 0, x[sel.sp], y[sel.sp], length = 0.08)\ntext(x[sel.sp], y[sel.sp], snames, pos = 1, cex = 0.6)\n\n\n\n\n\n\nCA\n\nca.1 &lt;- cca(sveg^0.5)\n# Arten (o) und Communities (+) plotten\nplot(ca.1)\n\n\n\n\n# Nur Arten plotten\nplot(ca.1, display = \"species\", type = \"points\")\n\n\n\n\n# Anteilige Varianz, die durch die ersten beiden Achsen erklärt wird\nca.1$CA$eig[1:2] / sum(ca.1$CA$eig)\n##       CA1       CA2 \n## 0.1938717 0.0784178\n\nsummary(eigenvals(ca.1))\n## Importance of components:\n##                          CA1     CA2     CA3     CA4     CA5     CA6     CA7\n## Eigenvalue            0.4248 0.17182 0.12995 0.09102 0.07954 0.07274 0.06705\n## Proportion Explained  0.1939 0.07842 0.05931 0.04154 0.03630 0.03320 0.03060\n## Cumulative Proportion 0.1939 0.27229 0.33160 0.37314 0.40944 0.44264 0.47324\n##                           CA8     CA9    CA10    CA11    CA12    CA13   CA14\n## Eigenvalue            0.06245 0.05811 0.05348 0.05261 0.05133 0.04868 0.0480\n## Proportion Explained  0.02850 0.02652 0.02441 0.02401 0.02343 0.02222 0.0219\n## Cumulative Proportion 0.50174 0.52826 0.55267 0.57668 0.60010 0.62232 0.6442\n##                          CA15    CA16    CA17    CA18    CA19    CA20    CA21\n## Eigenvalue            0.04421 0.04279 0.03913 0.03752 0.03699 0.03412 0.03309\n## Proportion Explained  0.02018 0.01953 0.01786 0.01712 0.01688 0.01557 0.01510\n## Cumulative Proportion 0.66440 0.68393 0.70179 0.71892 0.73580 0.75137 0.76647\n##                          CA22    CA23    CA24    CA25    CA26    CA27    CA28\n## Eigenvalue            0.03253 0.03033 0.02963 0.02718 0.02621 0.02486 0.02372\n## Proportion Explained  0.01485 0.01384 0.01352 0.01241 0.01196 0.01135 0.01083\n## Cumulative Proportion 0.78132 0.79516 0.80869 0.82109 0.83305 0.84440 0.85523\n##                          CA29     CA30     CA31     CA32     CA33     CA34\n## Eigenvalue            0.02262 0.021397 0.020274 0.018805 0.018216 0.017737\n## Proportion Explained  0.01032 0.009765 0.009253 0.008582 0.008314 0.008095\n## Cumulative Proportion 0.86555 0.875318 0.884571 0.893153 0.901467 0.909561\n##                           CA35    CA36     CA37     CA38     CA39     CA40\n## Eigenvalue            0.016855 0.01422 0.014044 0.013002 0.011367 0.011185\n## Proportion Explained  0.007693 0.00649 0.006409 0.005934 0.005188 0.005105\n## Cumulative Proportion 0.917254 0.92374 0.930153 0.936087 0.941275 0.946379\n##                           CA41     CA42     CA43     CA44     CA45     CA46\n## Eigenvalue            0.010417 0.010172 0.009513 0.009183 0.008162 0.007993\n## Proportion Explained  0.004754 0.004643 0.004342 0.004191 0.003725 0.003648\n## Cumulative Proportion 0.951133 0.955776 0.960118 0.964308 0.968033 0.971681\n##                           CA47     CA48     CA49     CA50    CA51     CA52\n## Eigenvalue            0.006900 0.006684 0.006108 0.005493 0.00515 0.004995\n## Proportion Explained  0.003149 0.003051 0.002788 0.002507 0.00235 0.002279\n## Cumulative Proportion 0.974830 0.977881 0.980668 0.983176 0.98553 0.987805\n##                           CA53     CA54     CA55     CA56     CA57     CA58\n## Eigenvalue            0.004426 0.004011 0.003517 0.003455 0.003059 0.002279\n## Proportion Explained  0.002020 0.001830 0.001605 0.001577 0.001396 0.001040\n## Cumulative Proportion 0.989825 0.991656 0.993261 0.994837 0.996233 0.997274\n##                            CA59      CA60      CA61      CA62\n## Eigenvalue            0.0019296 0.0017784 0.0011904 0.0010752\n## Proportion Explained  0.0008807 0.0008116 0.0005433 0.0004907\n## Cumulative Proportion 0.9981544 0.9989660 0.9995093 1.0000000\n\n\n\nDCA\n\ndca.1 &lt;- decorana(sveg, mk = 10)\nplot(dca.1, display = \"sites\", type = \"point\")\n\n\n\n\ndca.2 &lt;- decorana(sveg, mk = 100)\nplot(dca.2, display = \"sites\", type = \"point\")\n\n\n\n\n\n\nNMDS\n\n# Distanzmatrix als Start erzeugen (PCA)\nmde &lt;- vegdist(sveg, method = \"euclidean\")\n\n# Alternative mit einem für Vegetationsdaten häufig verwendeten Dissimilarity-index\nmde &lt;- vegdist(sveg, method = \"bray\")\n\n# Z wei verschiedene NMDS-Methoden\nlibrary(\"MASS\")\nset.seed(1) # macht man, wenn man bei einer Wiederholung exakt die gleichen Ergebnisse will\nimds &lt;- isoMDS(mde, k = 2)\n## initial  value 16.524491 \n## iter   5 value 12.518681\n## iter  10 value 12.025808\n## iter  10 value 12.020751\n## iter  10 value 12.020751\n## final  value 12.020751 \n## converged\nset.seed(1)\nmmds &lt;- metaMDS(mde, k = 2)\n## Run 0 stress 0.1179909 \n## Run 1 stress 0.1179909 \n## ... Procrustes: rmse 1.11122e-05  max resid 4.697213e-05 \n## ... Similar to previous best\n## Run 2 stress 0.170918 \n## Run 3 stress 0.1529993 \n## Run 4 stress 0.1179909 \n## ... Procrustes: rmse 2.021269e-06  max resid 1.184555e-05 \n## ... Similar to previous best\n## Run 5 stress 0.1252011 \n## Run 6 stress 0.1583424 \n## Run 7 stress 0.1181212 \n## ... Procrustes: rmse 0.006525662  max resid 0.04396629 \n## Run 8 stress 0.1596312 \n## Run 9 stress 0.1630026 \n## Run 10 stress 0.1179909 \n## ... New best solution\n## ... Procrustes: rmse 3.475822e-06  max resid 2.360888e-05 \n## ... Similar to previous best\n## Run 11 stress 0.1538119 \n## Run 12 stress 0.1252011 \n## Run 13 stress 0.1500845 \n## Run 14 stress 0.1251634 \n## Run 15 stress 0.1251634 \n## Run 16 stress 0.1179909 \n## ... Procrustes: rmse 5.655652e-06  max resid 1.960818e-05 \n## ... Similar to previous best\n## Run 17 stress 0.1179909 \n## ... Procrustes: rmse 7.036898e-06  max resid 2.755273e-05 \n## ... Similar to previous best\n## Run 18 stress 0.1179909 \n## ... Procrustes: rmse 1.0129e-05  max resid 3.793497e-05 \n## ... Similar to previous best\n## Run 19 stress 0.1251572 \n## Run 20 stress 0.1179909 \n## ... Procrustes: rmse 5.011736e-06  max resid 2.261906e-05 \n## ... Similar to previous best\n## *** Best solution repeated 5 times\n\nplot(imds$points)\n\n\n\nplot(mmds$points)\n\n\n\n\n# Stress = S² = Abweichung der zweidimensionalen NMDS-Lösung von der originalen Distanzmatrix\nstressplot(imds, mde)\n\n\n\nstressplot(mmds, mde)\n\n\n\n\n\n\n\n\n\n\nWildi, Otto. 2017. Data analysis in vegetation ecology. Cabi."
  },
  {
    "objectID": "stat5-8/Statistik6_Uebung.html#übung-6.1-pca-naturwissenschaftlich",
    "href": "stat5-8/Statistik6_Uebung.html#übung-6.1-pca-naturwissenschaftlich",
    "title": "Stat6: Übung",
    "section": "Übung 6.1: PCA (naturwissenschaftlich)",
    "text": "Übung 6.1: PCA (naturwissenschaftlich)\n\nDatensatz: Doubs.RData\n\nLädt den Datensatz Doubs.RData mit dem folgenden Befehl ins R: load(“Doubs.RData”)\nDie Umweltvariablen findet ihr im data.frame env die Abundanzen im data.frame spe. Im data.frame fishtrait findet ihr die Vollständigen Namen der Fische\nDer Datensatz enthält Daten zum Vorkommen von Fischarten und den zugehörigen Umweltvariablen im Fluss Doubs (Jura). Es gibt 30 Probestellen (sites), an denen jeweils die Abundanzen von 27 Fischarten (auf einer Skalen von 0 bis 5) sowie 11 Umweltvariablen erhoben wurden:\n\ndfs = Distance from source (km)\nele = Elevation (m a.s.l.)\nslo = Slope (‰)\ndis = Mean annual discharge (m3 s-1)\npH = pH of water\nhar = Hardness (Ca concentration) (mg L-1)\npho = Phosphate concentration (mg L-1)\nnit = Nitrate concentration (mg L-1)\namm = Ammonium concentration (mg L-1)\noxy = Dissolved oxygen (mg L-1)\nbod = Biological oxygen demand (mg L-1)\n\nEure Aufgabe ist nun, in einem ersten Schritt eine PCA für die 11 Umweltvariablen zu rechnen. Da die einzelnen Variablen auf ganz unterschiedlichen Skalen gemessen wurden, ist dazu eine Standardisierung nötig (pca mit der Funktion rda, scale=TRUE). Überlegt, wie viele Achsen wichtig sind und für was sie jeweils stehen.\nIn einem zweiten Schritt sollen dann die vollständig unkorrelierten PCA-Achsen als Prädiktoren einer multiplen Regression zur Erklärung der Fischartenzahl (Anzahl kann z.B. kann mit dem Befehl specnumber(spe) ermittel werden) verwendet werden (wahlweise lm oder glm). Gebt das minimal adäquate Modell an und interpretiert dieses (wahlweise im frequentist oder information theoretician approach). (Wer noch mehr probieren möchte, kann zum Vergleich noch eine multiple Regression mit den Originaldaten rechnen)."
  },
  {
    "objectID": "stat5-8/Statistik7_Demo.html#ordinationen-ii",
    "href": "stat5-8/Statistik7_Demo.html#ordinationen-ii",
    "title": "Stat7: Demo",
    "section": "Ordinationen II",
    "text": "Ordinationen II\n\nInterpretation von Ordinationen\nWildi pp. 96 et seq.\n\n# Plot Arten\nlibrary(\"readr\")\nlibrary(\"vegan\")\n\nsveg &lt;- read_delim(\"datasets/stat5-8/dave_sveg.csv\")\nssit &lt;- read_delim(\"datasets/stat5-8/dave_ssit.csv\")\n\n# Daten anschauen\ndim(sveg) # Vegetationsaufnahmen\n## [1]  63 119\nsveg[1:3, 1:3]\n## # A tibble: 3 × 3\n##   Vaccinium.myrtillus Vaccinium.uliginosum Vaccinium.oxycoccos\n##                 &lt;dbl&gt;                &lt;dbl&gt;               &lt;dbl&gt;\n## 1                   0                    0                   2\n## 2                   1                    2                   1\n## 3                   1                    1                   1\ndim(ssit) # Umweltvariablen\n## [1] 63 20\nssit[1:3, 1:3]\n## # A tibble: 3 × 3\n##   pH.peat log.ash.perc Ca_peat\n##     &lt;dbl&gt;        &lt;dbl&gt;   &lt;dbl&gt;\n## 1      39          162      72\n## 2      36           13      88\n## 3      44          177     141\n\n# CA rechnen\nca &lt;- cca(sveg^0.5)\n\n## Plot mit ausgewählten Arten\nsel.spec &lt;- c(3, 11, 23, 31, 39, 46, 72, 77, 96)\nsnames &lt;- names(sveg[, sel.spec])\nsnames\n## [1] \"Vaccinium.oxycoccos\" \"Carex.echinata\"      \"Arnica.montana\"     \n## [4] \"Festuca.rubra\"       \"Carex.pulicaris\"     \"Sphagnum.recurvum\"  \n## [7] \"Viola.palustris\"     \"Galium.uliginosum\"   \"Stachys.officinalis\"\nscores &lt;- scores(ca, display = \"species\", scaling = \"sites\")\nsx &lt;- scores[sel.spec, 1]\nsy &lt;- scores[sel.spec, 2]\nplot(ca, display = \"sites\", type = \"point\")\npoints(sx, sy, pch = 16)\nsnames &lt;- make.cepnames(snames)\ntext(sx, sy, snames, pos = c(1, 2, 1, 1, 3, 2, 4, 3, 1), cex = 0.8)\n\n\n\n\n# Plot \"response surfaces\" in der CA\npar(mfrow = c(1, 2))\nplot(ca, display = \"sites\", type = \"point\")\nordisurf(ca, ssit$pH.peat, add = TRUE, col = \"red\")\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 2.98  total = 3.98 \n## \n## REML score: 264.6064\ntext(-1.5, 2, \"pH\", col = \"red\")\nplot(ca, display = \"sites\", type = \"points\")\nordisurf(ca, ssit$Waterlev.av, add = TRUE, col = \"blue\")\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 5.07  total = 6.07 \n## \n## REML score: 161.492\ntext(-1.5, 2, \"Wasserstand\", col = \"blue\")\n\n\n\n\n# Daselbe mit einer DCA\npar(mfrow = c(1, 2))\ndca &lt;- decorana(sveg)\nplot(dca, display = \"sites\", type = \"points\")\nordisurf(dca, ssit$pH.peat, add = TRUE)\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 1.68  total = 2.68 \n## \n## REML score: 264.2347\ntext(-1, 1.5, \"pH\", col = \"red\")\nplot(dca, display = \"sites\", type = \"points\")\nordisurf(dca, ssit$Waterlev.av, add = TRUE, col = \"blue\")\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 6.23  total = 7.23 \n## \n## REML score: 161.1293\ntext(-1, 1.5, \"Wasserstand\", col = \"blue\")\n\n\n\n\n## Dasselbe mit NMDS\nmde &lt;- vegdist(sveg, method = \"euclidean\")\nmmds &lt;- metaMDS(mde)\n## Run 0 stress 0.1478603 \n## Run 1 stress 0.1471495 \n## ... New best solution\n## ... Procrustes: rmse 0.01081071  max resid 0.06881268 \n## Run 2 stress 0.1792628 \n## Run 3 stress 0.1462959 \n## ... New best solution\n## ... Procrustes: rmse 0.03087979  max resid 0.1476908 \n## Run 4 stress 0.1771671 \n## Run 5 stress 0.1758771 \n## Run 6 stress 0.1757064 \n## Run 7 stress 0.146296 \n## ... Procrustes: rmse 1.769562e-05  max resid 0.0001107662 \n## ... Similar to previous best\n## Run 8 stress 0.146296 \n## ... Procrustes: rmse 2.2742e-05  max resid 0.0001287974 \n## ... Similar to previous best\n## Run 9 stress 0.1890178 \n## Run 10 stress 0.1478603 \n## Run 11 stress 0.200195 \n## Run 12 stress 0.1477795 \n## Run 13 stress 0.1866176 \n## Run 14 stress 0.1788398 \n## Run 15 stress 0.1462959 \n## ... New best solution\n## ... Procrustes: rmse 4.81931e-05  max resid 0.000302368 \n## ... Similar to previous best\n## Run 16 stress 0.1664127 \n## Run 17 stress 0.148944 \n## Run 18 stress 0.1915273 \n## Run 19 stress 0.1854354 \n## Run 20 stress 0.171699 \n## *** Best solution repeated 1 times\n\nlibrary(\"MASS\")\nimds &lt;- isoMDS(mde)\n## initial  value 21.981028 \n## iter   5 value 15.595142\n## iter  10 value 15.269201\n## final  value 15.229997 \n## converged\n\npar(mfrow = c(2, 2))\nplot(mmds$points)\nordisurf(mmds, ssit$pH.peat, add = TRUE)\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 3.04  total = 4.04 \n## \n## REML score: 264.6698\ntext(-4, 4, \"pH\", col = \"red\")\nplot(mmds$points)\nordisurf(mmds, ssit$Waterlev.av, add = TRUE, col = \"blue\")\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 6.39  total = 7.39 \n## \n## REML score: 168.0595\ntext(-4, 4, \"Wasserstand\", col = \"blue\")\nplot(imds$points)\nordisurf(imds, ssit$pH.peat, add = TRUE)\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 3.38  total = 4.38 \n## \n## REML score: 264.0754\ntext(-4, 4, \"pH\", col = \"red\")\nplot(imds$points)\nordisurf(imds, ssit$Waterlev.av, add = T, col = \"blue\")\n## \n## Family: gaussian \n## Link function: identity \n## \n## Formula:\n## y ~ s(x1, x2, k = 10, bs = \"tp\", fx = FALSE)\n## \n## Estimated degrees of freedom:\n## 6.01  total = 7.01 \n## \n## REML score: 167.6801\ntext(-4, 4, \"Wasserstand\", col = \"blue\")\n\n\n\n\n\n\nConstrained ordination\n\n# Umweltvariablen wäheln, durch die die Ordination constrained werden soll\nnames(ssit)\n##  [1] \"pH.peat\"        \"log.ash.perc\"   \"Ca_peat\"        \"Mg_peat\"       \n##  [5] \"Na_peat\"        \"K_peat\"         \"Acidity.peat\"   \"CEC.peat\"      \n##  [9] \"Base.sat.perc\"  \"P.peat\"         \"Waterlev.max\"   \"Waterlev.av\"   \n## [13] \"Waterlev.min\"   \"log.peat.lev\"   \"log.slope.deg\"  \"pH.water\"      \n## [17] \"log.cond.water\" \"log.Ca.water\"   \"x.axis\"         \"y.axis\"\n\n# 5 Variablen wählen\ns5 &lt;- c(\"pH.peat\", \"P.peat\", \"Waterlev.av\", \"CEC.peat\", \"Acidity.peat\")\nssit5 &lt;- ssit[s5]\n\n\npar(mfrow = c(1, 2))\n\n# RDA = constrained PCA\nrda &lt;- rda(sveg ~ ., ssit5)\nplot(rda)\n\n# CCA = constrained CA\ncca &lt;- cca(sveg ~ ., ssit5)\nplot(cca)\n\n\n\n\n# Unconstrained and constrained variance\ntot &lt;- cca$tot.chi\nconstr &lt;- cca$CCA$tot.chi\nconstr / tot # Erklärte Varianz\n## [1] 0.2621114\n\n\n\nRedundancy analysis (RDA)\nMehr Details zu RDA aus Borcard u. a. (2011)\n\n# Datensatz Doubs in den workspace laden\nload(\"datasets/stat5-8/Doubs.RData\")\n\n\n# Daten anschauen\nsummary(spe)\n##       Cogo           Satr           Phph            Babl            Thth     \n##  Min.   :0.00   Min.   :0.00   Min.   :0.000   Min.   :0.000   Min.   :0.00  \n##  1st Qu.:0.00   1st Qu.:0.00   1st Qu.:0.000   1st Qu.:1.000   1st Qu.:0.00  \n##  Median :0.00   Median :1.00   Median :3.000   Median :2.000   Median :0.00  \n##  Mean   :0.50   Mean   :1.90   Mean   :2.267   Mean   :2.433   Mean   :0.50  \n##  3rd Qu.:0.75   3rd Qu.:3.75   3rd Qu.:4.000   3rd Qu.:4.000   3rd Qu.:0.75  \n##  Max.   :3.00   Max.   :5.00   Max.   :5.000   Max.   :5.000   Max.   :4.00  \n##       Teso             Chna          Pato             Lele      \n##  Min.   :0.0000   Min.   :0.0   Min.   :0.0000   Min.   :0.000  \n##  1st Qu.:0.0000   1st Qu.:0.0   1st Qu.:0.0000   1st Qu.:0.000  \n##  Median :0.0000   Median :0.0   Median :0.0000   Median :1.000  \n##  Mean   :0.6333   Mean   :0.6   Mean   :0.8667   Mean   :1.433  \n##  3rd Qu.:0.7500   3rd Qu.:1.0   3rd Qu.:2.0000   3rd Qu.:2.000  \n##  Max.   :5.0000   Max.   :3.0   Max.   :4.0000   Max.   :5.000  \n##       Sqce            Baba            Albi          Gogo            Eslu      \n##  Min.   :0.000   Min.   :0.000   Min.   :0.0   Min.   :0.000   Min.   :0.000  \n##  1st Qu.:1.000   1st Qu.:0.000   1st Qu.:0.0   1st Qu.:0.000   1st Qu.:0.000  \n##  Median :2.000   Median :0.000   Median :0.0   Median :1.000   Median :1.000  \n##  Mean   :1.867   Mean   :1.433   Mean   :0.9   Mean   :1.833   Mean   :1.333  \n##  3rd Qu.:3.000   3rd Qu.:3.000   3rd Qu.:1.0   3rd Qu.:3.750   3rd Qu.:2.000  \n##  Max.   :5.000   Max.   :5.000   Max.   :5.0   Max.   :5.000   Max.   :5.000  \n##       Pefl          Rham          Legi             Scer          Cyca       \n##  Min.   :0.0   Min.   :0.0   Min.   :0.0000   Min.   :0.0   Min.   :0.0000  \n##  1st Qu.:0.0   1st Qu.:0.0   1st Qu.:0.0000   1st Qu.:0.0   1st Qu.:0.0000  \n##  Median :0.5   Median :0.0   Median :0.0000   Median :0.0   Median :0.0000  \n##  Mean   :1.2   Mean   :1.1   Mean   :0.9667   Mean   :0.7   Mean   :0.8333  \n##  3rd Qu.:2.0   3rd Qu.:2.0   3rd Qu.:1.7500   3rd Qu.:1.0   3rd Qu.:1.0000  \n##  Max.   :5.0   Max.   :5.0   Max.   :5.0000   Max.   :5.0   Max.   :5.0000  \n##       Titi          Abbr             Icme          Gyce            Ruru    \n##  Min.   :0.0   Min.   :0.0000   Min.   :0.0   Min.   :0.000   Min.   :0.0  \n##  1st Qu.:0.0   1st Qu.:0.0000   1st Qu.:0.0   1st Qu.:0.000   1st Qu.:0.0  \n##  Median :1.0   Median :0.0000   Median :0.0   Median :0.000   Median :1.0  \n##  Mean   :1.5   Mean   :0.8667   Mean   :0.6   Mean   :1.267   Mean   :2.1  \n##  3rd Qu.:3.0   3rd Qu.:1.0000   3rd Qu.:0.0   3rd Qu.:2.000   3rd Qu.:5.0  \n##  Max.   :5.0   Max.   :5.0000   Max.   :5.0   Max.   :5.000   Max.   :5.0  \n##       Blbj            Alal          Anan     \n##  Min.   :0.000   Min.   :0.0   Min.   :0.00  \n##  1st Qu.:0.000   1st Qu.:0.0   1st Qu.:0.00  \n##  Median :0.000   Median :0.0   Median :0.00  \n##  Mean   :1.033   Mean   :1.9   Mean   :0.90  \n##  3rd Qu.:1.750   3rd Qu.:5.0   3rd Qu.:1.75  \n##  Max.   :5.000   Max.   :5.0   Max.   :5.00\nsummary(env)\n##       dfs              ele             slo              dis       \n##  Min.   :  0.30   Min.   :172.0   Min.   : 0.200   Min.   : 0.84  \n##  1st Qu.: 54.45   1st Qu.:248.0   1st Qu.: 0.525   1st Qu.: 4.20  \n##  Median :175.20   Median :395.0   Median : 1.200   Median :22.10  \n##  Mean   :188.23   Mean   :481.6   Mean   : 3.497   Mean   :22.20  \n##  3rd Qu.:301.73   3rd Qu.:782.0   3rd Qu.: 2.875   3rd Qu.:28.57  \n##  Max.   :453.00   Max.   :934.0   Max.   :48.000   Max.   :69.00  \n##        pH             har              pho              nit       \n##  Min.   :7.700   Min.   : 40.00   Min.   :0.0100   Min.   :0.150  \n##  1st Qu.:7.925   1st Qu.: 84.25   1st Qu.:0.1250   1st Qu.:0.505  \n##  Median :8.000   Median : 89.00   Median :0.2850   Median :1.600  \n##  Mean   :8.050   Mean   : 86.10   Mean   :0.5577   Mean   :1.654  \n##  3rd Qu.:8.100   3rd Qu.: 96.75   3rd Qu.:0.5600   3rd Qu.:2.425  \n##  Max.   :8.600   Max.   :110.00   Max.   :4.2200   Max.   :6.200  \n##       amm              oxy              bod        \n##  Min.   :0.0000   Min.   : 4.100   Min.   : 1.300  \n##  1st Qu.:0.0000   1st Qu.: 8.025   1st Qu.: 2.725  \n##  Median :0.1000   Median :10.200   Median : 4.150  \n##  Mean   :0.2093   Mean   : 9.390   Mean   : 5.117  \n##  3rd Qu.:0.2000   3rd Qu.:10.900   3rd Qu.: 5.275  \n##  Max.   :1.8000   Max.   :12.400   Max.   :16.700\nsummary(spa)\n##        X                Y         \n##  Min.   :  0.00   Min.   : 20.00  \n##  1st Qu.: 80.94   1st Qu.: 42.13  \n##  Median : 96.56   Median : 73.14  \n##  Mean   : 97.58   Mean   : 66.57  \n##  3rd Qu.:130.03   3rd Qu.: 89.13  \n##  Max.   :159.44   Max.   :105.43\n\n\n## Entfernen der Untersuchungsfläche ohne Arten\nspe &lt;- spe[-8, ]\nenv &lt;- env[-8, ]\nspa &lt;- spa[-8, ]\n\n## Karten für 4 Fischarten\npar(mfrow = c(2, 2))\nplot(spa, asp = 1, col = \"brown\", cex = spe$Satr, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Brown trout\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Thth, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Grayling\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Alal, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Bleak\")\nlines(spa, col = \"light blue\")\nplot(spa, asp = 1, col = \"brown\", cex = spe$Titi, xlab = \"x (km)\", ylab = \"y (km)\", main = \"Tench\")\nlines(spa, col = \"light blue\")\n\n\n\n\n# Set aside the variable 'dfs' (distance from the source) for later use\ndfs &lt;- env[, 1]\n# Remove the 'dfs' variable from the env data frame\nenv2 &lt;- env[, -1]\n\n# Recode the slope variable (slo) into a factor (qualitative)\n# variable to show how these are handled in the ordinations\nslo2 &lt;- rep(\".very_steep\", nrow(env))\nslo2[env$slo &lt;= quantile(env$slo)[4]] &lt;- \".steep\"\nslo2[env$slo &lt;= quantile(env$slo)[3]] &lt;- \".moderate\"\nslo2[env$slo &lt;= quantile(env$slo)[2]] &lt;- \".low\"\nslo2 &lt;- factor(slo2, levels = c(\".low\", \".moderate\", \".steep\", \".very_steep\"))\ntable(slo2)\n## slo2\n##        .low   .moderate      .steep .very_steep \n##           8           8           6           7\n\n# Create an env3 data frame with slope as a qualitative variable\nenv3 &lt;- env2\nenv3$slo &lt;- slo2\n\n# Create two subsets of explanatory variables\n# Physiography (upstream-downstream gradient)\nenvtopo &lt;- env2[, c(1:3)]\nnames(envtopo)\n## [1] \"ele\" \"slo\" \"dis\"\n# Water quality\nenvchem &lt;- env2[, c(4:10)]\nnames(envchem)\n## [1] \"pH\"  \"har\" \"pho\" \"nit\" \"amm\" \"oxy\" \"bod\"\n\n# Hellinger-transform the species dataset\nlibrary(\"vegan\")\nspe.hel &lt;- decostand(spe, \"hellinger\")\n\n\nspe.hel\n\n\n# Redundancy analysis (RDA)\n# RDA of the Hellinger-transformed fish species data, constrained\n# by all the environmental variables contained in env3\nspe.rda &lt;- rda(spe.hel ~ ., env3) # Observe the shortcut formula\n\n\nspe.rda\nsummary(spe.rda) # Scaling 2 (default)\n\n\n## Canonical coefficients from the rda object\ncoef(spe.rda)\n\n\n## Unadjusted R^2 und Adjusted R^2\n(R2 &lt;- RsquareAdj(spe.rda))\n## $r.squared\n## [1] 0.7270922\n## \n## $adj.r.squared\n## [1] 0.5224114\n\n### Triplots of the rda results (lc scores)\n### Site scores as linear combinations of the environmental variables\n## dev.new(title = \"RDA scaling 1 and 2 + lc\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\n## Scaling 1\nplot(spe.rda, scaling = 1, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - lc scores\")\nspe.sc1 &lt;- scores(spe.rda, choices = 1:2, scaling = 1, display = \"sp\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\ntext(-0.75, 0.7, \"a\", cex = 1.5)\n## Scaling 2\nplot(spe.rda, display = c(\"sp\", \"lc\", \"cn\"), main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - lc scores\")\nspe.sc2 &lt;- scores(spe.rda, choices = 1:2, display = \"sp\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\ntext(-0.82, 0.55, \"b\", cex = 1.5)\n\n\n\n\n### Triplots of the rda results (wa scores)\n### Site scores as weighted averages (vegan's default)\n## Scaling 1 :  distance triplot\n## dev.new(title = \"RDA plot\", width = 12, height = 6, noRStudioGD = TRUE)\npar(mfrow = c(1, 2))\nplot(spe.rda, scaling = 1, main = \"Triplot RDA spe.hel ~ env3 - scaling 1 - wa scores\")\narrows(0, 0, spe.sc1[, 1] * 0.92, spe.sc1[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n## Scaling 2 (default) :  correlation triplot\nplot(spe.rda, main = \"Triplot RDA spe.hel ~ env3 - scaling 2 - wa scores\")\narrows(0, 0, spe.sc2[, 1] * 0.92, spe.sc2[, 2] * 0.92, length = 0, lty = 1, col = \"red\")\n\n\n\n\n## Select species with goodness-of-fit at least 0.6 in the\n## ordination plane formed by axes 1 and 2\nspe.good &lt;- goodness(spe.rda)\nsel.sp &lt;- which(spe.good[, 2] &gt;= 0.6)\nsel.sp\n## Satr Phph Chna Baba Albi Rham Legi Cyca Abbr Gyce Ruru Blbj Alal Anan \n##    2    3    7   11   12   16   17   19   21   23   24   25   26   27\n\n## Global test of the RDA result\nanova(spe.rda, permutations = how(nperm = 999))\n## Permutation test for rda under reduced model\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit + amm + oxy + bod, data = env3)\n##          Df Variance      F Pr(&gt;F)    \n## Model    12  0.36537 3.5523  0.001 ***\n## Residual 16  0.13714                  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## Tests of all canonical axes\nanova(spe.rda, by = \"axis\", permutations = how(nperm = 999))\n## Permutation test for rda under reduced model\n## Forward tests for axes\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ ele + slo + dis + pH + har + pho + nit + amm + oxy + bod, data = env3)\n##          Df Variance       F Pr(&gt;F)    \n## RDA1      1 0.228083 26.6105  0.001 ***\n## RDA2      1 0.053698  6.2649  0.008 ** \n## RDA3      1 0.032119  3.7473  0.357    \n## RDA4      1 0.023206  2.7074  0.769    \n## RDA5      1 0.008699  1.0149  1.000    \n## RDA6      1 0.007218  0.8421  1.000    \n## RDA7      1 0.004869  0.5681  1.000    \n## RDA8      1 0.002924  0.3412  1.000    \n## RDA9      1 0.002141  0.2498  1.000    \n## RDA10     1 0.001160  0.1353  1.000    \n## RDA11     1 0.000914  0.1066  1.000    \n## RDA12     1 0.000341  0.0397  1.000    \n## Residual 16 0.137139                   \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n### Partial RDA: effect of water chemistry, holding physiography\n### constant\n\n## Simple syntax; X and W may be in separate tables of quantitative\n## variables\n(spechem.physio &lt;- rda(spe.hel, envchem, envtopo))\n## Call: rda(X = spe.hel, Y = envchem, Z = envtopo)\n## \n##               Inertia Proportion Rank\n## Total          0.5025     1.0000     \n## Conditional    0.2087     0.4152    3\n## Constrained    0.1602     0.3189    7\n## Unconstrained  0.1336     0.2659   18\n## Inertia is variance \n## \n## Eigenvalues for constrained axes:\n##    RDA1    RDA2    RDA3    RDA4    RDA5    RDA6    RDA7 \n## 0.09136 0.04590 0.00928 0.00625 0.00387 0.00214 0.00142 \n## \n## Eigenvalues for unconstrained axes:\n##     PC1     PC2     PC3     PC4     PC5     PC6     PC7     PC8 \n## 0.04643 0.02071 0.01746 0.01326 0.00975 0.00588 0.00512 0.00400 \n## (Showing 8 of 18 unconstrained eigenvalues)\n\n\nsummary(spechem.physio)\n\n\n## Formula interface; X and W variables must be in the same\n## data frame\n(spechem.physio2 &lt;- rda(spe.hel ~ pH + har + pho + nit + amm + oxy + bod\n    + Condition(ele + slo + dis), data = env2))\n## Call: rda(formula = spe.hel ~ pH + har + pho + nit + amm + oxy + bod +\n## Condition(ele + slo + dis), data = env2)\n## \n##               Inertia Proportion Rank\n## Total          0.5025     1.0000     \n## Conditional    0.2087     0.4152    3\n## Constrained    0.1602     0.3189    7\n## Unconstrained  0.1336     0.2659   18\n## Inertia is variance \n## \n## Eigenvalues for constrained axes:\n##    RDA1    RDA2    RDA3    RDA4    RDA5    RDA6    RDA7 \n## 0.09136 0.04590 0.00928 0.00625 0.00387 0.00214 0.00142 \n## \n## Eigenvalues for unconstrained axes:\n##     PC1     PC2     PC3     PC4     PC5     PC6     PC7     PC8 \n## 0.04643 0.02071 0.01746 0.01326 0.00975 0.00588 0.00512 0.00400 \n## (Showing 8 of 18 unconstrained eigenvalues)\n\n## Test of the partial RDA, using the results with the formula\n## interface to allow the tests of the axes to be run\nanova(spechem.physio2, permutations = how(nperm = 999))\n## Permutation test for rda under reduced model\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ pH + har + pho + nit + amm + oxy + bod + Condition(ele + slo + dis), data = env2)\n##          Df Variance      F Pr(&gt;F)    \n## Model     7  0.16023 3.0836  0.001 ***\n## Residual 18  0.13362                  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nanova(spechem.physio2, permutations = how(nperm = 999), by = \"axis\")\n## Permutation test for rda under reduced model\n## Forward tests for axes\n## Permutation: free\n## Number of permutations: 999\n## \n## Model: rda(formula = spe.hel ~ pH + har + pho + nit + amm + oxy + bod + Condition(ele + slo + dis), data = env2)\n##          Df Variance       F Pr(&gt;F)   \n## RDA1      1 0.091363 12.3078  0.002 **\n## RDA2      1 0.045904  6.1839  0.013 * \n## RDA3      1 0.009277  1.2497  0.963   \n## RDA4      1 0.006250  0.8420  0.990   \n## RDA5      1 0.003868  0.5210  0.999   \n## RDA6      1 0.002145  0.2890  1.000   \n## RDA7      1 0.001424  0.1919  0.999   \n## Residual 18 0.133617                  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nVariation partitionig\n\n### Variation partitioning with two sets of explanatory variables\n\n## Explanation of fraction labels (two, three and four explanatory\n## matrices) with optional colours\npar(mfrow = c(1, 3), mar = c(1, 1, 1, 1))\nshowvarparts(2, bg = c(\"red\", \"blue\"))\nshowvarparts(3, bg = c(\"red\", \"blue\", \"yellow\"))\nshowvarparts(4, bg = c(\"red\", \"blue\", \"yellow\", \"green\"))\n\n\n\n\n### 1. Variation partitioning with all explanatory variables\n###    (except dfs)\n(spe.part.all &lt;- varpart(spe.hel, envchem, envtopo))\n## \n## Partition of variance in RDA \n## \n## Call: varpart(Y = spe.hel, X = envchem, envtopo)\n## \n## Explanatory tables:\n## X1:  envchem\n## X2:  envtopo \n## \n## No. of explanatory tables: 2 \n## Total variation (SS): 14.07 \n##             Variance: 0.50251 \n## No. of observations: 29 \n## \n## Partition table:\n##                      Df R.squared Adj.R.squared Testable\n## [a+c] = X1            7   0.60579       0.47439     TRUE\n## [b+c] = X2            3   0.41524       0.34507     TRUE\n## [a+b+c] = X1+X2      10   0.73410       0.58638     TRUE\n## Individual fractions                                    \n## [a] = X1|X2           7                 0.24131     TRUE\n## [b] = X2|X1           3                 0.11199     TRUE\n## [c]                   0                 0.23308    FALSE\n## [d] = Residuals                         0.41362    FALSE\n## ---\n## Use function 'rda' to test significance of fractions of interest\n\n## Plot of the partitioning results\npar(mfrow = c(1, 1))\nplot(spe.part.all,\n  digits = 2, bg = c(\"red\", \"blue\"),\n  Xnames = c(\"Chemistry\", \"Physiography\"),\n  id.size = 0.7\n)\n\n\n\n\n\n\n\n\n\n\nBorcard, Daniel, François Gillet, Pierre Legendre, u. a. 2011. Numerical ecology with R. Bd. 2. Springer.\n\n\nWildi, Otto. 2017. Data analysis in vegetation ecology. Cabi."
  },
  {
    "objectID": "stat5-8/Statistik7_Uebung.html#übung-7.1-rda-naturwissenschaftlich",
    "href": "stat5-8/Statistik7_Uebung.html#übung-7.1-rda-naturwissenschaftlich",
    "title": "Stat7: Übung",
    "section": "Übung 7.1: RDA (naturwissenschaftlich)",
    "text": "Übung 7.1: RDA (naturwissenschaftlich)\n\nDatensatz dave_sveg.csv (Vegetationsdaten) von Wildi (2017)\nDatensatz dave_ssit.csv (Umweltdaten) von Wildi (2017)\n\nFührt eine RDA mit allen in der Vorlesung gezeigten Schritten durch und interpretiert die Ergebnisse.\nVon den Umweltvariablen entfallen x.axis & y.axis\nFür die partielle RDA und die Varianzpartitionierung bildet zwei Gruppen:\n\nPhysiographie (Waterlev.max, Waterlev.av, Waterlev.min, log.peat.lev, log slope.deg)\nChemie (alle übrigen)\n\n\n\n\n\nWildi, Otto. 2017. Data analysis in vegetation ecology. Cabi."
  },
  {
    "objectID": "stat5-8/Statistik8_Demo.html#k-means-clustering",
    "href": "stat5-8/Statistik8_Demo.html#k-means-clustering",
    "title": "Stat8: Demo",
    "section": "k-means clustering",
    "text": "k-means clustering\n\n# Das Moordatenset sveg laden\nlibrary(\"readr\")\nsveg &lt;- read_delim(\"datasets/stat5-8/dave_sveg.csv\")\n\n# PCA und CA rechnen\nlibrary(\"vegan\")\npca &lt;- rda(sveg^0.25, scale = TRUE)\nca &lt;- cca(sveg^0.5)\n\n# k-means-Clustering mit 4 Gruppen durchführen\nkmeans.1 &lt;- kmeans(sveg, 4)\n\n\n# Clustering-Resultat in Ordinationsplots darstellen\nplot(ca, type = \"n\")\npoints(ca, display = \"sites\", pch=19, col = kmeans.1[[1]])\n\n\n\n\n# k-means Clustering mit 3 Clusters\nkmeans.2 &lt;- kmeans(sveg, 3)\nplot(pca, type = \"n\")\npoints(pca, display = \"sites\", pch=19, col = kmeans.2[[1]])\n\n\n\n\n# mit 3. Achse darstellen\nplot(pca, choices = c(1, 3), type = \"n\")\npoints(pca, choices = c(1, 3), display = \"sites\", pch = 19, col=kmeans.2[[1]])\n\n\n\n\n# k-means partitioning, 2 to 10 groups\nKM.cascade &lt;- cascadeKM(sveg,  inf.gr = 2, sup.gr = 10, iter = 100, criterion = \"ssi\")\nsummary(KM.cascade)\n##           Length Class  Mode     \n## partition 567    -none- numeric  \n## results    18    -none- numeric  \n## criterion   1    -none- character\n## size       90    -none- numeric\nKM.cascade$results\n##       2 groups     3 groups     4 groups     5 groups     6 groups     7 groups\n## SSE 1840.13571 1629.4399038 1488.2961538 1378.3369048 1286.5005411 1214.3219697\n## ssi    0.26103    0.2757656    0.3616487    0.2946243    0.3928967    0.4369993\n##         8 groups    9 groups    10 groups\n## SSE 1156.7314935 1101.552381 1053.1476190\n## ssi    0.3931095    0.445222    0.4591871\nKM.cascade$partition\n##    2 groups 3 groups 4 groups 5 groups 6 groups 7 groups 8 groups 9 groups\n## 1         2        2        4        3        3        4        7        5\n## 2         2        2        2        5        6        5        3        9\n## 3         2        2        4        3        3        4        7        5\n## 4         2        2        4        3        3        4        7        5\n## 5         2        2        2        5        6        5        3        9\n## 6         2        2        4        3        6        5        3        9\n## 7         2        2        4        3        3        4        7        5\n## 8         2        2        4        3        3        4        7        5\n## 9         2        2        4        3        3        4        7        5\n## 10        2        2        2        5        4        6        4        3\n## 11        2        2        4        3        3        4        7        5\n## 12        2        2        2        5        6        5        3        9\n## 13        2        2        2        5        4        6        4        2\n## 14        2        2        2        5        6        5        3        9\n## 15        2        2        2        5        6        5        3        9\n## 16        2        2        2        5        6        5        3        9\n## 17        2        2        2        5        4        6        4        3\n## 18        1        3        1        4        5        1        5        4\n## 19        2        2        2        5        6        5        3        9\n## 20        2        2        2        5        4        6        4        3\n## 21        2        2        4        3        3        4        7        3\n## 22        2        2        2        5        6        5        3        9\n## 23        1        3        1        4        5        1        5        4\n## 24        2        2        4        3        3        4        7        3\n## 25        2        2        4        3        3        4        7        3\n## 26        1        1        3        4        5        1        5        4\n## 27        2        2        2        5        4        6        4        2\n## 28        2        2        2        5        4        6        4        2\n## 29        2        2        2        5        4        6        4        2\n## 30        2        2        2        5        4        6        4        3\n## 31        1        3        1        2        2        2        1        8\n## 32        2        2        2        5        4        6        4        2\n## 33        2        2        2        5        4        6        4        3\n## 34        2        3        1        2        2        2        1        8\n## 35        1        3        1        2        2        2        1        8\n## 36        2        2        2        5        4        6        4        2\n## 37        2        2        2        5        4        6        4        2\n## 38        1        3        1        4        5        1        5        4\n## 39        1        1        3        1        1        7        6        1\n## 40        2        2        4        3        3        4        7        5\n## 41        1        1        3        1        1        7        2        7\n## 42        1        1        3        1        1        7        6        1\n## 43        1        1        3        1        1        7        2        7\n## 44        2        3        1        2        2        2        1        8\n## 45        1        3        1        4        5        1        5        4\n## 46        1        3        1        2        2        2        1        8\n## 47        2        3        1        2        2        2        1        2\n## 48        1        1        3        1        1        7        2        7\n## 49        1        3        1        2        2        2        1        8\n## 50        1        3        1        2        2        2        1        8\n## 51        1        1        3        4        5        3        8        6\n## 52        1        1        3        1        1        7        2        7\n## 53        1        1        3        1        1        7        8        6\n## 54        1        1        3        4        5        3        8        6\n## 55        1        1        3        4        5        3        8        6\n## 56        1        1        3        1        1        7        2        7\n## 57        1        1        3        4        5        3        8        6\n## 58        1        1        3        4        5        3        8        6\n## 59        1        1        3        4        5        1        5        4\n## 60        1        1        3        4        5        1        5        4\n## 61        1        3        1        4        5        1        5        4\n## 62        1        1        3        1        1        7        6        1\n## 63        1        1        3        4        5        3        8        6\n##    10 groups\n## 1          9\n## 2          2\n## 3          9\n## 4          9\n## 5          2\n## 6          2\n## 7          9\n## 8          9\n## 9          9\n## 10         6\n## 11         1\n## 12         2\n## 13         4\n## 14         2\n## 15         2\n## 16         2\n## 17         6\n## 18         1\n## 19         2\n## 20         6\n## 21         6\n## 22         2\n## 23         8\n## 24         6\n## 25         6\n## 26         8\n## 27         4\n## 28         4\n## 29         4\n## 30         6\n## 31        10\n## 32         4\n## 33         6\n## 34        10\n## 35        10\n## 36         4\n## 37         4\n## 38         1\n## 39         7\n## 40         9\n## 41         5\n## 42         7\n## 43         5\n## 44        10\n## 45         8\n## 46        10\n## 47         4\n## 48         5\n## 49        10\n## 50        10\n## 51         3\n## 52         5\n## 53         3\n## 54         3\n## 55         3\n## 56         5\n## 57         3\n## 58         3\n## 59         8\n## 60         8\n## 61         8\n## 62         7\n## 63         3\n\n# k-means visualisation\nplot(KM.cascade, sortg = TRUE)"
  },
  {
    "objectID": "stat5-8/Statistik8_Demo.html#agglomarative-clusteranalyse",
    "href": "stat5-8/Statistik8_Demo.html#agglomarative-clusteranalyse",
    "title": "Stat8: Demo",
    "section": "Agglomarative Clusteranalyse",
    "text": "Agglomarative Clusteranalyse\nmit Daten und Skripten aus Borcard u. a. (2011)\n\n# Daten laden\nload(\"datasets/stat5-8/Doubs.RData\")  \n\n\n# Remove empty site 8\nspe &lt;- spe[-8, ]\nenv &lt;- env[-8, ]\nspa &lt;- spa[-8, ]\nlatlong &lt;- latlong[-8, ]"
  },
  {
    "objectID": "stat5-8/Statistik8_Demo.html#dendogramme-berechnen-und-ploten",
    "href": "stat5-8/Statistik8_Demo.html#dendogramme-berechnen-und-ploten",
    "title": "Stat8: Demo",
    "section": "Dendogramme berechnen und ploten",
    "text": "Dendogramme berechnen und ploten\n\n## Hierarchical agglomerative clustering of the species abundance \nlibrary(\"cluster\")\n\n# Compute matrix of chord distance among sites\nspe.norm &lt;- decostand(spe, \"normalize\")\nspe.ch &lt;- vegdist(spe.norm, \"euc\")\n\n# Attach site names to object of class 'dist'\nattr(spe.ch, \"Labels\") &lt;- rownames(spe)\n\npar(mfrow = c(1, 1))\n\n# Compute single linkage agglomerative clustering\nspe.ch.single &lt;- hclust(spe.ch, method = \"single\")\n# Plot a dendrogram using the default options\nplot(spe.ch.single, labels = rownames(spe), main = \"Chord - Single linkage\")\n\n\n\n\n# Compute complete-linkage agglomerative clustering\nspe.ch.complete &lt;- hclust(spe.ch, method = \"complete\")\nplot(spe.ch.complete, labels = rownames(spe), main = \"Chord - Complete linkage\")\n\n\n\n\n# Compute UPGMA agglomerative clustering\nspe.ch.UPGMA &lt;- hclust(spe.ch, method = \"average\")\nplot(spe.ch.UPGMA, labels = rownames(spe), main = \"Chord - UPGMA\")\n\n\n\n\n# Compute centroid clustering\nspe.ch.centroid &lt;- hclust(spe.ch, method = \"centroid\")\nplot(spe.ch.centroid, labels = rownames(spe),  main = \"Chord - Centroid\")\n\n\n\n\n# Compute Ward's minimum variance clustering\nspe.ch.ward &lt;-hclust(spe.ch, method = \"ward.D2\")\nplot(spe.ch.ward, labels = rownames(spe),  main = \"Chord - Ward\")\n\n\n\n\n# Compute beta-flexible clustering using cluster::agnes()\n# beta = -0.1\nspe.ch.beta1 &lt;- agnes(spe.ch, method = \"flexible\", par.method = 0.55)\n# beta = -0.25\nspe.ch.beta2 &lt;- agnes(spe.ch, method = \"flexible\", par.method = 0.625)\n# beta = -0.5\nspe.ch.beta3 &lt;- agnes(spe.ch, method = \"flexible\", par.method = 0.75)\n# Change the class of agnes objects\nclass(spe.ch.beta1)\n## [1] \"agnes\" \"twins\"\nspe.ch.beta1 &lt;- as.hclust(spe.ch.beta1)\nclass(spe.ch.beta1)\n## [1] \"hclust\"\nspe.ch.beta2 &lt;- as.hclust(spe.ch.beta2)\nspe.ch.beta3 &lt;- as.hclust(spe.ch.beta3)\n\npar(mfrow = c(2, 2))\nplot(spe.ch.beta1, labels = rownames(spe), main = \"Chord - Beta-flexible (beta=-0.1)\")\nplot(spe.ch.beta2, labels = rownames(spe), main = \"Chord - Beta-flexible (beta=-0.25)\")\nplot(spe.ch.beta3,  labels = rownames(spe),  main = \"Chord - Beta-flexible (beta=-0.5)\")\n\n# Compute Ward's minimum variance clustering\nspe.ch.ward &lt;- hclust(spe.ch, method = \"ward.D2\")\nplot(spe.ch.ward, labels = rownames(spe), main = \"Chord - Ward\")"
  },
  {
    "objectID": "stat5-8/Statistik8_Demo.html#cophenetic-correlations",
    "href": "stat5-8/Statistik8_Demo.html#cophenetic-correlations",
    "title": "Stat8: Demo",
    "section": "Cophenetic correlations",
    "text": "Cophenetic correlations\n\n# Single linkage clustering\nspe.ch.single.coph &lt;- cophenetic(spe.ch.single)\ncor(spe.ch, spe.ch.single.coph)\n## [1] 0.599193\n\n# Complete linkage clustering\nspe.ch.comp.coph &lt;- cophenetic(spe.ch.complete)\ncor(spe.ch, spe.ch.comp.coph)\n## [1] 0.7655628\n\n# Average clustering\nspe.ch.UPGMA.coph &lt;- cophenetic(spe.ch.UPGMA)\ncor(spe.ch, spe.ch.UPGMA.coph)\n## [1] 0.8608326\n\n# Ward clustering\nspe.ch.ward.coph &lt;- cophenetic(spe.ch.ward)\ncor(spe.ch, spe.ch.ward.coph)\n## [1] 0.7998516\n\n# Shepard-like diagrams\npar(mfrow = c(2, 2))\nplot(spe.ch, spe.ch.single.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, sqrt(2)),\n  main = c(\"Single linkage\", paste(\"Cophenetic correlation =\",\n                                   round(cor(spe.ch, spe.ch.single.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.single.coph), col = \"red\")\n\nplot(spe.ch, spe.ch.comp.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, sqrt(2)),\n  main = c(\"Complete linkage\", paste(\"Cophenetic correlation =\",\n                                     round(cor(spe.ch, spe.ch.comp.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.comp.coph), col = \"red\")\n\nplot(spe.ch, spe.ch.UPGMA.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, sqrt(2)),\n  main = c(\"UPGMA\", paste(\"Cophenetic correlation =\",\n                          round( cor(spe.ch, spe.ch.UPGMA.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.UPGMA.coph), col = \"red\")\n\nplot(spe.ch, spe.ch.ward.coph,\n  xlab = \"Chord distance\", ylab = \"Cophenetic distance\",\n  asp = 1, xlim = c(0, sqrt(2)), ylim = c(0, max(spe.ch.ward$height)),\n  main = c(\"Ward\", paste(\"Cophenetic correlation =\", \n                         round(cor(spe.ch, spe.ch.ward.coph), 3))))\nabline(0, 1)\nlines(lowess(spe.ch, spe.ch.ward.coph), col = \"red\")"
  },
  {
    "objectID": "stat5-8/Statistik8_Demo.html#optimale-anzahl-cluster",
    "href": "stat5-8/Statistik8_Demo.html#optimale-anzahl-cluster",
    "title": "Stat8: Demo",
    "section": "Optimale Anzahl Cluster",
    "text": "Optimale Anzahl Cluster\n\nlibrary(\"labdsv\")\n## Select a dendrogram (Ward/chord) and apply three criteria\n## to choose the optimal number of clusters\n\n# Choose and rename the dendrogram (\"hclust\" object)\nhc &lt;- spe.ch.ward\n# hc &lt;- spe.ch.beta2\n# hc &lt;- spe.ch.complete\n\npar(mfrow = c(1, 2))\n\n# Average silhouette widths (Rousseeuw quality index)\nSi &lt;- numeric(nrow(spe))\nfor (k in 2:(nrow(spe) - 1))\n{\n  sil &lt;- silhouette(cutree(hc, k = k), spe.ch)\n  Si[k] &lt;- summary(sil)$avg.width\n}\n\nk.best &lt;- which.max(Si)\nplot(1:nrow(spe), Si, type = \"h\",\n  main = \"Silhouette-optimal number of clusters\",\n  xlab = \"k (number of clusters)\", ylab = \"Average silhouette width\")\naxis(1, k.best,paste(\"optimum\", k.best, sep = \"\\n\"), col = \"red\", \n  font = 2, col.axis = \"red\")\npoints(k.best,max(Si), pch = 16, col = \"red\",cex = 1.5)\n\n# Optimal number of clusters according to matrix correlation \n# statistic (Pearson)\n\n# Homemade function grpdist from Borcard et al. (2018)\ngrpdist &lt;- function(X)\n{\n  require(cluster)\n  veg &lt;- as.data.frame(as.factor(X))\n  distgr &lt;- daisy(veg, \"gower\")\n  distgr\n} \n\nkt &lt;- data.frame(k = 1:nrow(spe), r = 0)\nfor (i in 2:(nrow(spe) - 1)) \n{\n  gr &lt;- cutree(hc, i)\n  distgr &lt;- grpdist(gr)\n  mt &lt;- cor(spe.ch, distgr, method = \"pearson\")\n  kt[i, 2] &lt;- mt\n}\n\nk.best &lt;- which.max(kt$r)\nplot(kt$k,kt$r, type = \"h\",\n  main = \"Matrix correlation-optimal number of clusters\",\n  xlab = \"k (number of clusters)\", ylab = \"Pearson's correlation\")\naxis(1, k.best, paste(\"optimum\", k.best, sep = \"\\n\"),\n  col = \"red\", font = 2, col.axis = \"red\")\npoints(k.best, max(kt$r), pch = 16, col = \"red\", cex = 1.5)\n\n\n\n\n# Optimal number of clusters according as per indicator species\n# analysis (IndVal, Dufrene-Legendre; package: labdsv)\nIndVal &lt;- numeric(nrow(spe))\nng &lt;- numeric(nrow(spe))\nfor (k in 2:(nrow(spe) - 1))\n{\n  iva &lt;- indval(spe, cutree(hc, k = k), numitr = 1000)\n  gr &lt;- factor(iva$maxcls[iva$pval &lt;= 0.05])\n  ng[k] &lt;- length(levels(gr)) / k\n  iv &lt;- iva$indcls[iva$pval &lt;= 0.05]\n  IndVal[k] &lt;- sum(iv)\n}\n\nk.best &lt;- which.max(IndVal[ng == 1]) + 1\ncol3 &lt;- rep(1, nrow(spe))\ncol3[ng == 1] &lt;- 3\n\npar(mfrow = c(1, 2))\nplot(1:nrow(spe), IndVal, type = \"h\",\n  main = \"IndVal-optimal number of clusters\",\n  xlab = \"k (number of clusters)\", ylab = \"IndVal sum\", col = col3)\naxis(1,k.best,paste(\"optimum\", k.best, sep = \"\\n\"),\n  col = \"red\", font = 2, col.axis = \"red\")\n\npoints(which.max(IndVal),max(IndVal),pch = 16,col = \"red\",cex = 1.5)\ntext(28, 15.7, \"a\", cex = 1.8)\n\nplot(1:nrow(spe),ng,\n  type = \"h\",\n  xlab = \"k (number of clusters)\",\n  ylab = \"Ratio\",\n  main = \"Proportion of clusters with significant indicator species\",\n  col = col3)\naxis(1,k.best,paste(\"optimum\", k.best, sep = \"\\n\"),\n     col = \"red\", font = 2, col.axis = \"red\")\npoints(k.best,max(ng), pch = 16, col = \"red\", cex = 1.5)\ntext(28, 0.98, \"b\", cex = 1.8)"
  },
  {
    "objectID": "stat5-8/Statistik8_Demo.html#final-dendrogram-with-the-selected-clusters",
    "href": "stat5-8/Statistik8_Demo.html#final-dendrogram-with-the-selected-clusters",
    "title": "Stat8: Demo",
    "section": "Final dendrogram with the selected clusters",
    "text": "Final dendrogram with the selected clusters\n\n# Choose the number of clusters\nk &lt;- 4\n# Silhouette plot of the final partition\nspech.ward.g &lt;- cutree(spe.ch.ward, k = k)\nsil &lt;- silhouette(spech.ward.g, spe.ch)\nrownames(sil) &lt;- row.names(spe)\n\nplot(sil, main = \"Silhouette plot - Chord - Ward\", cex.names = 0.8, col = 2:(k + 1), nmax = 100)\n\n\n\n\n# Reorder clusters\nlibrary(\"gclus\")\nspe.chwo &lt;- reorder.hclust(spe.ch.ward, spe.ch)\n\n# Plot reordered dendrogram with group labels\npar(mfrow = c(1, 1))\nplot(spe.chwo, hang = -1, xlab = \"4 groups\", ylab = \"Height\", sub = \"\",\n  main = \"Chord - Ward (reordered)\", labels = cutree(spe.chwo, k = k))\nrect.hclust(spe.chwo, k = k)\n\n\n\n\n# Plot the final dendrogram with group colors (RGBCMY...)\n# Fast method using the additional hcoplot() function:\n# Usage:\n# hcoplot(tree = hclust.object,\n#   diss = dissimilarity.matrix,\n#   lab = object labels (default NULL),\n#   k = nb.clusters,\n#   title = paste(\"Reordered dendrogram from\",deparse(tree$call),\n#   sep=\"\\n\"))\nsource(\"stat5-8/hcoplot.R\")\nhcoplot(spe.ch.ward, spe.ch, lab = rownames(spe), k = 4)\n\n\n\n\n# Plot the Ward clusters on a map of the Doubs River\n# (see Chapter 2)\nsource(\"stat5-8/drawmap.R\")\ndrawmap(xy = spa, clusters = spech.ward.g, main = \"Four Ward clusters along the Doubs River\")"
  },
  {
    "objectID": "stat5-8/Statistik8_Demo.html#miscellaneous-graphical-outputs",
    "href": "stat5-8/Statistik8_Demo.html#miscellaneous-graphical-outputs",
    "title": "Stat8: Demo",
    "section": "Miscellaneous graphical outputs",
    "text": "Miscellaneous graphical outputs\n\n# konvertieren von \"hclust\" Objekt in ein Dendogram Objekt\ndend &lt;- as.dendrogram(spe.ch.ward)\n\n# Heat map of the dissimilarity matrix ordered with the dendrogram\nheatmap(as.matrix(spe.ch), Rowv = dend, symm = TRUE, margin = c(3, 3))\n\n\n\n\n# Ordered community table\n# Species are ordered by their weighted averages on site scores.\n# Dots represent absences.\nlibrary(\"vegan\")\nor &lt;- vegemite(spe, spe.chwo)\n##                                    \n##       32222222222  111111     1111 \n##       09876210543959876506473221341\n##  Icme 5432121......................\n##  Abbr 54332431.....1...............\n##  Blbj 54542432.1...1...............\n##  Anan 54432222.....111.............\n##  Gyce 5555443212...11..............\n##  Scer 522112221...21...............\n##  Cyca 53421321.....1111............\n##  Rham 55432333.....221.............\n##  Legi 35432322.1...1111............\n##  Alal 55555555352..322.............\n##  Chna 12111322.1...211.............\n##  Titi 53453444...1321111.21........\n##  Ruru 55554555121455221..1.........\n##  Albi 53111123.....2341............\n##  Baba 35342544.....23322.........1.\n##  Eslu 453423321...41111..12.1....1.\n##  Gogo 5544355421..242122111......1.\n##  Pefl 54211432....41321..12........\n##  Pato 2211.222.....3344............\n##  Sqce 3443242312152132232211..11.1.\n##  Lele 332213221...52235321.1.......\n##  Babl .1111112...32534554555534124.\n##  Teso .1...........11254........23.\n##  Phph .1....11...13334344454544455.\n##  Cogo ..............1123......2123.\n##  Satr .1..........2.123413455553553\n##  Thth .1............11.2......2134.\n## 29 sites, 27 species\n\n\n\n\n\n\n\nBorcard, Daniel, François Gillet, Pierre Legendre, u. a. 2011. Numerical ecology with R. Bd. 2. Springer.\n\n\nWildi, Otto. 2017. Data analysis in vegetation ecology. Cabi."
  },
  {
    "objectID": "stat5-8/Statistik8_Uebung.html#uebung-8.1-clusteranalyse-sozioökonomisch",
    "href": "stat5-8/Statistik8_Uebung.html#uebung-8.1-clusteranalyse-sozioökonomisch",
    "title": "Stat8: Übung",
    "section": "Uebung 8.1: Clusteranalyse (sozioökonomisch)",
    "text": "Uebung 8.1: Clusteranalyse (sozioökonomisch)\n\nDatensatz crime2.csv\n\nRaten von 7 Kriminalitätsformen pro 100000 Einwohner und Jahr für die Bundesstaaten der USA\n\n(a) Führt eine k-means- und eine agglomerative Clusteranalyse eurer Wahl durch.\n(b) Überlegt in beiden Fällen, wie viele Cluster sinnvoll sind (k-means z. B.visuelle Betrachtung einer PCA, agglomerative Clusteranalyse z. B. SilhouettePlot).\n(c) Abschliessend entscheidet euch für eine Clusterung und vergleicht die erhaltenen Cluster bezüglich der Kriminalitätsformen mittels ANOVA und interpretiert die Cluster entsprechend.\n\nHinweis: Wegen der sehr ungleichen Varianzen muss auf jeden Fall eine Standardisierung stattfinden, damit Distanzen zwischen den verschiedenen Kriminalitätsraten sinnvoll berechnet werden können"
  },
  {
    "objectID": "StatKons.html",
    "href": "StatKons.html",
    "title": "Statistik Konsolidierung",
    "section": "",
    "text": "In den vier Blöcken “Konsolidierung Statistik” repetieren die Studierenden die wichtigen Verfahren der Inferenz-Statistik. Beginnend mit den beiden Fällen, dem \\(Chi ^{2}/\\)-Test für die Assoziation zwischen zwei kategorialen Variablen und dem t-Test auf Unterschiede in Mittelwerten zwischen zwei Gruppen. Die Studierene wiederholen auch die Varianzanalyse (ANOVA) als Verallgemeinerung des t-Tests, einschliesslich post-hoc-Tests und mehrfaktorieller ANOVA. Weiter geht es mit der Repetition von komplexere Versionen linearer Regressionen und generalized linear models (GLMs), die einige wesentliche Limitierungen von linearen Modellen überwinden. Abschliessend bekommen die Studierenden eine Einführung in die Welt der Ordinationen z.B. PCA.\n\nStatstik Konsolidierung 1\nIn diesem Block beschäftigen wir uns mit folgenden Inhalten:\nWarum Statistik? Warum mit R? Genereller Ablauf einer statistischen Analyse \\(Chi ^{2}/\\)-Test- bzw. Fishers Test (für kategoriale Daten) t-Test (für metrische Daten)\n\n\nStatistik Konsolidierung 2\nIn Statistik Konsolidierung 2 bekommen die Studierenden eine Einführung in das Thema der Ordinationen, eine Technik der deskriptiven Statistik. Diese Methoden visualisiert die Strukturen in multivariaten Datensätzen via Dimensionsreduktion. Das Prinzip und die praktische Implementierung wird detailliert am Beispiel der Hauptkomponentenanalyse (PCA) erklärt. Danach folgen kurze Einführungen in weitere Ordinationstechniken für besondere Fälle, welche bestimmte Limitierungen der PCA überwinden, namentlich NMDS.\n\n\nStatistik Konsolidierung 3\nIn Statistik Konsolidierung 3 lernen die Studierenden die Idee, die Voraussetzungen und die praktische Anwendung „einfacher“ linearer Modelle in R. Im Fokus steht die Varianzanalyse (ANOVA) als Verallgemeinerung des t-Tests, einschliesslich post-hoc-Tests und mehrfaktorieller ANOVA. Dann geht es um die Voraussetzungen parametrischer (und nicht-parametrischer) Tests und Optionen, wenn diese verletzt sind.\n\n\nStatistik Konsolidierung 4\nIn Statistik Konsolidierung 4 kennen die Studierende alles Rund um das Thema der lineare Regressionen (inkl. nicht-lineare Regressionen). Die Studierenden bekommen eine Einführung in die generalized linear models (GLMs), eine Methode die einige wesentliche Limitierungen von linearen Modellen überwindenwerden können. Spezifisch werden wir uns die Poisson-Regressionen für Zähldaten und logistische Regression für ja/nein-Daten anschauen.\n\n\n\n\n\n\n\n\n\n\n\nTitel\n\n\nDatum\n\n\nLesson\n\n\nThema\n\n\n\n\n\n\nVorbereitung\n\n\n2023-11-13\n\n\nStatKons\n\n\nVorbereitung\n\n\n\n\nStatKons1: Demo\n\n\n2023-11-13\n\n\nStatKons1\n\n\nStatistik Grundlagen\n\n\n\n\nStatKons1: Open Datasets\n\n\n2023-11-13\n\n\nStatKons1\n\n\nStatistik Grundlagen\n\n\n\n\nStatKons2: Demo\n\n\n2023-11-14\n\n\nStatKons2\n\n\nPCA\n\n\n\n\nStatKons3: Demo\n\n\n2023-11-20\n\n\nStatKons3\n\n\nLM\n\n\n\n\nStatKons4: Demo\n\n\n2023-11-21\n\n\nStatKons4\n\n\nGLM\n\n\n\n\n\n\nKeine Treffer"
  },
  {
    "objectID": "statKons/StatKons0_Vorbereitung.html",
    "href": "statKons/StatKons0_Vorbereitung.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "Im Rahmen von Statistik Konsolidierung werden wir einige R Packages brauchen. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Analog der Vorbereitungsübung in Prepro1 könnt ihr mit nachstehendem Code alle noch nicht installierten packages automatisch installieren.\n\nipak &lt;- function(pkg) {\n  new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) {\n    install.packages(new.pkg, dependencies = TRUE)\n  }\n}\n\npackages &lt;- c(\n  \"ggplot2\", \"dplyr\", \"readr\", \"tibble\", \"datasauRuss\", \"readr\", \"labdsv\",  \n  \"vegan\", \"FactoMineR\", \"MASS\", \"rosetta\", \"multcomp\", \"ggfortify\", \n  \"hier.part\", \"MuMIn\"\n)\n\nipak(packages)"
  },
  {
    "objectID": "statKons/StatKons1_Demo_assoziationen.html#grundlagen",
    "href": "statKons/StatKons1_Demo_assoziationen.html#grundlagen",
    "title": "StatKons1: Demo",
    "section": "Grundlagen",
    "text": "Grundlagen\n\n# lade Daten\n# mehr Info darüber: https://cran.r-project.org/web/packages/explore/vignettes/explore_mtcars.html\ncars &lt;- mtcars\n\n# neue kategoriale variable\ncars &lt;-\n  as_tibble(cars) |&gt; # da \"nur\" data frame kann glimplse nichts damit anfangen\n  mutate(vs_cat = if_else(vs == 0, \"normal\", \"v-type\")) |&gt;\n  mutate(am_cat = if_else(am == 0, \"automatic\", \"manual\"))\n\n# betrachte die Daten\nsummary(cars)\n##       mpg             cyl             disp             hp       \n##  Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n##  1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n##  Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n##  Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n##  3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n##  Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n##       drat             wt             qsec             vs        \n##  Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n##  1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n##  Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n##  Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n##  3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n##  Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n##        am              gear            carb          vs_cat         \n##  Min.   :0.0000   Min.   :3.000   Min.   :1.000   Length:32         \n##  1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000   Class :character  \n##  Median :0.0000   Median :4.000   Median :2.000   Mode  :character  \n##  Mean   :0.4062   Mean   :3.688   Mean   :2.812                     \n##  3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000                     \n##  Max.   :1.0000   Max.   :5.000   Max.   :8.000                     \n##     am_cat         \n##  Length:32         \n##  Class :character  \n##  Mode  :character  \n##                    \n##                    \n## \nglimpse(cars)\n## Rows: 32\n## Columns: 13\n## $ mpg    &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.…\n## $ cyl    &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, …\n## $ disp   &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, …\n## $ hp     &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 1…\n## $ drat   &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.9…\n## $ wt     &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, …\n## $ qsec   &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, …\n## $ vs     &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, …\n## $ am     &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, …\n## $ gear   &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, …\n## $ carb   &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, …\n## $ vs_cat &lt;chr&gt; \"normal\", \"normal\", \"v-type\", \"v-type\", \"normal\", \"v-type\", \"no…\n## $ am_cat &lt;chr&gt; \"manual\", \"manual\", \"manual\", \"automatic\", \"automatic\", \"automa…\n\n# Assoziation zwischen Anzahl Zylinder und Motorentyp ()\ntable(cars$vs_cat, cars$am_cat) # Achtung: sieht aus, als gäbe es weniger V-Motoren bei den handgeschalteten Autos\n##         \n##          automatic manual\n##   normal        12      6\n##   v-type         7      7\n\n# lass und das überprüfen\n# achtung: bei chi-square test kommt es sehr auf das format drauf an (er erwartet entweder vektoren oder eine matrix!)\n\n# exkurs um in es in ein matrix form zu bringen\nchi_sq_matrix &lt;- xtabs(~ vs_cat + am_cat, data = as.data.frame(cars)) # in diesem Spezialfall haben wir keine Kriteriumsvariable\n\n# 1.version\nchi_sq &lt;- chisq.test(chi_sq_matrix)\n\n# 2. version\nchi_sq &lt;- chisq.test(cars$am_cat, cars$vs_cat)\n\n# resp. fisher exacter test verwenden, da 2x2 table\nfisher.test(chi_sq_matrix)\n## \n##  Fisher's Exact Test for Count Data\n## \n## data:  chi_sq_matrix\n## p-value = 0.4727\n## alternative hypothesis: true odds ratio is not equal to 1\n## 95 percent confidence interval:\n##   0.3825342 10.5916087\n## sample estimates:\n## odds ratio \n##   1.956055\n\n# fisher exakter test\nfisher.test(cars$am_cat, cars$vs_cat)\n## \n##  Fisher's Exact Test for Count Data\n## \n## data:  cars$am_cat and cars$vs_cat\n## p-value = 0.4727\n## alternative hypothesis: true odds ratio is not equal to 1\n## 95 percent confidence interval:\n##   0.3825342 10.5916087\n## sample estimates:\n## odds ratio \n##   1.956055\n\n# visualisieren: kudos goes to https://mgimond.github.io/Stats-in-R/ChiSquare_test.html#3_two_factor_classification\nOP &lt;- par(mfrow = c(1, 2), \"mar\" = c(1, 1, 3, 1))\nmosaicplot(chi_sq$observed, cex.axis = 1, main = \"Observed counts\")\nmosaicplot(chi_sq$expected, cex.axis = 1, main = \"Expected counts\\n(if class had no influence)\")\n\n\n\npar(OP)"
  },
  {
    "objectID": "statKons/StatKons1_Demo_assoziationen.html#möglicher-text-für-ergebnisse",
    "href": "statKons/StatKons1_Demo_assoziationen.html#möglicher-text-für-ergebnisse",
    "title": "StatKons1: Demo",
    "section": "Möglicher Text für Ergebnisse",
    "text": "Möglicher Text für Ergebnisse\nDer \\(\\chi^2\\)-Test sagt uns, dass das Art des Motors und Art des Fahrwerks statistisch nicht zusammenhängen. Es gibt keine signifikante Unterscheide zwischen den Variablen “VS” und “AM - Transmission” (p = .555). Der Fisher exacter Test bestätigt diesen Befund. Die Odds Ratio (OR) sagt uns hingegen - unter der Prämisse, dass “normale” Motoren eher mit automatischen und V-Motoren eher mit handgeschalteten Fahrwerken ausgestattet sind - dass die Chance doppelt so hoch ist, dass ein Auto mit “normalem” Motor automatisch geschaltet ist, als dies bei einem Auto mit V-Motor der Fall wäre\n\n# define dataset\ncars &lt;- mtcars\n\n# neue kategoriale variable\ncars &lt;-\n  as_tibble(cars) |&gt; # da \"nur\" data frame kann glimplse nichts damit anfangen\n  mutate(vs_cat = if_else(vs == 0, \"normal\", \"v-type\")) |&gt;\n  mutate(am_cat = if_else(am == 0, \"automatic\", \"manual\"))\n\n# bei t-Test immer zuerst visualisieren: in diesem Fall Boxplot mit Variablen Getriebe (v- vs. s-motor) und Anzahl Pferdestärke\nggplot2::ggplot(cars, aes(y = hp, x = vs_cat)) +\n  stat_boxplot(geom = \"errorbar\", width = .25) +\n  geom_boxplot() +\n  # geom_violin()+\n  labs(x = \"\\nBauform Motor\", y = \"Pferdestärke (PS)\\n\") +\n  mytheme\n\n\n\n\n# alternativ\nboxplot(cars$hp ~ cars$vs_cat) # sieht ganz ok aus, jedoch weist die variable \"normale Motoren\" deutlich eine grössere Streuung aus -&gt; siehe aov.1 und deren Modelgüte-Plots\n\n\n\n\n# Definiere Model: t-Test, wobei die AV metrisch (in unserem Fall eine Zählvariable) sein muss\nttest &lt;- t.test(cars$hp ~ cars$vs_cat)\naov.1 &lt;- aov(cars$hp ~ cars$vs_cat)\n\n# schaue Modellgüte an\npar(mfrow = c(2, 2))\nplot(aov.1)\n\n\n\n\n# zeige resultate\nttest\n## \n##  Welch Two Sample t-test\n## \n## data:  cars$hp by cars$vs_cat\n## t = 6.2908, df = 23.561, p-value = 1.82e-06\n## alternative hypothesis: true difference in means between group normal and group v-type is not equal to 0\n## 95 percent confidence interval:\n##   66.06161 130.66854\n## sample estimates:\n## mean in group normal mean in group v-type \n##            189.72222             91.35714\nsummary.lm(aov.1)\n## \n## Call:\n## aov(formula = cars$hp ~ cars$vs_cat)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -98.72 -25.61  -4.04  22.55 145.28 \n## \n## Coefficients:\n##                   Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)         189.72      11.35  16.720  &lt; 2e-16 ***\n## cars$vs_catv-type   -98.37      17.16  -5.734 2.94e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 48.14 on 30 degrees of freedom\n## Multiple R-squared:  0.5229, Adjusted R-squared:  0.507 \n## F-statistic: 32.88 on 1 and 30 DF,  p-value: 2.941e-06\n\n# wie würdet ihr nun die Ergebnisse darstellen?\n\n\n# für mehr infos here: https://cran.r-project.org/web/packages/datasauRus/vignettes/Datasaurus.html\n\nlibrary(\"datasauRus\")\n## Error in library(\"datasauRus\"): there is no package called 'datasauRus'\n\nif(requireNamespace(\"dplyr\")){\n  suppressPackageStartupMessages(library(\"dplyr\"))\n  dt &lt;- datasaurus_dozen |&gt; \n    group_by(dataset) |&gt; \n    summarize(\n      mean_x    = mean(x),\n      mean_y    = mean(y),\n      std_dev_x = sd(x),\n      std_dev_y = sd(y),\n      corr_x_y  = cor(x, y)\n    )\n}\n## Error in group_by(datasaurus_dozen, dataset): object 'datasaurus_dozen' not found\n\n# check data structure\nglimpse(dt)\n## function (x, df, ncp, log = FALSE)\n\n# plot two examples  \nif(requireNamespace(\"ggplot2\")){\n  library(\"ggplot2\")\n  \n  dt = filter(datasaurus_dozen, dataset == \"dino\" | dataset == \"slant_up\")\n  \n  ggplot(dt, aes(x=x, y=y, colour=dataset))+\n    geom_point()+\n    theme_bw() +\n    theme(legend.position = \"none\") +\n    facet_wrap(~dataset) +\n    geom_smooth(method = \"lm\", se = FALSE)\n}\n## Error in filter(datasaurus_dozen, dataset == \"dino\" | dataset == \"slant_up\"): object 'datasaurus_dozen' not found"
  },
  {
    "objectID": "statKons/StatKons1_Demo_open_datasets.html#in-r",
    "href": "statKons/StatKons1_Demo_open_datasets.html#in-r",
    "title": "StatKons1: Open Datasets",
    "section": "in R",
    "text": "in R\nIn R gibt es vordefinierte Datensätze, welche gut abrufbar sind. Beispiele sind:\n\nsleep\nUSAccDeaths\nUSArrests\nTitanic\n\n\ndata() # erzeugt eine Liste mit den Datensätzen, welche in R verfügbaren sind\nhead(chickwts)\n##   weight      feed\n## 1    179 horsebean\n## 2    160 horsebean\n## 3    136 horsebean\n## 4    227 horsebean\n## 5    217 horsebean\n## 6    168 horsebean\nstr(chickwts)\n## 'data.frame':    71 obs. of  2 variables:\n##  $ weight: num  179 160 136 227 217 168 108 124 143 140 ...\n##  $ feed  : Factor w/ 6 levels \"casein\",\"horsebean\",..: 2 2 2 2 2 2 2 2 2 2 ..."
  },
  {
    "objectID": "statKons/StatKons1_Demo_open_datasets.html#kaggle",
    "href": "statKons/StatKons1_Demo_open_datasets.html#kaggle",
    "title": "StatKons1: Open Datasets",
    "section": "Kaggle",
    "text": "Kaggle\nAuf Kaggle findet ihr öffentlich zugängliche Datensätze. Einzig was ihr tun müsst, ist euch registrieren. Beispiele sind:\n\n911\nfoodPreferences\nS.F. salaries\nTitanic\n…\n\n\n# Load packages and data\ndata_911 &lt;- read_delim(\"datasets/stat5-8/911.csv\", delim = \",\")\n## Error: 'datasets/stat5-8/911.csv' does not exist in current working directory ('C:/Users/luoe/Documents/Coding/Research Methods/HS23').\nstr(data_911)\n## Error in str(data_911): object 'data_911' not found"
  },
  {
    "objectID": "statKons/StatKons1_Demo_open_datasets.html#tidytuesday",
    "href": "statKons/StatKons1_Demo_open_datasets.html#tidytuesday",
    "title": "StatKons1: Open Datasets",
    "section": "Tidytuesday",
    "text": "Tidytuesday\nTidytuesday ist eine Plattform, in der wöchentlich - jeden Dienstag - einen öffentlich zugänglichen Datensatz publiziert. Dieses Projekt ist aus der R4DS Online Learning Community und dem R for Data Science Lehrbuch hervorgegangen. Beispiele sind:\n\nWomen in the Workplace\nDairy production & Consumption\nStar Wars Survey\nGlobal Coffee Chains\nMalaria Deaths\n…\n\nDownload via Github - 1. Möglichkeit\n\nGeht zum File, welches ihr herunterladen wollt\nKlickt auf das File (.csv, .xlsx etc.), um den Inhalt innerhalb der GitHub Benutzeroberfläche anzuzeigen\n\n\n\nKlickt mit der rechten Maustaste auf den Knopf “raw”\n\n\n\n(Ziel) Speichern unter…\n\nDownload via Github - 2. Möglichkeit\n\n# Beachtet dabei, dass ihr die URL zum originalen (raw) Datensatz habt\nstar_wars &lt;- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018/2018-05-14/week7_starwars.csv\", locale = readr::locale(encoding = \"latin1\")) # not working yet"
  },
  {
    "objectID": "statKons/StatKons1_Demo_open_datasets.html#opendata.swiss",
    "href": "statKons/StatKons1_Demo_open_datasets.html#opendata.swiss",
    "title": "StatKons1: Open Datasets",
    "section": "opendata.swiss",
    "text": "opendata.swiss\nAuf opendata.swiss sind offene, frei verfügbare Daten der Schweizerischen Behörden zu finden. opendata.swiss ist ein gemeinsames Projekt von Bund, Kantonen, Gemeinden und weiteren Organisationen mit einem staatlichen Auftrag. Beispiele sind:\n\nStatistik der Schweizer Städte\nBevölkerung nach Stadtquartier, Herkunft, Geschlecht und Alter\nAltpapiermengen\n…"
  },
  {
    "objectID": "statKons/StatKons1_Demo_open_datasets.html#open-data-katalog-stadt-zürich",
    "href": "statKons/StatKons1_Demo_open_datasets.html#open-data-katalog-stadt-zürich",
    "title": "StatKons1: Open Datasets",
    "section": "Open Data Katalog Stadt Zürich",
    "text": "Open Data Katalog Stadt Zürich\nAuf der Seite der Stadt Zürich Open Data findet ihr verschiedene Datensätze der Stadt Zürich. Spannend daran ist, dass die veröffentlichten Daten kostenlos und zur freien - auch kommerziellen - Weiterverwendung zur Verfügung. Beispiele sind:\n\nBevölkerung nach Bildungsstand, Jahr, Alter und Geschlecht seit 1970\nLuftqualitätsmessungen\nHäufigste Hauptsprachen\n…\n\n\n# lade die Datei \"Häufigste Sprachen\"\nurlfile = \"https://data.stadt-zuerich.ch/dataset/bfs_ste_bev_hauptsprachen_top50_od3011/download/BEV301OD3011.csv\"\n\ndat_lang &lt;- read_delim(url(urlfile), delim = \",\", col_names = T)\nhead(dat_lang)\n## # A tibble: 6 × 7\n##   Sprache        AntBev AnzBev untAntBevKI obAntBevKI untAnzBevKI obAnzBevKI\n##   &lt;chr&gt;           &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n## 1 Deutsch          74.5 259890        74         75        258160     261610\n## 2 Englisch         13.9  48660        13.5       14.3       47290      50030\n## 3 Italienisch       6.1  21240         5.8        6.4       20310      22170\n## 4 Französisch       4.8  16920         4.6        5.1       16090      17760\n## 5 Spanisch          4.4  15300         4.2        4.6       14490      16110\n## 6 Serbokroatisch    2.9  10130         2.7        3.1        9470      10800"
  },
  {
    "objectID": "statKons/StatKons2_Demo_PCA.html#pca-mit-sveg",
    "href": "statKons/StatKons2_Demo_PCA.html#pca-mit-sveg",
    "title": "StatKons2: Demo",
    "section": "PCA mit sveg",
    "text": "PCA mit sveg\n\n# Mit Beispieldaten aus Wildi (2013, 2017)\nlibrary(\"labdsv\")\nlibrary(\"readr\")\n\nsveg &lt;- read_delim(\"datasets/statKons/dave_sveg.csv\")\nhead(sveg)\nstr(sveg)\n# View(sveg)\n\n# PCA-----------\n# Deckungen Wurzeltransformiert, cor=T erzwingt Nutzung der Korrelationsmatrix\no.pca &lt;- labdsv::pca(sveg^0.25, cor = T)\no.pca2 &lt;- stats::prcomp(sveg^0.25)\n\n# Koordinaten im Ordinationsraum =&gt; Y\nhead(o.pca$scores)\nhead(o.pca2$x)\n\n# Korrelationen der Variablen mit den Ordinationsachsen\nhead(o.pca$loadings)\nhead(o.pca2$rotation)\n\n# Erklaerte Varianz der Achsen (sdev ist die Wurzel daraus)\n# früher gabs den Befehl summary()\n# jetzt von hand: standardabweichung im quadrat/totale varianz * 100 (um prozentwerte zu bekommen)\nE &lt;- o.pca$sdev^2 / o.pca$totdev * 100\nE[1:5] # erste fünf PCA\n\n# package stats funktioniert summary()\nsummary(o.pca2)\n\n# PCA-Plot der Lage der Beobachtungen im Ordinationsraum\nplot(o.pca$scores[, 1], o.pca$scores[, 2], type = \"n\", asp = 1, xlab = \"PC1\", ylab = \"PC2\")\npoints(o.pca$scores[, 1], o.pca$scores[, 2], pch = 18)\n\n\n\n\nplot(o.pca$scores[, 1], o.pca$scores[, 3], type = \"n\", asp = 1, xlab = \"PC1\", ylab = \"PC3\")\npoints(o.pca$scores[, 1], o.pca$scores[, 3], pch = 18)\n\n\n\n\n# Subjektive Auswahl von Arten zur Darstellung\nsel.sp &lt;- c(3, 11, 23, 39, 46, 72, 77, 96, 101, 119)\nsnames &lt;- names(sveg[, sel.sp])\nsnames\n\n# PCA-Plot der Korrelationen der Variablen (hier Arten) mit den Achsen\n# (hier reduction der observationen)\nx &lt;- o.pca$loadings[, 1]\ny &lt;- o.pca$loadings[, 2]\nplot(x, y, type = \"n\", asp = 1)\narrows(0, 0, x[sel.sp], y[sel.sp], length = 0.08)\ntext(x[sel.sp], y[sel.sp], snames, pos = 1, cex = 0.6)\n\n\n\n\n# hier gehts noch zu weiteren Beispielen zu PCA's:\n# https://stats.stackexchange.com/questions/102882/steps-done-in-factor-analysis-compared-to-steps-done-in-pca/102999#102999\n# https://stats.stackexchange.com/questions/222/what-are-principal-component-scores"
  },
  {
    "objectID": "statKons/StatKons2_Demo_PCA.html#pca-mit-beispiel-aus-skript",
    "href": "statKons/StatKons2_Demo_PCA.html#pca-mit-beispiel-aus-skript",
    "title": "StatKons2: Demo",
    "section": "PCA mit Beispiel aus Skript",
    "text": "PCA mit Beispiel aus Skript\n\n# Idee von Ordinationen aus Wildi p. 73-74\n\n# Für Ordinationen benötigen wir Matrizen, nicht Data.frames\n# Generieren von Daten\nraw &lt;- matrix(c(1, 2, 2.5, 2.5, 1, 0.5, 0, 1, 2, 4, 3, 1), nrow = 6)\ncolnames(raw) &lt;- c(\"spec.1\", \"spec.2\")\nrownames(raw) &lt;- c(\"r1\", \"r2\", \"r3\", \"r4\", \"r5\", \"r6\")\nraw\n\n# originale Daten im zweidimensionalen Raum\nx1 &lt;- raw[, 1]\ny1 &lt;- raw[, 2]\nz &lt;- c(rep(1:6))\n\n# Plot Abhängigkeit der Arten vom Umweltgradienten\nplot(c(x1, y1) ~ c(z, z),\n  type = \"n\", axes = T, bty = \"l\", las = 1, xlim = c(1, 6), ylim = c(0, 5),\n  xlab = \"Umweltgradient\", ylab = \"Deckung der Arten\"\n)\npoints(x1 ~ z, pch = 21, type = \"b\")\npoints(y1 ~ z, pch = 16, type = \"b\")\n\n\n\n\n# zentrierte Daten\ncent &lt;- scale(raw, scale = F)\nx2 &lt;- cent[, 1]\ny2 &lt;- cent[, 2]\n\n# rotierte Daten\no.pca &lt;- pca(raw)\nx3 &lt;- o.pca$scores[, 1]\ny3 &lt;- o.pca$scores[, 2]\n\n# Visualisierung der Schritte im Ordinationsraum\nplot(c(y1, y2, y3) ~ c(x1, x2, x3),\n  type = \"n\", axes = T, bty = \"l\", las = 1, xlim = c(-4, 4),\n  ylim = c(-4, 4), xlab = \"Art 1\", ylab = \"Art 2\"\n)\npoints(y1 ~ x1, pch = 21, type = \"b\", col = \"green\", lwd = 2)\npoints(y2 ~ x2, pch = 16, type = \"b\", col = \"red\", lwd = 2)\npoints(y3 ~ x3, pch = 17, type = \"b\", col = \"blue\", lwd = 2)\n\n\n\n\n# zusammengefasst:-------\n\n# Durchführung der PCA\npca &lt;- pca(raw)\n\n# Koordinaten im Ordinationsraum\npca$scores\n\n# Korrelationen der Variablen mit den Ordinationsachsen\npca$loadings\n\n# Erklärte Varianz der Achsen in Prozent\nE &lt;- pca$sdev^2 / pca$totdev * 100\nE\n\n### excurs für weitere r-packages####\n\n# mit prcomp, ein weiteres Package für Ordinationen\npca.2 &lt;- stats::prcomp(raw, scale = F)\nsummary(pca.2)\nplot(pca.2)\n\n\n\nbiplot(pca.2)\n\n\n\n\n# mit vegan, ein anderes Package für Ordinationen\npca.3 &lt;- vegan::rda(raw, scale = FALSE) # Die Funktion rda führt ein PCA aus an wenn nicht Umwelt- und Artdaten definiert werden\n# scores(pca.3,display=c(\"sites\"))\n# scores(pca.3,display=c(\"species\"))\nsummary(pca.3, axes = 0)\nbiplot(pca.3, scaling = 2)\nbiplot(pca.3, scaling = \"species\") # scaling=species macht das selbe wie scaling=2"
  },
  {
    "objectID": "statKons/StatKons2_Demo_PCA.html#ca-mit-sveg",
    "href": "statKons/StatKons2_Demo_PCA.html#ca-mit-sveg",
    "title": "StatKons2: Demo",
    "section": "CA mit sveg",
    "text": "CA mit sveg\n\nlibrary(\"vegan\")\nlibrary(\"FactoMineR\") # siehe Beispiel hier: https://www.youtube.com/watch?v=vP4korRby0Q\n\n# ebenfalls mit transformierten daten\no.ca &lt;- cca(sveg^0.5) # package vegan\no.ca1 &lt;- CA(sveg^0.5) # package FactoMineR\n\n\n\n\n# Arten (o) und Communities (+) plotten\nplot(o.ca)\n\n\n\nsummary(o.ca1)\n\n# Nur Arten plotten\nx &lt;- o.ca$CA$u[, 1]\ny &lt;- o.ca$CA$u[, 2]\nplot(x, y)\n\n\n\n\n# Anteilige Varianz, die durch die ersten beiden Achsen erklaert wird\no.ca$CA$eig[1:63] / sum(o.ca$CA$eig)"
  },
  {
    "objectID": "statKons/StatKons2_Demo_PCA.html#nmds-mit-sveg",
    "href": "statKons/StatKons2_Demo_PCA.html#nmds-mit-sveg",
    "title": "StatKons2: Demo",
    "section": "NMDS mit sveg",
    "text": "NMDS mit sveg\n\n# NMDS----------\n\n# Distanzmatrix als Start erzeugen\nlibrary(\"MASS\")\n\nmde &lt;- vegdist(sveg, method = \"euclidean\")\nmdm &lt;- vegdist(sveg, method = \"manhattan\")\n\n# Zwei verschiedene NMDS-Methoden\nset.seed(1) # macht man, wenn man bei einer Wiederholung exakt die gleichen Ergebnisse will\no.imds &lt;- isoMDS(mde, k = 2) # mit K = Dimensionen\nset.seed(1)\no.mmds &lt;- metaMDS(mde, k = 3) # scheint nicht mit 2 Dimensionen zu konvergieren\n\nplot(o.imds$points)\nplot(o.mmds$points)\n\n# Stress =  Abweichung der zweidimensionalen NMDS-Loesung von der originalen Distanzmatrix\nstressplot(o.imds, mde)\nstressplot(o.mmds, mde)"
  },
  {
    "objectID": "statKons/StatKons2_Demo_PCA.html#pca-mit-mtcars",
    "href": "statKons/StatKons2_Demo_PCA.html#pca-mit-mtcars",
    "title": "StatKons2: Demo",
    "section": "PCA mit mtcars",
    "text": "PCA mit mtcars\n\n# Beispiel inspiriert von Luke Hayden: https://www.datacamp.com/community/tutorials/pca-analysis-r\n\n# Ausgangslage: viel zusammenhängende Variablen\n# Ziel: Reduktion der Variablenkomplexität\n# WICHTIG hier: Datenformat muss Wide sein! Damit die Matrixmultiplikation gemacht werden kann\n\n# lade Datei\ncars &lt;- mtcars\n\n# Korrelationen\ncor &lt;- cor(cars[, c(1:7, 10, 11)])\ncor[abs(cor) &lt; .7] &lt;- 0\ncor\n\n# definiere Datei für PCA\ncars &lt;- mtcars[, c(1:7, 10, 11)]\n\n# pca\n# achtung unterschiedliche messeinheiten, wichtig es muss noch einheitlich transfomiert werden\nlibrary(\"FactoMineR\") # siehe Beispiel hier: https://www.youtube.com/watch?v=vP4korRby0Q\no.pca &lt;- PCA(cars, scale.unit = TRUE) # entweder korrelations oder covarianzmatrix\n\n# schaue output an\nsummary(o.pca) # generiert auch automatische plots"
  },
  {
    "objectID": "statKons/StatKons2_Demo_PCA.html#ca-mit-mtcars",
    "href": "statKons/StatKons2_Demo_PCA.html#ca-mit-mtcars",
    "title": "StatKons2: Demo",
    "section": "CA mit mtcars",
    "text": "CA mit mtcars\n\n# ebenfalls mit transformierten daten\no.ca &lt;- vegan::cca(cars)\no.ca1 &lt;- FactoMineR::CA(cars) # blau: auots, rot: variablen\n\n\n\n\n# plotten (schwarz: autos, rot: variablen)\nplot(o.ca)\n\n\n\nsummary(o.ca)\nsummary(o.ca1)\n\n# Nur autos plotten; wieso?\nx &lt;- o.ca$CA$u[, 1]\ny &lt;- o.ca$CA$u[, 2]\nplot(x, y)\n\n\n\n\n# Anteilige Varianz, die durch die ersten beiden Achsen erklaert wird\no.ca$CA$eig[1:8] / sum(o.ca$CA$eig)"
  },
  {
    "objectID": "statKons/StatKons2_Demo_PCA.html#nmds-mit-mtcars",
    "href": "statKons/StatKons2_Demo_PCA.html#nmds-mit-mtcars",
    "title": "StatKons2: Demo",
    "section": "NMDS mit mtcars",
    "text": "NMDS mit mtcars\n\n# Distanzmatrix als Start erzeugen\n\nmde &lt;- vegan::vegdist(cars, method = \"euclidean\")\nmdm &lt;- vegan::vegdist(cars, method = \"manhattan\")\n\n# Zwei verschiedene NMDS-Methoden\nset.seed(1) # macht man, wenn man bei einer Wiederholung exakt die gleichen Ergebnisse will\no.mde.mass &lt;- MASS::isoMDS(mde, k = 2) # mit K = Dimensionen\no.mdm.mass &lt;- MASS::isoMDS(mdm)\n\nset.seed(1)\no.mde.vegan &lt;- vegan::metaMDS(mde, k = 1) # scheint nicht mit 2 Dimensionen zu konvergieren\no.mdm.vegan &lt;- vegan::metaMDS(mdm, k = 2)\n\n# plot euclidean distance\nplot(o.mde.mass$points)\n\n\n\nplot(o.mde.vegan$points)\n\n\n\n\n# plot manhattan distance\nplot(o.mdm.mass$points)\n\n\n\nplot(o.mdm.vegan$points)\n\n\n\n\n# Stress =  Abweichung der zweidimensionalen NMDS-Loesung von der originalen Distanzmatrix\nvegan::stressplot(o.mde.vegan, mde)\n\n\n\nvegan::stressplot(o.mde.mass, mde)\n\n\n\n\n\n\n\n\n\n\nWildi, Otto. 2017. Data analysis in vegetation ecology. Cabi."
  },
  {
    "objectID": "statKons/StatKons3_Demo_LM.html#einfaktorielle-anova",
    "href": "statKons/StatKons3_Demo_LM.html#einfaktorielle-anova",
    "title": "StatKons3: Demo",
    "section": "Einfaktorielle ANOVA",
    "text": "Einfaktorielle ANOVA\n\n# für mehr infos\n# https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/mtcars.html\n\ncars &lt;- mtcars |&gt;\n  mutate(cyl = as.factor(cyl)) |&gt;\n  slice(-31) # lösch die 31ste Zeile\n\n# Alternativ ginge auch das\ncars[-31, ]\n\n# schaue daten zuerst mal an\n# 1. Responsevariable\nhist(cars$hp) # nur sinnvoll bei grossem n\nboxplot(cars$hp)\n\n# 2. Responsevariable ~ Prediktorvariable\ntable(cars$cyl) # mögliches probel, da n's unterschiedlich gross\n\nboxplot(cars$hp ~ cars$cyl) # varianzheterogentität weniger das problem,\n# aber normalverteilung der residuen problematisch\n\n# definiere das modell für eine ein-faktorielle anova\naov.1 &lt;- aov(log10(hp) ~ cyl, data = cars)\n\n# 3. Schaue Modelgüte an\npar(mfrow = c(2, 2))\nplot(aov.1)\n\n# 4. Schaue output an und ordne es ein\nsummary.lm(aov.1)\n\n# 5. bei meheren Kategorien wende einen post-hoc Vergleichstest an\nTukeyHSD(aov.1)\n\n# 6. Ergebnisse passend darstellen\nlibrary(\"multcomp\")\n\n# erstens die signifikanten Unterschiede mit Buchstaben versehen\nletters &lt;- multcomp::cld(multcomp::glht(aov.1, linfct = multcomp::mcp(cyl = \"Tukey\"))) # Achtung die kategoriale\n# Variable (unsere unabhängige Variable \"cyl\") muss als Faktor\n# definiert sein z.B. as.factor()\n\n# einfachere Variante\nboxplot(hp ~ cyl, data = cars)\nmtext(letters$mcletters$Letters, at = 1:3)\n\n# schönere Variante :)\nggplot(cars, aes(x = cyl, y = hp)) +\n  stat_boxplot(geom = \"errorbar\", width = .5) +\n  geom_boxplot(size = 1) +\n  annotate(\"text\", x = 1, y = 350, label = \"a\", size = 7) +\n  annotate(\"text\", x = 2, y = 350, label = \"b\", size = 7) +\n  annotate(\"text\", x = 3, y = 350, label = \"c\", size = 7) +\n  labs(x = \"\\nAnzahl Zylinder\", y = \"Pferdestärke\") +\n  mytheme\n\n# Plot exportieren\nggsave(\n  filename = \"statKons/distill-preview.png\",\n  device = \"png\"\n) # hier kann man festlegen, was für ein Bildformat\n# exportiert werden möchte\n\n# Sind die Voraussetzungen für eine Anova verletzt, überprüfe alternative\n# nicht-parametische Tests z.B. oneway-Test mit Welch-korrektur für ungleiche\n# Varianzen (Achtung auch dieser Test hat Voraussetzungen -&gt; siehe Skript XY)\nlibrary(\"rosetta\")\nwelch1 &lt;- oneway.test(hp ~ cyl, data = cars, var.equal = FALSE)\nrosetta::posthocTGH(cars$hp, cars$cyl, method = \"games-howell\")"
  },
  {
    "objectID": "statKons/StatKons3_Demo_LM.html#mehrfaktorielle-anova",
    "href": "statKons/StatKons3_Demo_LM.html#mehrfaktorielle-anova",
    "title": "StatKons3: Demo",
    "section": "Mehrfaktorielle ANOVA",
    "text": "Mehrfaktorielle ANOVA\n\n\n\n\n## \n## Call:\n## aov(formula = hp ~ cyl * am + wt, data = cars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -33.834 -14.280  -7.418   7.120  60.282 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)   32.743     31.636   1.035 0.310980    \n## cyl6          22.556     20.859   1.081 0.290274    \n## cyl8          88.818     20.463   4.340 0.000222 ***\n## am            13.002     19.952   0.652 0.520811    \n## wt            17.691      9.409   1.880 0.072272 .  \n## cyl6:am       14.626     27.392   0.534 0.598276    \n## cyl8:am       73.356     33.194   2.210 0.036894 *  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 26.73 on 24 degrees of freedom\n## Multiple R-squared:  0.8428, Adjusted R-squared:  0.8035 \n## F-statistic: 21.45 on 6 and 24 DF,  p-value: 1.511e-08"
  },
  {
    "objectID": "statKons/StatKons3_Demo_LM.html#einfache-regression",
    "href": "statKons/StatKons3_Demo_LM.html#einfache-regression",
    "title": "StatKons3: Demo",
    "section": "Einfache Regression",
    "text": "Einfache Regression\n\n# inspiriert von Simon Jackson: http s://drsimonj.svbtle.com/visualising-residuals\ncars &lt;- mtcars |&gt;\n  # ändere die unabhängige Variable mpg in 100Km/L\n  mutate(kml = (235.214583 / mpg)) # mehr Infos hier: https://www.asknumbers.com/mpg-to-L100km.aspx\n# |&gt;  # klone data set\n# slice(-31) # # lösche Maserrati und schaue nochmals Modelfit an\n\n#############\n## 1.Daten anschauen\n############\n\n# Zusammenhang mal anschauen\n# Achtung kml = 100km pro Liter\nplot(hp ~ kml, data = cars)\n\n\n\n\n# Responsevariable anschauen\nboxplot(cars$hp)\n\n\n\n\n# Korrelationen uv + av anschauen\n# Reihenfolge spielt hier keine Rolle, wieso?\ncor(cars$kml, cars$hp) # hängen stark zusammen\n## [1] 0.7629477\n\n###################\n# 2. Modell definieren: einfache regression\n##################\nmodel &lt;- lm(hp ~ kml, data = cars)\nsummary.lm(model)\n## \n## Call:\n## lm(formula = hp ~ kml, data = cars)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -75.22 -25.52 -13.31  30.92 148.69 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  -26.021     27.880  -0.933    0.358    \n## kml           13.540      2.095   6.464 3.84e-07 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 45.06 on 30 degrees of freedom\n## Multiple R-squared:  0.5821, Adjusted R-squared:  0.5682 \n## F-statistic: 41.79 on 1 and 30 DF,  p-value: 3.839e-07\n\n###############\n# 3.Modeldiagnostik und ggf. Anpassungen ans Modell oder ähnliches\n###############\n\n# semi schöne Ergebnisse\nlibrary(\"ggfortify\")\nggplot2::autoplot(model) + mytheme # gitb einige Extremwerte =&gt; was tun? (Eingabe/Einlesen\n\n\n\n# überprüfen, Transformation, Extremwerte nur ausschliessen mit guter Begründung)\n\n# erzeuge vorhergesagte Werte und Residualwerte\ncars$predicted &lt;- predict(model) # bilde neue Variable mit geschätzten y-Werten\ncars$residuals &lt;- residuals(model)\n\n# schaue es dir an, sieht man gut was die Residuen sind\nd &lt;- cars |&gt;\n  dplyr::select(hp, kml, predicted, residuals)\n\n# schauen wir es uns an\nhead(d, 4)\n##                 hp      kml predicted residuals\n## Mazda RX4      110 11.20069  125.6411 -15.64107\n## Mazda RX4 Wag  110 11.20069  125.6411 -15.64107\n## Datsun 710      93 10.31643  113.6678 -20.66776\n## Hornet 4 Drive 110 10.99134  122.8063 -12.80626\n\n# visualisiere residuen\nggplot(d, aes(x = kml, y = hp)) +\n  # verbinde beobachtete werte mit vorausgesagte werte\n  geom_segment(aes(xend = kml, yend = predicted)) +\n  geom_point() + # Plot the actual points\n  geom_point(aes(y = predicted), shape = 4) + # plot geschätzten y-Werten\n  # geom_line(aes(y = predicted), color = \"lightgrey\") # alternativ code\n  geom_smooth(method = \"lm\", se = FALSE, color = \"lightgrey\") +\n  # Farbe wird hier zu den redisuen gemapped, abs(residuals) wegen negativen zahlen\n  geom_point(aes(color = abs(residuals))) +\n  # Colors to use here (für mehrere farben verwende color_gradient2)\n  scale_color_continuous(low = \"blue\", high = \"red\") +\n  scale_x_continuous(limits = c(0, 40)) +\n  scale_y_continuous(limits = c(0, 300)) +\n  guides(color = \"none\") + # Color legende entfernen\n  labs(x = \"\\nVerbraucht in Liter pro 100km\", y = \"Motorleistung in PS\\n\") +\n  mytheme\n\n\n\n\n##########\n# 4. plotte Ergebnis\n##########\nggplot(d, aes(x = kml, y = hp)) +\n  geom_point(size = 4) +\n  # geom_point(aes(y = predicted), shape = 1, size = 4) +\n  # plot regression line\n  geom_smooth(method = \"lm\", se = FALSE, color = \"lightgrey\") +\n  # intercept\n  geom_line(aes(y = mean(hp)), color = \"blue\") +\n  mytheme"
  },
  {
    "objectID": "statKons/StatKons3_Demo_LM.html#multiple-regression",
    "href": "statKons/StatKons3_Demo_LM.html#multiple-regression",
    "title": "StatKons3: Demo",
    "section": "Multiple Regression",
    "text": "Multiple Regression\n\n# Select data\ncars &lt;- mtcars |&gt;\n  slice(-31) |&gt;\n  mutate(kml = (235.214583 / mpg)) |&gt;\n  dplyr::select(kml, hp, wt, disp)\n\n################\n# 1. Multikollinearitüt überprüfen\n# Korrelation zwischen Prädiktoren kleiner .7\ncor &lt;- cor(cars[, -2])\ncor[abs(cor) &lt; 0.7] &lt;- 0\ncor #\n##            kml        wt      disp\n## kml  1.0000000 0.8912658 0.8786238\n## wt   0.8912658 1.0000000 0.8878515\n## disp 0.8786238 0.8878515 1.0000000\n\n##### info zu Variablen\n# wt = gewicht\n# disp = hubraum\n\n###############\n# 2. Responsevariable + Kriteriumsvariable anschauen\n##############\n# was würdet ihr tun?\n\n############\n# 3. Definiere das Model\n############\nmodel1 &lt;- lm(hp ~ kml + wt + disp, data = cars)\nmodel2 &lt;- lm(hp ~ kml + wt, data = cars)\nmodel3 &lt;- lm(log10(hp) ~ kml + wt, data = cars)\n\n#############\n# 4. Modeldiagnostik\n############\n\nggplot2::autoplot(model1)\n\n\n\nggplot2::autoplot(model2) # besser, immernoch nicht ok =&gt; transformation? vgl. model3\n\n\n\nggplot2::autoplot(model3)\n\n\n\n\n############\n# 5. Modellfit vorhersagen: wie gut sagt mein Modell meine Daten vorher\n############\n\n# es gibt 3 Mögliche Wege\n\n# gebe dir predicted values aus für model2 (für vorzeigebeispiel einfacher :)\n# gibts unterschidliche varianten die predicted values zu berechnen\n# 1. default funktion predict(model) verwenden\ncars$predicted &lt;- predict(model2)\n\n# 2. datensatz selber zusammenstellen (nicht empfohlen): wichtig, die\n# prädiktoren müssen denselben\n# namen haben wie im Model\n# besser mit Traindata von Beginn an mehr Infos hier: https://www.r-bloggers.com/using-linear-regression-to-predict-energy-output-of-a-power-plant/\n\nnew.data &lt;- tibble(\n  kml = sample(seq(6.9384, 22.61, .3), 31),\n  wt = sample(seq(1.513, 5.424, 0.01), 31),\n  disp = sample(seq(71.1, 472.0, .1), 31)\n)\ncars$predicted_own &lt;- predict(model2, newdata = new.data)\n\n# 3. train_test_split durchführen (empfohlen) muss jedoch von beginn an bereits\n# gemacht werden - Logik findet ihr hier: https://towardsdatascience.com/train-test-split-and-cross-validation-in-python-80b61beca4b6 oder https://towardsdatascience.com/6-amateur-mistakes-ive-made-working-with-train-test-splits-916fabb421bb\n# beispiel hier: https://ijlyttle.github.io/model_cv_selection.html\ncars &lt;- mtcars |&gt;\n  mutate(id = row_number()) |&gt; # für das mergen der Datensätze\n  mutate(kml = (235.214583 / mpg)) |&gt;\n  dplyr::select(kml, hp, wt, disp, id)\n\ntrain_data &lt;- cars |&gt;\n  dplyr::sample_frac(.75) # für das Modellfitting\n\ntest_data &lt;- dplyr::anti_join(cars, train_data, by = \"id\") # für den Test mit predict\n\n# erstelle das Modell und \"trainiere\" es auf den train Datensatz\nmodel2_train &lt;- lm(hp ~ kml + wt, data = train_data)\n\n# mit dem \"neuen\" Datensatz wird das Model überprüft ob guter Modelfit\ntrain_data$predicted_test &lt;- predict(model2_train, newdata = test_data)\n\n# Residuen\ntrain_data$residuals &lt;- residuals(model2_train)\nhead(train_data)\n##                     kml  hp    wt  disp id predicted_test residuals\n## Toyota Corona  10.94021  97 2.465 120.1 21      120.16353 -30.77725\n## Mazda RX4 Wag  11.20069 110 2.875 160.0  2      152.70869 -17.28373\n## Ford Pantera L 14.88700 264 3.170 351.0 29       72.68594  81.87026\n## Merc 450SL     13.59622 180 3.730 275.8 13       86.78893  24.52174\n## Merc 230       10.31643  95 3.150 140.8  9      132.96015 -15.24544\n## Duster 360     16.44857 245 3.570 360.0  7      101.55274  42.72449\n\n# weiterführende Infos zu \"machine learning\" Idee hier: https://stat-ata-asu.github.io/MachineLearningToolbox/regression-models-fitting-them-and-evaluating-their-performance.html\n# wichtigstes Packet in dieser Hinsicht ist \"caret\": https://topepo.github.io/caret/\n# beste Philosophie ist tidymodels: https://www.tidymodels.org\n\n#----------------\n# Schnelle variante mit broom\nd &lt;- lm(hp ~ kml + wt + disp, data = cars) |&gt;\n  broom::augment()\n\nhead(d)\n## # A tibble: 6 × 11\n##   .rownames            hp   kml    wt  disp .fitted .resid   .hat .sigma .cooksd\n##   &lt;chr&gt;             &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n## 1 Mazda RX4           110  11.2  2.62   160    123. -12.7  0.0478   41.4 1.29e-3\n## 2 Mazda RX4 Wag       110  11.2  2.88   160    114.  -4.21 0.0456   41.4 1.34e-4\n## 3 Datsun 710           93  10.3  2.32   108    103.  -9.87 0.0758   41.4 1.31e-3\n## 4 Hornet 4 Drive      110  11.0  3.22   258    142. -31.6  0.0958   41.0 1.77e-2\n## 5 Hornet Sportabout   175  12.6  3.44   360    191. -16.3  0.210    41.3 1.35e-2\n## 6 Valiant             105  13.0  3.46   225    138. -33.5  0.0445   40.9 8.22e-3\n## # ℹ 1 more variable: .std.resid &lt;dbl&gt;\n\nggplot(d, aes(x = kml, y = hp)) +\n  geom_segment(aes(xend = kml, yend = .fitted), alpha = .2) +\n  geom_point(aes(color = .resid)) +\n  scale_color_gradient2(low = \"blue\", mid = \"white\", high = \"red\") +\n  guides(color = \"none\") +\n  geom_point(aes(y = .fitted), shape = 4) +\n  scale_y_continuous(limits = c(0, 350)) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"lightgrey\") +\n  mytheme\n\n\n\n\n############\n# 6. Modellvereinfachung\n############\n\n# Varianzpartitionierung\nlibrary(\"hier.part\")\n## Error in library(\"hier.part\"): there is no package called 'hier.part'\ncars &lt;- mtcars |&gt;\n  mutate(kml = (235.214583 / mpg)) |&gt;\n  select(-mpg)\n\nnames(cars) # finde \"position\" deiner Responsevariable\n##  [1] \"cyl\"  \"disp\" \"hp\"   \"drat\" \"wt\"   \"qsec\" \"vs\"   \"am\"   \"gear\" \"carb\"\n## [11] \"kml\"\n\nX = cars[, -3] # definiere all die Prädiktorvariablen im Model (minus Responsevar)\n\n# dauert ein paar sekunden\nhier.part(cars$hp, X, gof = \"Rsqu\")\n## Error in hier.part(cars$hp, X, gof = \"Rsqu\"): could not find function \"hier.part\"\n\n# alle Modelle miteinander vergleichen mit dredge Befehl: geht nur bis\n# maximal 15 Variablen\nmodel2 &lt;- lm(hp ~ ., data = cars)\nlibrary(\"MuMIn\")\noptions(na.action = \"na.fail\")\nallmodels &lt;- dredge(model2)\nhead(allmodels)\n## Global model call: lm(formula = hp ~ ., data = cars)\n## ---\n## Model selection table \n##     (Intrc)  carb   cyl   disp   drat   kml   qsec    vs     wt df   logLik\n## 523   53.17 23.58       0.5166                           -28.59  5 -145.394\n## 779   42.55 25.02       0.5653                     11.94 -31.67  6 -145.015\n## 527   38.82 22.53 4.368 0.4560                           -27.27  6 -145.126\n## 539   90.56 24.30       0.5030 -8.159                    -30.75  6 -145.162\n## 139  176.50 16.79       0.2999              -8.193               5 -146.709\n## 587   48.91 22.98       0.4979        1.462              -31.20  6 -145.254\n##      AICc delta weight\n## 523 303.1  0.00  0.418\n## 779 305.4  2.29  0.133\n## 527 305.6  2.52  0.119\n## 539 305.7  2.59  0.115\n## 139 305.7  2.63  0.112\n## 587 305.9  2.77  0.104\n## Models ranked by AICc(x)\n\n# Wichtigkeit der Prädiktoren\nMuMIn::importance(allmodels)\n## Error: 'importance' is defunct.\n## Use 'sw' instead.\n## See help(\"Defunct\")\n\n# mittleres Model\navgmodel &lt;- MuMIn::model.avg(get.models(allmodels, subset = TRUE))\nsummary(avgmodel)\n## \n## Call:\n## model.avg(object = get.models(allmodels, subset = TRUE))\n## \n## Component model call: \n## lm(formula = hp ~ &lt;1024 unique rhs&gt;, data = cars)\n## \n## Component models: \n##                      df  logLik   AICc delta weight\n## 2+4+10                5 -145.39 303.10  0.00   0.15\n## 2+4+9+10              6 -145.02 305.39  2.29   0.05\n## 2+3+4+10              6 -145.13 305.61  2.52   0.04\n## 2+4+5+10              6 -145.16 305.68  2.59   0.04\n## 2+4+8                 5 -146.71 305.73  2.63   0.04\n## 2+4+7+10              6 -145.25 305.87  2.77   0.04\n## 2+4+8+10              6 -145.33 306.02  2.92   0.04\n## 1+2+4+10              6 -145.38 306.12  3.03   0.03\n## 2+4+6+10              6 -145.39 306.14  3.04   0.03\n## 2+4+8+9               6 -145.60 306.56  3.46   0.03\n## 2+3+4+9+10            7 -144.25 307.17  4.08   0.02\n## 2+4+8+9+10            7 -144.54 307.75  4.65   0.01\n## 2+4+5+9+10            7 -144.68 308.03  4.93   0.01\n## 2+4+7+9+10            7 -144.87 308.41  5.31   0.01\n## 2+4+6+8               6 -146.53 308.43  5.33   0.01\n## 2+3+4+6+10            7 -144.96 308.60  5.50   0.01\n## 2+3+4+8               6 -146.63 308.63  5.53   0.01\n## 2+3+4+7+10            7 -144.98 308.63  5.53   0.01\n## 2+4                   4 -149.59 308.65  5.56   0.01\n## 2+4+6+9+10            7 -145.01 308.70  5.60   0.01\n## 1+2+4+9+10            7 -145.01 308.70  5.60   0.01\n## 2+4+5+7+10            7 -145.03 308.73  5.63   0.01\n## 2+4+5+8               6 -146.69 308.74  5.64   0.01\n## 2+4+7+8               6 -146.69 308.75  5.65   0.01\n## 1+2+4+8               6 -146.70 308.76  5.66   0.01\n## 2+3+4+5+10            7 -145.05 308.77  5.67   0.01\n## 2+4+5+6+10            7 -145.10 308.86  5.76   0.01\n## 2+4+5+8+10            7 -145.11 308.88  5.79   0.01\n## 2+3+4+8+10            7 -145.12 308.90  5.81   0.01\n## 1+2+3+4+10            7 -145.12 308.91  5.81   0.01\n## 2+3+4+8+9             7 -145.15 308.96  5.87   0.01\n## 1+2+4+5+10            7 -145.16 308.98  5.89   0.01\n## 2+4+7+8+10            7 -145.20 309.08  5.98   0.01\n## 2+4+6+7+10            7 -145.24 309.14  6.05   0.01\n## 1+2+4+7+10            7 -145.24 309.15  6.05   0.01\n## 2+3+4+6               6 -146.89 309.15  6.05   0.01\n## 1+2+4+8+10            7 -145.29 309.25  6.16   0.01\n## 1+2+4                 5 -148.48 309.27  6.18   0.01\n## 2+4+6+8+10            7 -145.33 309.32  6.22   0.01\n## 1+2+4+6+10            7 -145.36 309.40  6.30   0.01\n## 2+4+6                 5 -148.66 309.62  6.52   0.01\n## 2+4+5+8+9             7 -145.49 309.64  6.55   0.01\n## 2+4+6+8+9             7 -145.56 309.78  6.69   0.01\n## 2+4+7+8+9             7 -145.59 309.84  6.74   0.01\n## 1+2+4+8+9             7 -145.59 309.85  6.76   0.01\n## 2+3+4+8+9+10          8 -143.92 310.10  7.00   0.00\n## 1+2+3+4               6 -147.37 310.10  7.01   0.00\n## 2+3+4                 5 -148.91 310.12  7.03   0.00\n## 2+3+4+6+9+10          8 -143.99 310.24  7.15   0.00\n## 1+2+3+4+9+10          8 -144.06 310.37  7.28   0.00\n## 2+3+4+7+9+10          8 -144.10 310.46  7.36   0.00\n## 2+4+5+8+9+10          8 -144.18 310.62  7.52   0.00\n## 2+3+4+5+9+10          8 -144.21 310.68  7.59   0.00\n## 2+4+7                 5 -149.20 310.71  7.62   0.00\n## 2+3+4+6+8             7 -146.13 310.92  7.83   0.00\n## 2+4+7+8+9+10          8 -144.45 311.15  8.06   0.00\n## 1+2+4+8+9+10          8 -144.51 311.28  8.18   0.00\n## 2+4+6+8+9+10          8 -144.53 311.32  8.23   0.00\n## 2+4+5+7+9+10          8 -144.55 311.36  8.27   0.00\n## 2+4+5                 5 -149.53 311.38  8.28   0.00\n## 2+4+9                 5 -149.55 311.41  8.31   0.00\n## 2+4+5+6+8             7 -146.41 311.49  8.39   0.00\n## 1+2+4+5+9+10          8 -144.63 311.53  8.43   0.00\n## 2+4+5+6+9+10          8 -144.65 311.55  8.46   0.00\n## 2+3+4+6+8+9           8 -144.67 311.61  8.51   0.00\n## 2+3+4+6+9             7 -146.49 311.65  8.56   0.00\n## 1+2+4+6+8             7 -146.51 311.69  8.59   0.00\n## 2+4+6+7+8             7 -146.53 311.73  8.64   0.00\n## 1+2+3+4+9             7 -146.54 311.75  8.65   0.00\n## 2+3+4+6+7+10          8 -144.75 311.75  8.66   0.00\n## 1+2+3+4+8             7 -146.56 311.78  8.68   0.00\n## 2+3+4+7+8             7 -146.62 311.90  8.80   0.00\n## 2+3+4+5+8             7 -146.63 311.93  8.84   0.00\n## 2+3+4+5+6+10          8 -144.85 311.96  8.87   0.00\n## 1+2+3+4+6             7 -146.65 311.97  8.88   0.00\n## 1+2+4+5+8             7 -146.66 311.98  8.88   0.00\n## 2+4+5+7+8             7 -146.67 312.00  8.90   0.00\n## 1+2+4+6               6 -148.32 312.00  8.90   0.00\n## 2+4+6+7+9+10          8 -144.87 312.00  8.91   0.00\n## 1+2+4+7+9+10          8 -144.87 312.00  8.91   0.00\n## 1+2+4+7+8             7 -146.68 312.03  8.94   0.00\n## 1+2+4+7               6 -148.34 312.04  8.94   0.00\n## 1+2+3+4+8+9           8 -144.90 312.06  8.97   0.00\n## 2+3+4+5+7+10          8 -144.91 312.09  8.99   0.00\n## 2+4+5+6+7+10          8 -144.93 312.12  9.03   0.00\n## 1+2+4+5               6 -148.40 312.16  9.07   0.00\n## 1+2+3+4+6+10          8 -144.96 312.18  9.08   0.00\n## 2+3+4+6+8+10          8 -144.96 312.19  9.09   0.00\n## 1+2+3+4+7+10          8 -144.98 312.21  9.12   0.00\n## 2+3+4+7+8+10          8 -144.98 312.22  9.12   0.00\n## 2+4+5+7+8+10          8 -144.99 312.24  9.15   0.00\n## 1+2+4+9               6 -148.46 312.27  9.18   0.00\n## 1+2+4+6+9+10          8 -145.01 312.29  9.19   0.00\n## 1+2+4+5+7+10          8 -145.03 312.32  9.22   0.00\n## 1+2+3+4+5+10          8 -145.03 312.32  9.23   0.00\n## 2+3+4+5+8+10          8 -145.04 312.33  9.24   0.00\n## 2+4+5+6+8+10          8 -145.05 312.35  9.26   0.00\n## 2+3+4+5+6             7 -146.88 312.44  9.34   0.00\n## 1+2+4+5+6+10          8 -145.09 312.45  9.35   0.00\n## 2+3+4+6+7             7 -146.89 312.45  9.36   0.00\n## 2+4+6+7               6 -148.56 312.47  9.38   0.00\n## 1+2+4+5+8+10          8 -145.11 312.48  9.38   0.00\n## 2+3+4+5               6 -148.56 312.49  9.39   0.00\n## 1+2+3+4+8+10          8 -145.12 312.49  9.40   0.00\n## 2+3+4+7+8+9           8 -145.13 312.53  9.43   0.00\n## 2+3+4+5+8+9           8 -145.15 312.56  9.46   0.00\n## 2+4+5+6               6 -148.60 312.56  9.46   0.00\n## 2+3+4+7               6 -148.60 312.56  9.46   0.00\n## 1+2+4+7+8+10          8 -145.17 312.60  9.50   0.00\n## 2+4+6+9               6 -148.63 312.63  9.53   0.00\n## 2+4+6+7+8+10          8 -145.19 312.64  9.55   0.00\n## 1+2+4+6+7+10          8 -145.19 312.65  9.55   0.00\n## 1+2+4+6+8+10          8 -145.26 312.78  9.69   0.00\n## 2+4+5+6+8+9           8 -145.36 312.98  9.88   0.00\n## 2+3+4+9               6 -148.86 313.09  9.99   0.00\n## 1+2+4+5+8+9           8 -145.43 313.13 10.03   0.00\n## 2+4+5+7+8+9           8 -145.46 313.19 10.09   0.00\n## 1+2+3+4+7             7 -147.31 313.29 10.20   0.00\n## 2+4+6+7+8+9           8 -145.55 313.37 10.27   0.00\n## 1+2+4+6+8+9           8 -145.56 313.37 10.28   0.00\n## 1+2+3+4+5             7 -147.37 313.40 10.30   0.00\n## 1+2+4+7+8+9           8 -145.58 313.42 10.33   0.00\n## 2+3+4+6+7+9+10        9 -143.74 313.65 10.56   0.00\n## 2+3+4+6+8+9+10        9 -143.76 313.69 10.60   0.00\n## 2+3                   4 -152.12 313.71 10.62   0.00\n## 2+4+5+7               6 -149.19 313.74 10.64   0.00\n## 2+4+7+9               6 -149.20 313.75 10.66   0.00\n## 2+3+4+7+8+9+10        9 -143.81 313.80 10.70   0.00\n## 2+3+4+5+8+9+10        9 -143.85 313.88 10.78   0.00\n## 1+2+3+4+8+9+10        9 -143.85 313.88 10.78   0.00\n## 1+2+3+4+6+9           8 -145.83 313.92 10.83   0.00\n## 2+3+4+5+6+9+10        9 -143.91 314.00 10.90   0.00\n## 1+2+3+4+7+9+10        9 -143.91 314.00 10.91   0.00\n## 1+2+3+4+6+9+10        9 -143.92 314.02 10.92   0.00\n## 3+6+7                 5 -150.88 314.06 10.96   0.00\n## 1+2+3+4+5+9+10        9 -143.96 314.11 11.01   0.00\n## 3+4+6                 5 -150.95 314.20 11.11   0.00\n## 2+3+4+5+7+9+10        9 -144.06 314.31 11.21   0.00\n## 2+4+5+9               6 -149.50 314.36 11.26   0.00\n## 2+4+5+7+8+9+10        9 -144.10 314.37 11.28   0.00\n## 2+3+4+5+6+8           8 -146.11 314.48 11.38   0.00\n## 2+3+4+6+7+8           8 -146.12 314.50 11.40   0.00\n## 2+4+5+6+8+9+10        9 -144.17 314.51 11.42   0.00\n## 1+2+3+4+6+8           8 -146.13 314.51 11.42   0.00\n## 1+2+4+5+8+9+10        9 -144.18 314.54 11.44   0.00\n## 2+3+6+7               6 -149.63 314.63 11.53   0.00\n## 2+3+8                 5 -151.22 314.75 11.66   0.00\n## 2+3+7+8               6 -149.78 314.92 11.82   0.00\n## 3+4+6+7               6 -149.78 314.92 11.82   0.00\n## 2+3+6                 5 -151.34 314.99 11.89   0.00\n## 1+2+4+5+6             7 -148.16 314.99 11.90   0.00\n## 1+2+4+7+8+9+10        9 -144.41 315.01 11.91   0.00\n## 2+4+6+7+8+9+10        9 -144.44 315.07 11.97   0.00\n## 1+2+4+5+6+8           8 -146.41 315.07 11.98   0.00\n## 2+4+5+6+7+8           8 -146.41 315.08 11.99   0.00\n## 1+2+4+6+7             7 -148.24 315.14 12.04   0.00\n## 1+2+4+5+7             7 -148.24 315.14 12.05   0.00\n## 2+4+5+6+7+9+10        9 -144.49 315.16 12.07   0.00\n## 2+3+4+5+6+9           8 -146.46 315.19 12.09   0.00\n## 1+2+4+6+8+9+10        9 -144.51 315.20 12.10   0.00\n## 1+2+4+5+7+9+10        9 -144.51 315.20 12.10   0.00\n## 1+2+3+4+7+9           8 -146.47 315.20 12.11   0.00\n## 2+3+4+6+7+9           8 -146.49 315.25 12.15   0.00\n## 1+2+4+7+9             7 -148.30 315.26 12.17   0.00\n## 1+2+4+6+7+8           8 -146.51 315.28 12.19   0.00\n## 1+2+4+6+9             7 -148.31 315.29 12.20   0.00\n## 1+2+3+4+5+9           8 -146.54 315.33 12.24   0.00\n## 1+2+3+4+7+8           8 -146.54 315.35 12.25   0.00\n## 1+2+3+4+5+8           8 -146.55 315.36 12.27   0.00\n## 1+2+4+5+9             7 -148.36 315.38 12.28   0.00\n## 1+2+3+4+6+8+9         9 -144.61 315.39 12.30   0.00\n## 2+3+4+5+7             7 -148.38 315.42 12.32   0.00\n## 1+2+4+5+6+9+10        9 -144.62 315.43 12.33   0.00\n## 2+3+7                 5 -151.57 315.44 12.35   0.00\n## 2+3+4+5+6+7+10        9 -144.63 315.45 12.36   0.00\n## 2+3+4+5+6+8+9         9 -144.65 315.49 12.39   0.00\n## 2+3+4+5+7+8           8 -146.62 315.49 12.40   0.00\n## 2+3+4+6+7+8+9         9 -144.67 315.51 12.42   0.00\n## 1+2+4+5+7+8           8 -146.64 315.53 12.44   0.00\n## 1+2+3+4+5+6           8 -146.65 315.56 12.47   0.00\n## 2+3+4+5+9             7 -148.45 315.56 12.47   0.00\n## 1+2+3+4+6+7           8 -146.65 315.56 12.47   0.00\n## 1+2+3+4+6+7+10        9 -144.73 315.63 12.54   0.00\n## 2+4+5+6+7             7 -148.50 315.66 12.56   0.00\n## 2+3+4+6+7+8+10        9 -144.74 315.66 12.57   0.00\n## 2+3+4+7+9             7 -148.51 315.69 12.60   0.00\n## 2+4+6+7+9             7 -148.55 315.76 12.67   0.00\n## 1+2+3                 5 -151.73 315.77 12.68   0.00\n## 2+4+5+6+9             7 -148.58 315.83 12.73   0.00\n## 1+2+3+4+5+6+10        9 -144.85 315.88 12.79   0.00\n## 2+3+4+5+6+8+10        9 -144.85 315.88 12.79   0.00\n## 1+2+4+6+7+9+10        9 -144.87 315.92 12.82   0.00\n## 1+2+3+4+5+8+9         9 -144.88 315.95 12.85   0.00\n## 3+6+7+8               6 -150.30 315.96 12.87   0.00\n## 1+2+3+4+7+8+9         9 -144.89 315.97 12.88   0.00\n## 2+4+5+6+7+8+10        9 -144.90 315.98 12.88   0.00\n## 1+2+3+4+5+7+10        9 -144.90 315.98 12.88   0.00\n## 2+3+4+5+7+8+10        9 -144.91 316.00 12.90   0.00\n## 1+2+4+5+6+7+10        9 -144.92 316.03 12.93   0.00\n## 2+3+4+5+6+7           8 -146.88 316.03 12.93   0.00\n## 1+2+3+4+6+8+10        9 -144.96 316.09 13.00   0.00\n## 2+3+8+10              6 -150.38 316.12 13.02   0.00\n## 1+2+3+4+7+8+10        9 -144.98 316.13 13.04   0.00\n## 1+2+4+5+7+8+10        9 -144.99 316.16 13.07   0.00\n## 1+2+3+4+5+8+10        9 -145.03 316.24 13.14   0.00\n## 1+2+4+5+6+8+10        9 -145.03 316.24 13.14   0.00\n## 3+4+6+8               6 -150.45 316.26 13.17   0.00\n## 2+3+7+8+9             7 -148.83 316.33 13.24   0.00\n## 1+2+4+6+7+8+10        9 -145.10 316.39 13.30   0.00\n## 2+3+8+9               6 -150.52 316.40 13.30   0.00\n## 2+3+9                 5 -152.07 316.44 13.34   0.00\n## 2+3+4+5+7+8+9         9 -145.13 316.45 13.35   0.00\n## 2+3+5                 5 -152.07 316.45 13.35   0.00\n## 2+3+10                5 -152.12 316.54 13.44   0.00\n## 1+2+3+7               6 -150.60 316.55 13.45   0.00\n## 3+6+7+9               6 -150.67 316.70 13.60   0.00\n## 3+4+6+9               6 -150.68 316.72 13.62   0.00\n## 2+3+6+7+8             7 -149.07 316.80 13.71   0.00\n## 3+4+6+7+8             7 -149.09 316.84 13.74   0.00\n## 1+2+3+4+5+7           8 -147.31 316.88 13.79   0.00\n## 1+2+4+5+6+8+9         9 -145.35 316.89 13.79   0.00\n## 2+4+5+6+7+8+9         9 -145.35 316.89 13.79   0.00\n## 1+2+4+5+7+8+9         9 -145.41 317.01 13.91   0.00\n## 2+4+5+7+9             7 -149.18 317.03 13.93   0.00\n## 3+5+6+7               6 -150.84 317.03 13.94   0.00\n## 1+3+6+7               6 -150.84 317.04 13.95   0.00\n## 3+6+7+10              6 -150.88 317.11 14.02   0.00\n## 2+8+10                5 -152.41 317.13 14.03   0.00\n## 3+4+5+6               6 -150.89 317.15 14.05   0.00\n## 3+4+6+10              6 -150.92 317.19 14.10   0.00\n## 1+3+4+6               6 -150.92 317.20 14.10   0.00\n## 2+3+8+9+10            7 -149.30 317.26 14.16   0.00\n## 2+3+6+10              6 -150.96 317.28 14.18   0.00\n## 1+2+4+6+7+8+9         9 -145.55 317.29 14.19   0.00\n## 2+3+7+10              6 -151.02 317.40 14.31   0.00\n## 2+3+6+7+9             7 -149.39 317.44 14.34   0.00\n## 2+3+6+8               6 -151.06 317.47 14.38   0.00\n## 2+3+6+9               6 -151.11 317.57 14.48   0.00\n## 3+6+7+8+9             7 -149.46 317.58 14.49   0.00\n## 2+3+4+6+7+8+9+10     10 -143.57 317.61 14.51   0.00\n## 3+4+6+7+9             7 -149.51 317.70 14.60   0.00\n## 3+4+6+8+9             7 -149.52 317.70 14.60   0.00\n## 3+6+8+10              6 -151.17 317.70 14.60   0.00\n## 2+3+5+8               6 -151.18 317.72 14.62   0.00\n## 3+4+6+7+10            7 -149.56 317.78 14.68   0.00\n## 2+3+4+5+6+8+9+10     10 -143.65 317.78 14.68   0.00\n## 1+2+3+8               6 -151.22 317.79 14.70   0.00\n## 2+3+4+5+6+7+9+10     10 -143.66 317.79 14.70   0.00\n## 1+2+3+6+7             7 -149.56 317.79 14.70   0.00\n## 2+3+6+7+10            7 -149.58 317.82 14.72   0.00\n## 1+2+3+4+5+6+9         9 -145.83 317.84 14.74   0.00\n## 1+2+3+4+6+7+9         9 -145.83 317.84 14.75   0.00\n## 1+2+3+4+6+7+9+10     10 -143.69 317.85 14.76   0.00\n## 3+6+10                5 -152.78 317.87 14.77   0.00\n## 2+3+5+6+7             7 -149.63 317.93 14.83   0.00\n## 1+2+3+4+7+8+9+10     10 -143.74 317.95 14.85   0.00\n## 1+2+3+4+6+8+9+10     10 -143.74 317.95 14.85   0.00\n## 1+2+3+4+5+8+9+10     10 -143.74 317.96 14.87   0.00\n## 2+3+4+5+7+8+9+10     10 -143.74 317.97 14.87   0.00\n## 2+3+5+6               6 -151.32 318.00 14.90   0.00\n## 1+2+3+6               6 -151.33 318.03 14.93   0.00\n## 4+6+7+8               6 -151.35 318.05 14.96   0.00\n## 1+3+4+6+7             7 -149.70 318.06 14.96   0.00\n## 3+4+5+6+7             7 -149.70 318.06 14.97   0.00\n## 2+3+5+7               6 -151.36 318.07 14.98   0.00\n## 1+2+3+4+5+6+9+10     10 -143.80 318.09 14.99   0.00\n## 1+2+3+4+5+7+9+10     10 -143.83 318.13 15.04   0.00\n## 2+3+7+8+10            7 -149.75 318.17 15.08   0.00\n## 1+2+3+9               6 -151.41 318.18 15.08   0.00\n## 1+2+3+7+8             7 -149.76 318.19 15.09   0.00\n## 2+3+5+7+8             7 -149.78 318.22 15.13   0.00\n## 4+6+8                 5 -152.98 318.28 15.18   0.00\n## 3+4+6+7+8+9           8 -148.01 318.29 15.19   0.00\n## 2+7+8                 5 -152.99 318.29 15.19   0.00\n## 1+2+3+10              6 -151.48 318.32 15.22   0.00\n## 3+6                   4 -154.45 318.38 15.29   0.00\n## 2+3+4+5+6+7+8         9 -146.10 318.38 15.29   0.00\n## 1+2+3+4+5+6+8         9 -146.10 318.39 15.30   0.00\n## 1+2+4+5+6+7           8 -148.07 318.41 15.31   0.00\n## 1+2+3+4+6+7+8         9 -146.12 318.42 15.32   0.00\n## 2+3+7+9               6 -151.55 318.45 15.36   0.00\n## 2+3+6+8+10            7 -149.91 318.48 15.38   0.00\n## 2+3+6+7+8+9           8 -148.14 318.54 15.45   0.00\n## 1+2+4+5+6+9           8 -148.15 318.55 15.46   0.00\n## 1+2+4+5+7+9           8 -148.17 318.60 15.50   0.00\n## 2+4+5+6+7+8+9+10     10 -144.07 318.61 15.51   0.00\n## 1+2+4+5+7+8+9+10     10 -144.09 318.66 15.57   0.00\n## 3+4+6+8+10            7 -150.00 318.67 15.58   0.00\n## 1+2+4+6+7+9           8 -148.22 318.70 15.61   0.00\n## 2+3+4+5+7+9           8 -148.23 318.72 15.62   0.00\n## 3+6+7+8+10            7 -150.04 318.74 15.64   0.00\n## 3+6+8+9+10            7 -150.04 318.75 15.66   0.00\n## 2+7+8+10              6 -151.71 318.78 15.69   0.00\n## 1+2+4+5+6+8+9+10     10 -144.17 318.81 15.71   0.00\n## 1+2+3+5               6 -151.73 318.82 15.72   0.00\n## 8+10                  4 -154.69 318.86 15.76   0.00\n## 1+2+4+5+6+7+8         9 -146.41 318.99 15.90   0.00\n## 1+2+3+7+9             7 -150.18 319.02 15.92   0.00\n## 2+5+7+8               6 -151.84 319.03 15.94   0.00\n## 4+6+8+10              6 -151.85 319.05 15.96   0.00\n## 2+3+4+5+6+7+9         9 -146.46 319.11 16.01   0.00\n## 1+2+3+4+5+7+9         9 -146.47 319.12 16.02   0.00\n## 1+3+6+7+8             7 -150.23 319.13 16.04   0.00\n## 2+5+8+10              6 -151.93 319.22 16.12   0.00\n## 1+2+7+8               6 -151.93 319.23 16.13   0.00\n## 2+4+5+6+7+9           8 -148.49 319.24 16.14   0.00\n## 1+2+3+4+5+7+8         9 -146.54 319.25 16.16   0.00\n## 3+5+6+7+8             7 -150.30 319.27 16.17   0.00\n## 1+2+4+6+7+8+9+10     10 -144.41 319.29 16.20   0.00\n## 2+3+5+9               6 -151.99 319.35 16.25   0.00\n## 1+2+3+8+10            7 -150.35 319.38 16.28   0.00\n## 2+3+5+8+10            7 -150.38 319.42 16.32   0.00\n## 2+3+6+8+9             7 -150.38 319.43 16.34   0.00\n## 1+2+4+5+6+7+9+10     10 -144.48 319.44 16.34   0.00\n## 1+3+4+6+8             7 -150.39 319.45 16.35   0.00\n## 2+3+5+10              6 -152.06 319.47 16.38   0.00\n## 1+2+3+4+5+6+7         9 -146.65 319.48 16.39   0.00\n## 2+3+9+10              6 -152.06 319.49 16.39   0.00\n## 1+2+8+10              6 -152.07 319.50 16.40   0.00\n## 3+4+5+6+8             7 -150.45 319.57 16.47   0.00\n## 2+3+5+8+9             7 -150.47 319.60 16.50   0.00\n## 1+2+3+4+5+6+8+9      10 -144.57 319.61 16.52   0.00\n## 1+2+3+4+6+7+8+9      10 -144.60 319.67 16.58   0.00\n## 1+3+4+6+9             7 -150.51 319.69 16.60   0.00\n## 1+3+6+7+9             7 -150.52 319.70 16.60   0.00\n## 1+2+3+8+9             7 -150.52 319.70 16.61   0.00\n## 2+3+7+8+9+10          8 -148.73 319.71 16.62   0.00\n## 2+8+9+10              6 -152.18 319.72 16.63   0.00\n## 1+2+3+7+10            7 -150.53 319.73 16.63   0.00\n## 1+2+3+4+5+6+7+10     10 -144.63 319.73 16.64   0.00\n## 2+3+4+5+6+7+8+10     10 -144.63 319.74 16.65   0.00\n## 1+2+3+7+8+9           8 -148.75 319.76 16.66   0.00\n## 4+7+8                 5 -153.73 319.76 16.67   0.00\n## 2+3+4+5+6+7+8+9      10 -144.65 319.77 16.67   0.00\n## 1+2+3+5+7             7 -150.59 319.84 16.75   0.00\n## 3+4+5+6+9             7 -150.59 319.84 16.75   0.00\n## 3+5+6+7+9             7 -150.60 319.87 16.78   0.00\n## 2+3+6+8+9+10          8 -148.81 319.87 16.78   0.00\n## 3+4+6+8+9+10          8 -148.83 319.92 16.83   0.00\n## 2+3+5+7+8+9           8 -148.83 319.93 16.83   0.00\n## 1+2+3+4+6+7+8+10     10 -144.73 319.93 16.83   0.00\n## 4+8                   4 -155.23 319.93 16.84   0.00\n## 3+6+7+9+10            7 -150.67 320.00 16.90   0.00\n## 3+4+6+9+10            7 -150.67 320.00 16.91   0.00\n## 3+7+8                 5 -153.85 320.02 16.92   0.00\n## 2+6+8+10              6 -152.35 320.06 16.97   0.00\n## 4+8+10                5 -153.91 320.13 17.03   0.00\n## 1+4+6+8               6 -152.38 320.13 17.03   0.00\n## 1+2+3+4+5+6+8+10     10 -144.85 320.17 17.08   0.00\n## 1+2+4+5+6+7+8+10     10 -144.87 320.21 17.12   0.00\n## 1+2+3+4+5+7+8+9      10 -144.87 320.22 17.13   0.00\n## 2+3+6+9+10            7 -150.78 320.23 17.13   0.00\n## 3+6+7+8+9+10          8 -148.99 320.23 17.14   0.00\n## 1+2+3+4+5+7+8+10     10 -144.90 320.27 17.18   0.00\n## 3+8+10                5 -153.99 320.29 17.19   0.00\n## 2+3+6+7+8+10          8 -149.02 320.30 17.20   0.00\n## 1+3+5+6+7             7 -150.82 320.30 17.20   0.00\n## 1+2+3+6+10            7 -150.82 320.31 17.22   0.00\n## 1+3+6+7+10            7 -150.83 320.33 17.23   0.00\n## 3+5+6+7+10            7 -150.83 320.33 17.24   0.00\n## 7+8+10                5 -154.02 320.34 17.24   0.00\n## 1+2+3+6+7+8           8 -149.04 320.34 17.24   0.00\n## 1+3+4+6+10            7 -150.84 320.35 17.26   0.00\n## 3+4+5+6+10            7 -150.84 320.35 17.26   0.00\n## 2+3+5+6+7+8           8 -149.05 320.36 17.26   0.00\n## 1+3+4+6+7+8           8 -149.05 320.36 17.27   0.00\n## 3+4+5+6+7+8           8 -149.08 320.42 17.32   0.00\n## 6+8+10                5 -154.06 320.42 17.33   0.00\n## 1+3+4+5+6             7 -150.88 320.43 17.33   0.00\n## 1+4+6+7+8             7 -150.88 320.43 17.34   0.00\n## 3+4+6+7+8+10          8 -149.09 320.43 17.34   0.00\n## 2+3+7+9+10            7 -150.93 320.52 17.42   0.00\n## 1+3+6+10              6 -152.58 320.53 17.43   0.00\n## 1+2+3+6+7+9           8 -149.14 320.55 17.45   0.00\n## 2+3+5+6+10            7 -150.96 320.58 17.48   0.00\n## 1+2+3+8+9+10          8 -149.16 320.58 17.49   0.00\n## 2+3+5+7+10            7 -150.97 320.60 17.51   0.00\n## 2+3+5+6+8             7 -150.97 320.61 17.51   0.00\n## 3+4+6+7+9+10          8 -149.19 320.64 17.55   0.00\n## 1+2+3+6+8             7 -150.99 320.65 17.56   0.00\n## 2+6+7+8               6 -152.67 320.70 17.61   0.00\n## 1+2+3+6+9             7 -151.03 320.72 17.62   0.00\n## 1+3+4+6+7+9           8 -149.23 320.73 17.63   0.00\n## 3+6+9+10              6 -152.69 320.74 17.64   0.00\n## 3+5+6+10              6 -152.69 320.74 17.65   0.00\n## 8+9+10                5 -154.23 320.76 17.67   0.00\n## 2+3+6+7+9+10          8 -149.29 320.84 17.74   0.00\n## 3+6+8                 5 -154.27 320.84 17.75   0.00\n## 2+3+5+8+9+10          8 -149.30 320.85 17.76   0.00\n## 2+3+5+6+9             7 -151.10 320.86 17.77   0.00\n## 4+5+6+8               6 -152.76 320.87 17.78   0.00\n## 4+6+7+8+9             7 -151.10 320.88 17.78   0.00\n## 3+6+9                 5 -154.29 320.88 17.78   0.00\n## 1+2+3+9+10            7 -151.11 320.90 17.80   0.00\n## 7+8                   4 -155.72 320.92 17.82   0.00\n## 1+3+6+8+10            7 -151.16 320.98 17.88   0.00\n## 3+5+6+8+10            7 -151.16 321.00 17.90   0.00\n## 4+5+6+7+8             7 -151.17 321.00 17.91   0.00\n## 2+3+5+6+7+9           8 -149.37 321.01 17.91   0.00\n## 4+6+8+9               6 -152.83 321.01 17.92   0.00\n## 4+6+7+8+10            7 -151.17 321.02 17.92   0.00\n## 1+2+3+5+8             7 -151.18 321.02 17.92   0.00\n## 3+4+5+6+7+9           8 -149.39 321.04 17.95   0.00\n## 3+8+9+10              6 -152.87 321.10 18.00   0.00\n## 1+3+6+7+8+9           8 -149.45 321.15 18.06   0.00\n## 1+3+6                 5 -154.43 321.17 18.07   0.00\n## 1+2+4+5+6+7+8+9      10 -145.35 321.17 18.07   0.00\n## 3+5+6+7+8+9           8 -149.46 321.18 18.08   0.00\n## 3+5+6                 5 -154.45 321.21 18.11   0.00\n## 2+5+7+8+10            7 -151.28 321.22 18.13   0.00\n## 1+2+3+5+6             7 -151.30 321.27 18.18   0.00\n## 1+3+4+6+8+9           8 -149.51 321.28 18.18   0.00\n## 2+3+5+7+9             7 -151.31 321.28 18.18   0.00\n## 3+4+5+6+8+9           8 -149.51 321.28 18.19   0.00\n## 3+4+5+6+7+10          8 -149.52 321.30 18.20   0.00\n## 2+7+8+9               6 -152.99 321.34 18.24   0.00\n## 1+2+3+6+7+10          8 -149.54 321.35 18.25   0.00\n## 1+3+4+6+7+10          8 -149.55 321.35 18.26   0.00\n## 1+2+3+5+6+7           8 -149.56 321.39 18.29   0.00\n## 2+3+5+6+7+10          8 -149.58 321.41 18.32   0.00\n## 1+2+7+8+10            7 -151.40 321.46 18.36   0.00\n## 3+7+8+9               6 -153.06 321.47 18.38   0.00\n## 1+2+3+5+9             7 -151.40 321.47 18.38   0.00\n## 4+6+8+9+10            7 -151.42 321.51 18.42   0.00\n## 1+3+4+5+6+7           8 -149.65 321.56 18.46   0.00\n## 1+2+3+5+10            7 -151.48 321.62 18.52   0.00\n## 2+7+8+9+10            7 -151.50 321.67 18.57   0.00\n## 1+8+10                5 -154.69 321.68 18.58   0.00\n## 5+8+10                5 -154.69 321.68 18.59   0.00\n## 4+8+9+10              6 -153.16 321.68 18.59   0.00\n## 6+7+8+10              6 -153.17 321.70 18.60   0.00\n## 1+2+5+7+8             7 -151.52 321.71 18.61   0.00\n## 1+2+3+7+8+10          8 -149.73 321.72 18.62   0.00\n## 2+3+5+7+8+10          8 -149.75 321.77 18.67   0.00\n## 1+2+3+5+7+8           8 -149.76 321.78 18.68   0.00\n## 1+4+6+8+10            7 -151.56 321.79 18.70   0.00\n## 3+4+8                 5 -154.75 321.81 18.72   0.00\n## 2+5+8+9+10            7 -151.58 321.83 18.74   0.00\n## 4+7+8+9               6 -153.24 321.84 18.74   0.00\n## 4+8+9                 5 -154.86 322.03 18.94   0.00\n## 2+3+5+6+8+10          8 -149.89 322.04 18.95   0.00\n## 1+2+3+6+8+10          8 -149.90 322.06 18.96   0.00\n## 2+6+7+8+10            7 -151.70 322.07 18.98   0.00\n## 3+7+8+10              6 -153.37 322.09 19.00   0.00\n## 3+4+7+8               6 -153.38 322.13 19.03   0.00\n## 1+2+3+4+5+6+7+9      10 -145.83 322.13 19.04   0.00\n## 2+3+4+5+6+7+8+9+10   11 -143.47 322.14 19.04   0.00\n## 4+5+6+8+10            7 -151.74 322.14 19.05   0.00\n## 2+3+6+7+8+9+10        9 -147.98 322.14 19.05   0.00\n## 3+4+6+7+8+9+10        9 -147.99 322.16 19.06   0.00\n## 2+5+7+8+9             7 -151.75 322.16 19.06   0.00\n## 3+4+5+6+7+8+9         9 -148.01 322.19 19.10   0.00\n## 4+7+8+10              6 -153.42 322.20 19.11   0.00\n## 1+3+4+6+7+8+9         9 -148.01 322.21 19.11   0.00\n## 1+3+4+6+8+10          8 -149.98 322.23 19.13   0.00\n## 3+4+5+6+8+10          8 -149.99 322.25 19.15   0.00\n## 1+2+4+5+6+7+9         9 -148.04 322.26 19.17   0.00\n## 1+3+6+7+8+10          8 -150.01 322.27 19.18   0.00\n## 1+2+5+8+10            7 -151.81 322.29 19.19   0.00\n## 1+2+3+4+6+7+8+9+10   11 -143.55 322.31 19.21   0.00\n## 1+3+6+8+9+10          8 -150.03 322.32 19.23   0.00\n## 3+5+6+7+8+10          8 -150.03 322.33 19.23   0.00\n## 1+2+8+9+10            7 -151.83 322.33 19.24   0.00\n## 3+5+6+8+9+10          8 -150.04 322.33 19.24   0.00\n## 2+5+6+7+8             7 -151.83 322.34 19.24   0.00\n## 1+2+3+4+5+6+7+9+10   11 -143.59 322.37 19.28   0.00\n## 2+3+5+6+7+8+9         9 -148.12 322.42 19.32   0.00\n## 1+2+3+4+5+6+8+9+10   11 -143.62 322.43 19.34   0.00\n## 1+2+3+6+7+8+9         9 -148.14 322.46 19.37   0.00\n## 1+2+7+8+9             7 -151.90 322.47 19.37   0.00\n## 1+2+3+4+5+7+8+9+10   11 -143.64 322.48 19.39   0.00\n## 1+2+3+7+9+10          8 -150.12 322.50 19.40   0.00\n## 3+5+7+8               6 -153.57 322.50 19.40   0.00\n## 7+8+9+10              6 -153.58 322.52 19.42   0.00\n## 1+2+6+7+8             7 -151.93 322.52 19.42   0.00\n## 2+5+6+8+10            7 -151.93 322.52 19.43   0.00\n## 1+2+3+5+7+9           8 -150.17 322.59 19.50   0.00\n## 2+3+5+9+10            7 -151.99 322.65 19.55   0.00\n## 1+3+7+8               6 -153.65 322.67 19.57   0.00\n## 4+5+7+8               6 -153.65 322.67 19.57   0.00\n## 1+2+3+4+5+6+7+8      10 -146.10 322.67 19.58   0.00\n## 4+5+8                 5 -155.18 322.68 19.58   0.00\n## 1+6+8+10              6 -153.68 322.71 19.62   0.00\n## 1+3+5+6+7+8           8 -150.23 322.72 19.62   0.00\n## 3+5+8+10              6 -153.69 322.74 19.64   0.00\n## 1+4+8                 5 -155.22 322.75 19.65   0.00\n## 1+4+7+8               6 -153.69 322.75 19.65   0.00\n## 3+4+8+10              6 -153.70 322.76 19.66   0.00\n## 1+3+8+10              6 -153.70 322.77 19.67   0.00\n## 1+2+6+8+10            7 -152.06 322.79 19.70   0.00\n## 2+6+8+9+10            7 -152.07 322.80 19.70   0.00\n## 2+3+5+6+8+9           8 -150.29 322.84 19.75   0.00\n## 6+8+9+10              6 -153.80 322.96 19.86   0.00\n## 4+5+8+10              6 -153.80 322.96 19.87   0.00\n## 1+2+3+5+8+10          8 -150.35 322.96 19.87   0.00\n## 3+6+8+9               6 -153.81 322.98 19.89   0.00\n## 5+6+8+10              6 -153.82 323.00 19.90   0.00\n## 1+2+3+6+8+9           8 -150.37 323.00 19.90   0.00\n## 1+4+8+10              6 -153.82 323.00 19.91   0.00\n## 1+3+4+5+6+8           8 -150.38 323.02 19.93   0.00\n## 4+6                   4 -156.81 323.11 20.01   0.00\n## 1+3+4+6+9+10          8 -150.43 323.12 20.03   0.00\n## 1+7+8                 5 -155.41 323.14 20.04   0.00\n## 1+4+6+8+9             7 -152.25 323.18 20.08   0.00\n## 1+2+3+5+8+9           8 -150.46 323.18 20.08   0.00\n## 1+2+3+6+9+10          8 -150.46 323.19 20.09   0.00\n## 6+7+8                 5 -155.44 323.19 20.09   0.00\n## 1+3+4+5+6+9           8 -150.47 323.20 20.10   0.00\n## 1+3+5+6+7+9           8 -150.49 323.24 20.14   0.00\n## 3+4+8+9               6 -153.94 323.25 20.15   0.00\n## 1+3+6+7+9+10          8 -150.50 323.26 20.17   0.00\n## 1+4+5+6+8             7 -152.30 323.26 20.17   0.00\n## 1+3+8+9+10            7 -152.30 323.27 20.18   0.00\n## 3+7+8+9+10            7 -152.31 323.28 20.18   0.00\n## 1+3+6+9+10            7 -152.33 323.32 20.22   0.00\n## 1+2+3+5+7+10          8 -150.53 323.32 20.22   0.00\n## 1+2+4+5+6+7+8+9+10   11 -144.06 323.33 20.23   0.00\n## 1+2+3+7+8+9+10        9 -148.59 323.36 20.27   0.00\n## 5+7+8                 5 -155.53 323.38 20.28   0.00\n## 5+7+8+10              6 -154.01 323.39 20.29   0.00\n## 3+4+5+6+9+10          8 -150.56 323.39 20.29   0.00\n## 1+7+8+10              6 -154.02 323.39 20.29   0.00\n## 1+3+7                 5 -155.55 323.41 20.32   0.00\n## 4+6+7                 5 -155.56 323.44 20.34   0.00\n## 3+5+6+7+9+10          8 -150.60 323.47 20.37   0.00\n## 1+3+6+8               6 -154.06 323.47 20.38   0.00\n## 3+8                   4 -157.03 323.55 20.45   0.00\n## 3+4+7+8+9             7 -152.46 323.59 20.49   0.00\n## 1+6+7+8               6 -154.12 323.60 20.50   0.00\n## 1+4+6+7+8+9           8 -150.67 323.61 20.51   0.00\n## 2+3+5+7+8+9+10        9 -148.73 323.63 20.54   0.00\n## 1+2+3+5+7+8+9         9 -148.74 323.66 20.57   0.00\n## 7+8+9                 5 -155.70 323.72 20.62   0.00\n## 1+3+5+6+10            7 -152.54 323.75 20.65   0.00\n## 1+2+3+6+8+9+10        9 -148.79 323.76 20.66   0.00\n## 3+5+8+9+10            7 -152.55 323.77 20.67   0.00\n## 2+3+5+6+8+9+10        9 -148.80 323.77 20.68   0.00\n## 4+5+6+8+9             7 -152.55 323.78 20.68   0.00\n## 5+8+9+10              6 -154.21 323.78 20.69   0.00\n## 3+4+8+9+10            7 -152.56 323.79 20.69   0.00\n## 1+8+9+10              6 -154.22 323.81 20.71   0.00\n## 2+3+5+6+9+10          8 -150.78 323.81 20.72   0.00\n## 3+4+5+6+8+9+10        9 -148.82 323.82 20.72   0.00\n## 1+2+8                 5 -155.75 323.82 20.72   0.00\n## 3+5+6+9+10            7 -152.58 323.82 20.73   0.00\n## 1+3+4+6+8+9+10        9 -148.82 323.83 20.73   0.00\n## 1+3+4+5+6+10          8 -150.80 323.85 20.76   0.00\n## 1+3+5+6+7+10          8 -150.80 323.87 20.77   0.00\n## 3+5+6+8               6 -154.26 323.87 20.78   0.00\n## 1+4+5+6+7+8           8 -150.81 323.89 20.79   0.00\n## 4+6+7+8+9+10          8 -150.82 323.89 20.80   0.00\n## 1+4+6+7+8+10          8 -150.82 323.89 20.80   0.00\n## 1+2+3+5+6+10          8 -150.82 323.90 20.81   0.00\n## 3+5+6+9               6 -154.28 323.93 20.83   0.00\n## 1+3+6+9               6 -154.29 323.93 20.84   0.00\n## 2+6+7+8+9             7 -152.64 323.95 20.86   0.00\n## 2+3+5+7+9+10          8 -150.85 323.97 20.87   0.00\n## 2+5+8                 5 -155.84 324.00 20.90   0.00\n## 4+5+6+7+8+9           8 -150.88 324.02 20.92   0.00\n## 1+2+5+8               6 -154.34 324.05 20.95   0.00\n## 1+3+7+8+9             7 -152.69 324.05 20.96   0.00\n## 1+6+7+8+10            7 -152.70 324.06 20.96   0.00\n## 4+6+9                 5 -155.90 324.11 21.01   0.00\n## 1+2+3+5+6+8           8 -150.93 324.12 21.02   0.00\n## 4+7+8+9+10            7 -152.73 324.13 21.04   0.00\n## 3+5+6+7+8+9+10        9 -148.98 324.14 21.05   0.00\n## 1+3+6+7+8+9+10        9 -148.98 324.15 21.06   0.00\n## 3+4+5+8               6 -154.40 324.15 21.06   0.00\n## 2+5+7+8+9+10          8 -150.96 324.18 21.08   0.00\n## 1+2+3+6+7+8+10        9 -149.00 324.18 21.08   0.00\n## 2+3+5+6+7+8+10        9 -149.00 324.19 21.09   0.00\n## 3+5+7+8+9             7 -152.77 324.20 21.11   0.00\n## 1+3+5+6               6 -154.43 324.21 21.12   0.00\n## 1+2+3+5+6+7+8         9 -149.03 324.23 21.14   0.00\n## 1+2+3+5+6+9           8 -151.00 324.25 21.16   0.00\n## 1+3+4+5+6+7+8         9 -149.04 324.26 21.16   0.00\n## 1+3+4+6+7+8+10        9 -149.05 324.28 21.19   0.00\n## 1+2+3+4+5+6+7+8+9    11 -144.56 324.33 21.23   0.00\n## 4+5+6+7+8+10          8 -151.04 324.34 21.24   0.00\n## 3+4+5+6+7+8+10        9 -149.08 324.34 21.25   0.00\n## 1+3+4+6+7+9+10        9 -149.08 324.34 21.25   0.00\n## 2+7+9                 5 -156.03 324.36 21.27   0.00\n## 1+3+4+8               6 -154.51 324.38 21.29   0.00\n## 3+4+5+6+7+9+10        9 -149.13 324.43 21.34   0.00\n## 1+2+3+6+7+9+10        9 -149.13 324.44 21.34   0.00\n## 1+2+3+4+5+6+7+8+10   11 -144.63 324.46 21.36   0.00\n## 5+6+7+8+10            7 -152.90 324.46 21.36   0.00\n## 1+2+3+5+6+7+9         9 -149.14 324.47 21.37   0.00\n## 1+2+3+5+9+10          8 -151.11 324.49 21.39   0.00\n## 1+2+3+5+8+9+10        9 -149.16 324.49 21.40   0.00\n## 1+3+4+5+6+7+9         9 -149.18 324.54 21.44   0.00\n## 1+3+5+6+8+10          8 -151.15 324.56 21.46   0.00\n## 6+7+8+9+10            7 -152.96 324.59 21.49   0.00\n## 1+2+5+7+8+10          8 -151.17 324.59 21.50   0.00\n## 1+2+7+8+9+10          8 -151.18 324.61 21.52   0.00\n## 5+6+7+8               6 -154.65 324.67 21.57   0.00\n## 3+4+5+7+8             7 -153.00 324.67 21.58   0.00\n## 1+4+6+8+9+10          8 -151.21 324.67 21.58   0.00\n## 4+6+7+9               6 -154.66 324.68 21.59   0.00\n## 1+5+8+10              6 -154.69 324.73 21.64   0.00\n## 3+5+7+8+10            7 -153.04 324.75 21.65   0.00\n## 2+3+5+6+7+9+10        9 -149.29 324.76 21.66   0.00\n## 2+5+6+7+8+10          8 -151.25 324.77 21.67   0.00\n## 1+4+8+9+10            7 -153.07 324.81 21.71   0.00\n## 1+3+7+8+10            7 -153.07 324.81 21.71   0.00\n## 4+5+6+8+9+10          8 -151.28 324.82 21.73   0.00\n## 1+3+4+7+8             7 -153.08 324.83 21.74   0.00\n## 4+5+8+9+10            7 -153.12 324.90 21.80   0.00\n## 1+2+6+7+8+10          8 -151.34 324.94 21.84   0.00\n## 2+5+6+8               6 -154.81 324.97 21.88   0.00\n## 1+3+4                 5 -156.36 325.03 21.93   0.00\n## 3+4+7+8+10            7 -153.18 325.03 21.94   0.00\n## 4+5+8+9               6 -154.85 325.06 21.96   0.00\n## 1+3+5+6+7+8+9         9 -149.45 325.07 21.98   0.00\n## 1+2+5+7+8+9           8 -151.41 325.08 21.98   0.00\n## 1+4+8+9               6 -154.86 325.08 21.98   0.00\n## 4+5+7+8+9             7 -153.21 325.09 21.99   0.00\n## 1+4+7+8+9             7 -153.21 325.09 21.99   0.00\n## 1+2+5+6+7+8           8 -151.45 325.17 22.07   0.00\n## 1+3+4+5+6+8+9         9 -149.50 325.19 22.09   0.00\n## 2+6+7+8+9+10          8 -151.46 325.19 22.10   0.00\n## 1+3+4+5+6+7+10        9 -149.51 325.21 22.11   0.00\n## 1+2+5+8+9+10          8 -151.48 325.23 22.13   0.00\n## 1+2+3+5+6+7+10        9 -149.54 325.27 22.17   0.00\n## 1+4+5+6+8+10          8 -151.52 325.30 22.20   0.00\n## 4+5+7+8+10            7 -153.32 325.30 22.20   0.00\n## 3+4+5+8+10            7 -153.33 325.33 22.23   0.00\n## 2+6+8                 5 -156.51 325.34 22.24   0.00\n## 4+6+7+10              6 -154.99 325.34 22.24   0.00\n## 1+4+7+8+10            7 -153.34 325.35 22.26   0.00\n## 1+3+4+8+10            7 -153.35 325.37 22.28   0.00\n## 2+5+6+8+9+10          8 -151.58 325.42 22.32   0.00\n## 3+8+9                 5 -156.56 325.44 22.34   0.00\n## 1+3+5+7               6 -155.06 325.48 22.38   0.00\n## 2+7                   4 -158.02 325.51 22.42   0.00\n## 1+3+5+7+8             7 -153.46 325.59 22.49   0.00\n## 1+3+4+7               6 -155.12 325.60 22.51   0.00\n## 1+6+8+9+10            7 -153.47 325.61 22.52   0.00\n## 1+2+3+5+7+8+10        9 -149.73 325.64 22.54   0.00\n## 1+3+4+8+9             7 -153.51 325.68 22.59   0.00\n## 4+5+6                 5 -156.69 325.68 22.59   0.00\n## 1+2+6+8               6 -155.16 325.69 22.59   0.00\n## 5+6+8+9+10            7 -153.52 325.70 22.60   0.00\n## 1+3+5+8+10            7 -153.52 325.70 22.60   0.00\n## 2+5+6+7+8+9           8 -151.73 325.72 22.63   0.00\n## 1+4+5+8               6 -155.18 325.73 22.63   0.00\n## 1+3+7+8+9+10          8 -151.74 325.74 22.64   0.00\n## 1+5+6+8+10            7 -153.55 325.77 22.67   0.00\n## 5+7+8+9+10            7 -153.57 325.81 22.71   0.00\n## 3+4+5+8+9             7 -153.57 325.81 22.72   0.00\n## 1+2+5+6+8+10          8 -151.78 325.81 22.72   0.00\n## 1+7+8+9+10            7 -153.58 325.82 22.73   0.00\n## 1+4+6                 5 -156.78 325.86 22.77   0.00\n## 1+2+6+8+9+10          8 -151.83 325.92 22.83   0.00\n## 4+6+10                5 -156.81 325.93 22.83   0.00\n## 1+3+10                5 -156.81 325.93 22.83   0.00\n## 1+2+3+5+6+8+10        9 -149.89 325.96 22.86   0.00\n## 1+4+5+7+8             7 -153.65 325.96 22.87   0.00\n## 1+3+6+8+9             7 -153.68 326.03 22.94   0.00\n## 1+3+7+9               6 -155.34 326.04 22.95   0.00\n## 1+2+6+7+8+9           8 -151.90 326.06 22.96   0.00\n## 1+3+4+8+9+10          8 -151.90 326.07 22.97   0.00\n## 1+7+8+9               6 -155.36 326.08 22.98   0.00\n## 3+5+8                 5 -156.89 326.10 23.00   0.00\n## 1+3+4+7+8+9           8 -151.92 326.11 23.01   0.00\n## 1+3+4+5+6+8+10        9 -149.97 326.12 23.02   0.00\n## 1+5+7+8               6 -155.39 326.14 23.05   0.00\n## 1+3+5+6+7+8+10        9 -150.00 326.18 23.09   0.00\n## 3+5+7+8+9+10          8 -151.96 326.19 23.09   0.00\n## 1+4+5+8+10            7 -153.77 326.21 23.11   0.00\n## 6+7+8+9               6 -155.44 326.23 23.14   0.00\n## 1+3+5+6+8+9+10        9 -150.03 326.24 23.14   0.00\n## 1+5+6+7+8             7 -153.79 326.24 23.14   0.00\n## 3+5+6+8+9             7 -153.80 326.27 23.17   0.00\n## 1+3+8                 5 -156.99 326.29 23.20   0.00\n## 1+4+6+7               6 -155.47 326.30 23.21   0.00\n## 1+3                   4 -158.41 326.30 23.21   0.00\n## 5+7+8+9               6 -155.47 326.30 23.21   0.00\n## 4+5+6+7               6 -155.48 326.31 23.22   0.00\n## 3+4+5+7+8+9           8 -152.06 326.38 23.29   0.00\n## 1+2+3+5+7+9+10        9 -150.12 326.41 23.32   0.00\n## 1+3+7+10              6 -155.53 326.42 23.32   0.00\n## 2+3+5+6+7+8+9+10     10 -147.97 326.42 23.32   0.00\n## 1+2+3+6+7+8+9+10     10 -147.98 326.43 23.33   0.00\n## 3+4+5+6+7+8+9+10     10 -147.98 326.43 23.33   0.00\n## 1+3+4+6+7+8+9+10     10 -147.99 326.45 23.35   0.00\n## 3+4+7+8+9+10          8 -152.10 326.47 23.37   0.00\n## 1+2+8+9               6 -155.55 326.47 23.37   0.00\n## 1+3+4+5+6+7+8+9      10 -148.00 326.49 23.39   0.00\n## 1+4+5+6+8+9           8 -152.14 326.54 23.45   0.00\n## 2+5+7+9               6 -155.59 326.55 23.45   0.00\n## 1+3+5+8+9+10          8 -152.15 326.56 23.46   0.00\n## 3+4+5+8+9+10          8 -152.17 326.60 23.50   0.00\n## 1+5+7+8+10            7 -154.01 326.69 23.60   0.00\n## 2+5+7                 5 -157.19 326.69 23.60   0.00\n## 1+2+3+5+6+7+8+9      10 -148.12 326.71 23.62   0.00\n## 1+2+3+5+6+8+9         9 -150.29 326.75 23.66   0.00\n## 1+3+5+6+8             7 -154.05 326.78 23.68   0.00\n## 1+3+5+6+9+10          8 -152.27 326.81 23.71   0.00\n## 2+5+8+9               6 -155.76 326.89 23.79   0.00\n## 1+6+7+8+9             7 -154.12 326.90 23.80   0.00\n## 3+5+7                 5 -157.30 326.91 23.82   0.00\n## 1+3+4+5+6+9+10        9 -150.38 326.93 23.84   0.00\n## 1+3+4+5               6 -155.80 326.95 23.86   0.00\n## 4+5+6+9               6 -155.80 326.96 23.86   0.00\n## 1+2+5+6+8             7 -154.20 327.06 23.97   0.00\n## 1+5+8+9+10            7 -154.21 327.09 23.99   0.00\n## 1+2+3+5+6+9+10        9 -150.46 327.11 24.01   0.00\n## 1+3+5+6+7+9+10        9 -150.47 327.12 24.02   0.00\n## 1+4+6+9               6 -155.88 327.13 24.03   0.00\n## 4+6+9+10              6 -155.89 327.13 24.04   0.00\n## 1+3+4+5+8             7 -154.27 327.20 24.10   0.00\n## 1+3+5+6+9             7 -154.28 327.23 24.14   0.00\n## 1+4+6+7+8+9+10        9 -150.53 327.24 24.14   0.00\n## 1+2+3+4+5+6+7+8+9+10 12 -143.44 327.31 24.21   0.00\n## 1+4+5+6+7+8+9         9 -150.57 327.33 24.23   0.00\n## 1+3+5+7+8+9           8 -152.53 327.33 24.23   0.00\n## 4+6+7+9+10            7 -154.33 327.33 24.24   0.00\n## 1+2+5+8+9             7 -154.33 327.34 24.24   0.00\n## 1+6+7+8+9+10          8 -152.55 327.36 24.26   0.00\n## 1+5+6+7+8+10          8 -152.55 327.37 24.27   0.00\n## 1+2+7+9               6 -156.01 327.38 24.28   0.00\n## 2+6+7+9               6 -156.03 327.41 24.32   0.00\n## 2+7+9+10              6 -156.03 327.42 24.32   0.00\n## 4+5+6+7+8+9+10        9 -150.65 327.48 24.38   0.00\n## 5+6+7+8+9+10          8 -152.64 327.55 24.46   0.00\n## 1+4+7+8+9+10          8 -152.65 327.56 24.46   0.00\n## 1+3+4+10              6 -156.11 327.59 24.49   0.00\n## 1+3+4+9               6 -156.13 327.62 24.52   0.00\n## 4+5+7+8+9+10          8 -152.69 327.63 24.54   0.00\n## 1+2+3+5+7+8+9+10     10 -148.59 327.65 24.56   0.00\n## 1+4+5+6+7+8+10        9 -150.76 327.70 24.60   0.00\n## 1+3+4+5+7             7 -154.53 327.73 24.63   0.00\n## 4+5+6+7+9             7 -154.59 327.85 24.76   0.00\n## 3+4+5+7+8+10          8 -152.80 327.86 24.77   0.00\n## 1+2+5+7+8+9+10        9 -150.86 327.91 24.81   0.00\n## 1+3+5+10              6 -156.28 327.91 24.81   0.00\n## 1+3+4+5+7+8           8 -152.83 327.92 24.83   0.00\n## 1+3+4+7+8+10          8 -152.84 327.94 24.85   0.00\n## 5+6+7+8+9             7 -154.65 327.96 24.87   0.00\n## 1+4+6+7+9             7 -154.66 327.99 24.90   0.00\n## 1+3+5+7+8+10          8 -152.87 327.99 24.90   0.00\n## 1+2+3+5+6+8+9+10     10 -148.77 328.02 24.92   0.00\n## 2+9+10                5 -157.86 328.02 24.93   0.00\n## 2+5+6+7+8+9+10        9 -150.95 328.09 24.99   0.00\n## 1+3+4+5+6+8+9+10     10 -148.81 328.10 25.01   0.00\n## 3+5                   4 -159.35 328.18 25.08   0.00\n## 3+5+8+9               6 -156.43 328.22 25.12   0.00\n## 1+2+5+6+7+8+10        9 -151.04 328.27 25.17   0.00\n## 2+5+6+8+9             7 -154.80 328.27 25.18   0.00\n## 2+6+7                 5 -157.99 328.28 25.18   0.00\n## 4+5+6+7+10            7 -154.81 328.29 25.20   0.00\n## 1+3+8+9               6 -156.47 328.31 25.21   0.00\n## 2+6+8+9               6 -156.47 328.31 25.21   0.00\n## 1+3+5+7+9             7 -154.83 328.32 25.22   0.00\n## 1+2+7                 5 -158.01 328.34 25.24   0.00\n## 2+7+10                5 -158.02 328.34 25.24   0.00\n## 1+4+5+8+9             7 -154.85 328.36 25.27   0.00\n## 1+3+4+7+9             7 -154.85 328.37 25.28   0.00\n## 2+5+9                 5 -158.03 328.38 25.28   0.00\n## 1+4+5+8+9+10          8 -153.06 328.38 25.28   0.00\n## 3+4+5                 5 -158.05 328.41 25.31   0.00\n## 1+3+5+6+7+8+9+10     10 -148.98 328.44 25.34   0.00\n## 1+4+5+6+8+9+10        9 -151.13 328.44 25.35   0.00\n## 1+2+3+5+6+7+8+10     10 -148.99 328.46 25.36   0.00\n## 1+3+5                 5 -158.08 328.47 25.38   0.00\n## 1+2+6+7+8+9+10        9 -151.16 328.50 25.40   0.00\n## 1+3+4+5+8+10          8 -153.12 328.50 25.40   0.00\n## 1+3+4+5+6+7+8+10     10 -149.04 328.55 25.46   0.00\n## 1+3+4+5+6+7+9+10     10 -149.04 328.56 25.46   0.00\n## 1+4+5+6               6 -156.61 328.57 25.48   0.00\n## 1+3+9+10              6 -156.64 328.63 25.54   0.00\n## 1+4+6+7+10            7 -154.99 328.64 25.55   0.00\n## 1+4+5+7+8+9           8 -153.20 328.66 25.56   0.00\n## 1+3+5+7+10            7 -155.01 328.68 25.59   0.00\n## 4+5+6+10              6 -156.68 328.71 25.62   0.00\n## 1+2+3+5+6+7+9+10     10 -149.13 328.73 25.63   0.00\n## 1+3+4+5+8+9           8 -153.29 328.84 25.74   0.00\n## 1+4+5+7+8+10          8 -153.29 328.84 25.75   0.00\n## 1+5+6+8+9+10          8 -153.31 328.88 25.78   0.00\n## 1+3+4+7+10            7 -155.11 328.88 25.78   0.00\n## 1+4+6+10              6 -156.78 328.91 25.82   0.00\n## 1+2+5+6+7+8+9         9 -151.37 328.93 25.83   0.00\n## 1+2+6+8+9             7 -155.13 328.93 25.84   0.00\n## 1+3+9                 5 -158.32 328.94 25.85   0.00\n## 1+3+4+7+8+9+10        9 -151.46 329.10 26.01   0.00\n## 1+3+5+8               6 -156.88 329.12 26.03   0.00\n## 1+2+5+7               6 -156.88 329.13 26.03   0.00\n## 1+2+5+6+8+9+10        9 -151.48 329.13 26.04   0.00\n## 1+3+7+9+10            7 -155.31 329.29 26.19   0.00\n## 1+5+7+8+9             7 -155.32 329.30 26.20   0.00\n## 1+4+5+6+7             7 -155.32 329.31 26.21   0.00\n## 1+3+5+7+8+9+10        9 -151.57 329.31 26.22   0.00\n## 2+5+7+10              6 -157.02 329.40 26.30   0.00\n## 1+5+7+8+9+10          8 -153.57 329.40 26.31   0.00\n## 3                     3 -161.29 329.44 26.35   0.00\n## 2+5+6+7+9             7 -155.44 329.54 26.45   0.00\n## 2+5+6+7               6 -157.10 329.56 26.46   0.00\n## 1+3+4+5+7+8+9         9 -151.70 329.58 26.48   0.00\n## 3+4+5+7+8+9+10        9 -151.70 329.58 26.49   0.00\n## 3+5+7+10              6 -157.11 329.58 26.49   0.00\n## 1+3+4+5+8+9+10        9 -151.70 329.59 26.49   0.00\n## 3+4+5+7               6 -157.12 329.59 26.50   0.00\n## 1+3+5+6+8+9           8 -153.68 329.62 26.53   0.00\n## 2+5+7+9+10            7 -155.50 329.67 26.57   0.00\n## 1+3+4+5+10            7 -155.50 329.67 26.57   0.00\n## 3+7                   4 -160.12 329.73 26.63   0.00\n## 1+2+5+7+9             7 -155.54 329.74 26.64   0.00\n## 1+3+4+5+9             7 -155.54 329.74 26.64   0.00\n## 2+5+9+10              6 -157.22 329.81 26.71   0.00\n## 1+5+6+7+8+9           8 -153.78 329.83 26.73   0.00\n## 3+5+7+9               6 -157.25 329.86 26.77   0.00\n## 3+5+10                5 -158.89 330.09 26.99   0.00\n## 4+5+6+9+10            7 -155.79 330.26 27.16   0.00\n## 1+4+5+6+9             7 -155.80 330.26 27.17   0.00\n## 1+2+9                 5 -159.01 330.32 27.23   0.00\n## 1+3+4+9+10            7 -155.87 330.41 27.32   0.00\n## 1+4+6+9+10            7 -155.88 330.42 27.33   0.00\n## 2+5                   4 -160.47 330.42 27.33   0.00\n## 2+6+9                 5 -159.08 330.47 27.37   0.00\n## 1+2+6+7+9             7 -155.98 330.63 27.53   0.00\n## 1+2+5+6+8+9           8 -154.20 330.65 27.56   0.00\n## 4+5+6+7+9+10          8 -154.20 330.66 27.57   0.00\n## 1+2+7+9+10            7 -156.00 330.66 27.57   0.00\n## 3+7+10                5 -159.18 330.68 27.58   0.00\n## 1+3+4+5+7+9           8 -154.23 330.71 27.62   0.00\n## 2+6+7+9+10            7 -156.03 330.72 27.62   0.00\n## 1+4+6+7+9+10          8 -154.27 330.81 27.71   0.00\n## 1+3+5+9+10            7 -156.08 330.82 27.73   0.00\n## 3+5+9                 5 -159.31 330.92 27.83   0.00\n## 1+5+6+7+8+9+10        9 -152.37 330.92 27.83   0.00\n## 6+7+9                 5 -159.32 330.95 27.85   0.00\n## 1+4                   4 -160.76 331.00 27.91   0.00\n## 2+6+9+10              6 -157.82 331.01 27.91   0.00\n## 1+2+9+10              6 -157.83 331.03 27.93   0.00\n## 2+10                  4 -160.81 331.10 28.00   0.00\n## 2+5+6+9               6 -157.87 331.10 28.01   0.00\n## 1+4+7                 5 -159.40 331.11 28.01   0.00\n## 1+2+5+9               6 -157.88 331.12 28.03   0.00\n## 1+2+3+5+6+7+8+9+10   11 -147.96 331.13 28.03   0.00\n## 1+3+4+5+6+7+8+9+10   11 -147.98 331.15 28.06   0.00\n## 3+4                   4 -160.84 331.16 28.06   0.00\n## 1+2+6+7               6 -157.95 331.25 28.16   0.00\n## 2+5+10                5 -159.48 331.26 28.16   0.00\n## 1+3+4+5+7+10          8 -154.52 331.31 28.21   0.00\n## 2+6+7+10              6 -157.98 331.31 28.22   0.00\n## 1+3+5+9               6 -157.98 331.32 28.23   0.00\n## 3+9                   4 -160.94 331.35 28.26   0.00\n## 1+4+5+6+7+8+9+10     10 -150.44 331.36 28.27   0.00\n## 3+4+5+9               6 -158.00 331.36 28.27   0.00\n## 1+3+4+5+7+8+10        9 -152.60 331.37 28.28   0.00\n## 1+2+7+10              6 -158.01 331.39 28.29   0.00\n## 1+3+5+8+9             7 -156.38 331.43 28.34   0.00\n## 1+4+5+6+7+9           8 -154.59 331.44 28.34   0.00\n## 3+4+5+10              6 -158.04 331.45 28.35   0.00\n## 1+4+5+7+8+9+10        9 -152.64 331.46 28.36   0.00\n## 3+7+9                 5 -159.65 331.61 28.51   0.00\n## 1+3+5+7+9+10          8 -154.77 331.79 28.70   0.00\n## 1+4+5+6+7+10          8 -154.81 331.88 28.78   0.00\n## 1+4+5+6+10            7 -156.61 331.88 28.78   0.00\n## 3+4+5+7+10            7 -156.63 331.92 28.82   0.00\n## 1+3+4+7+9+10          8 -154.84 331.94 28.84   0.00\n## 3+10                  4 -161.29 332.05 28.96   0.00\n## 1+2+5+6+7+8+9+10     10 -150.80 332.08 28.99   0.00\n## 2+9                   4 -161.35 332.18 29.08   0.00\n## 1+4+9                 5 -159.99 332.29 29.20   0.00\n## 1+2+5+7+10            7 -156.85 332.37 29.28   0.00\n## 1+2+5+6+7             7 -156.88 332.43 29.34   0.00\n## 2+5+6                 5 -160.08 332.46 29.36   0.00\n## 3+4+7                 5 -160.12 332.54 29.45   0.00\n## 2+5+6+7+10            7 -156.98 332.64 29.54   0.00\n## 1+3+4+5+9+10          8 -155.23 332.72 29.62   0.00\n## 3+4+5+7+9             7 -157.06 332.79 29.70   0.00\n## 1+4+7+9               6 -158.72 332.80 29.70   0.00\n## 3+5+7+9+10            7 -157.08 332.84 29.74   0.00\n## 1+2+6+9               6 -158.78 332.92 29.82   0.00\n## 1+3+4+5+7+8+9+10     10 -151.25 332.97 29.88   0.00\n## 3+5+9+10              6 -158.81 332.97 29.88   0.00\n## 3+4+7+10              6 -158.82 333.01 29.91   0.00\n## 5+6+7+9               6 -158.84 333.04 29.95   0.00\n## 2+5+6+7+9+10          8 -155.40 333.06 29.97   0.00\n## 1+2+5+9+10            7 -157.20 333.06 29.97   0.00\n## 2+5+6+9+10            7 -157.21 333.10 30.00   0.00\n## 3+4+9                 5 -160.40 333.10 30.00   0.00\n## 1+2+5+6+7+9           8 -155.44 333.13 30.04   0.00\n## 1+2+5                 5 -160.46 333.22 30.13   0.00\n## 1+2+5+7+9+10          8 -155.49 333.24 30.14   0.00\n## 3+7+9+10              6 -158.96 333.28 30.18   0.00\n## 2+6                   4 -161.91 333.31 30.21   0.00\n## 2+6+10                5 -160.52 333.35 30.26   0.00\n## 3+4+10                5 -160.58 333.46 30.37   0.00\n## 1+6+7+9               6 -159.08 333.52 30.43   0.00\n## 6+7+9+10              6 -159.08 333.53 30.43   0.00\n## 4+9                   4 -162.05 333.59 30.49   0.00\n## 1+4+10                5 -160.70 333.70 30.60   0.00\n## 1+2+5+10              6 -159.19 333.74 30.64   0.00\n## 1+4+7+10              6 -159.21 333.78 30.68   0.00\n## 1+4+5                 5 -160.74 333.79 30.69   0.00\n## 1+8                   4 -162.17 333.83 30.73   0.00\n## 7+9                   4 -162.18 333.84 30.74   0.00\n## 1+4+5+6+9+10          8 -155.79 333.85 30.75   0.00\n## 1+2+10                5 -160.79 333.89 30.80   0.00\n## 3+9+10                5 -160.89 334.08 30.99   0.00\n## 1+4+5+7               6 -159.37 334.10 31.01   0.00\n## 2+8+9                 5 -160.93 334.17 31.08   0.00\n## 1+2+6+7+9+10          8 -155.97 334.21 31.11   0.00\n## 2+5+6+10              6 -159.46 334.29 31.19   0.00\n## 1+2+6+9+10            7 -157.82 334.30 31.21   0.00\n## 1+2+5+6+9             7 -157.84 334.35 31.25   0.00\n## 1+4+5+6+7+9+10        9 -154.18 334.53 31.44   0.00\n## 1+2+6+7+10            7 -157.95 334.56 31.46   0.00\n## 1+3+4+5+7+9+10        9 -154.22 334.62 31.53   0.00\n## 4+5+9                 5 -161.16 334.63 31.54   0.00\n## 3+4+7+9               6 -159.64 334.64 31.54   0.00\n## 4+7+9                 5 -161.18 334.66 31.56   0.00\n## 3+4+5+9+10            7 -158.00 334.67 31.57   0.00\n## 1+4+9+10              6 -159.90 335.17 32.07   0.00\n## 1+7+9                 5 -161.43 335.18 32.08   0.00\n## 1+4+5+9               6 -159.92 335.21 32.11   0.00\n## 1+2+5+6               6 -159.98 335.32 32.22   0.00\n## 3+4+5+7+9+10          8 -156.61 335.49 32.39   0.00\n## 1+5+8                 5 -161.60 335.50 32.41   0.00\n## 6+7                   4 -163.07 335.63 32.53   0.00\n## 4+5+7+9               6 -160.14 335.64 32.55   0.00\n## 4                     3 -164.47 335.79 32.70   0.00\n## 1+4+7+9+10            7 -158.59 335.84 32.74   0.00\n## 3+4+9+10              6 -160.25 335.87 32.77   0.00\n## 1+8+9                 5 -161.78 335.87 32.78   0.00\n## 4+7+9+10              6 -160.26 335.89 32.79   0.00\n## 3+4+7+9+10            7 -158.63 335.93 32.83   0.00\n## 1+4+5+7+9             7 -158.64 335.95 32.85   0.00\n## 1+2+5+6+7+10          8 -156.85 335.97 32.87   0.00\n## 1+2+6+10              6 -160.33 336.03 32.93   0.00\n## 4+7+10                5 -161.87 336.06 32.96   0.00\n## 1+2+6                 5 -161.91 336.12 33.02   0.00\n## 5+6+7+9+10            7 -158.73 336.13 33.03   0.00\n## 4+5                   4 -163.33 336.14 33.04   0.00\n## 1+6+8                 5 -161.92 336.15 33.06   0.00\n## 1+5+6+7+9             7 -158.76 336.18 33.08   0.00\n## 5+8                   4 -163.37 336.22 33.13   0.00\n## 5+7+9                 5 -161.96 336.23 33.13   0.00\n## 4+9+10                5 -161.96 336.23 33.14   0.00\n## 6+9+10                5 -161.97 336.24 33.14   0.00\n## 7+9+10                5 -162.13 336.56 33.47   0.00\n## 1+6+7+9+10            7 -158.99 336.64 33.55   0.00\n## 1+2+5+6+9+10          8 -157.20 336.66 33.56   0.00\n## 4+7                   4 -163.59 336.67 33.57   0.00\n## 5+6+7                 5 -162.20 336.70 33.61   0.00\n## 1+4+5+10              6 -160.67 336.70 33.61   0.00\n## 1+2                   4 -163.64 336.76 33.66   0.00\n## 2+8                   4 -163.65 336.78 33.68   0.00\n## 1+2+5+6+10            7 -159.07 336.81 33.71   0.00\n## 4+5+7                 5 -162.30 336.90 33.80   0.00\n## 1+2+5+6+7+9+10        9 -155.40 336.98 33.89   0.00\n## 1+4+5+7+10            7 -159.18 337.03 33.94   0.00\n## 1+5+6+8               6 -160.88 337.12 34.02   0.00\n## 4+10                  4 -164.08 337.64 34.54   0.00\n## 4+5+7+10              6 -161.14 337.64 34.54   0.00\n## 4+5+9+10              6 -161.16 337.67 34.57   0.00\n## 4+5+7+9+10            7 -159.58 337.83 34.73   0.00\n## 1+6+8+9               6 -161.27 337.90 34.81   0.00\n## 6+7+10                5 -162.86 338.02 34.92   0.00\n## 1+7+9+10              6 -161.33 338.03 34.93   0.00\n## 1+5+8+9               6 -161.42 338.19 35.10   0.00\n## 1+5+7+9               6 -161.43 338.22 35.12   0.00\n## 5+8+9                 5 -162.97 338.24 35.15   0.00\n## 1+4+5+9+10            7 -159.83 338.32 35.23   0.00\n## 1+6+7                 5 -163.07 338.46 35.36   0.00\n## 4+5+10                5 -163.18 338.67 35.58   0.00\n## 5+6+9+10              6 -161.66 338.68 35.59   0.00\n## 1+7                   4 -164.61 338.70 35.60   0.00\n## 9+10                  4 -164.76 339.00 35.91   0.00\n## 5+6+8                 5 -163.37 339.05 35.95   0.00\n## 1+6+9+10              6 -161.95 339.27 36.17   0.00\n## 5+7+9+10              6 -161.96 339.28 36.19   0.00\n## 1+4+5+7+9+10          8 -158.51 339.29 36.19   0.00\n## 7                     3 -166.23 339.31 36.21   0.00\n## 1+5+6+7               6 -162.12 339.60 36.50   0.00\n## 5+6+7+10              6 -162.13 339.63 36.53   0.00\n## 1+5+6+8+9             7 -160.50 339.66 36.56   0.00\n## 1+5+6+7+9+10          8 -158.70 339.66 36.57   0.00\n## 1+9+10                5 -163.78 339.86 36.77   0.00\n## 2                     3 -166.97 340.80 37.70   0.00\n## 1+6+7+10              6 -162.80 340.95 37.85   0.00\n## 1+7+10                5 -164.34 340.98 37.89   0.00\n## 1+5+7                 5 -164.35 341.00 37.91   0.00\n## 5+6+8+9               6 -162.93 341.22 38.12   0.00\n## 1+5+7+9+10            7 -161.33 341.33 38.23   0.00\n## 5+9+10                5 -164.60 341.50 38.40   0.00\n## 8+9                   4 -166.01 341.51 38.41   0.00\n## 5+7                   4 -166.13 341.75 38.65   0.00\n## 7+10                  4 -166.15 341.78 38.69   0.00\n## 6+8                   4 -166.25 341.97 38.88   0.00\n## 1+5+6+9+10            7 -161.66 341.99 38.89   0.00\n## 1+5+6+7+10            7 -161.96 342.60 39.50   0.00\n## 6+8+9                 5 -165.20 342.70 39.60   0.00\n## 1+5+9+10              6 -163.77 342.90 39.80   0.00\n## 9                     3 -168.35 343.55 40.45   0.00\n## 1+5+7+10              6 -164.14 343.64 40.54   0.00\n## 5+7+10                5 -166.11 344.52 41.42   0.00\n## 5+9                   4 -167.62 344.73 41.63   0.00\n## 8                     3 -169.05 344.95 41.85   0.00\n## 1+9                   4 -167.83 345.14 42.04   0.00\n## 1+6+9                 5 -166.44 345.19 42.09   0.00\n## 6+10                  4 -167.93 345.33 42.24   0.00\n## 5+6+9                 5 -166.54 345.39 42.30   0.00\n## 6+9                   4 -168.33 346.14 43.04   0.00\n## 1+10                  4 -168.41 346.29 43.20   0.00\n## 5+6+10                5 -167.14 346.59 43.49   0.00\n## 1+5+6+9               6 -165.63 346.61 43.52   0.00\n## 1+6+10                5 -167.49 347.29 44.19   0.00\n## 1+5+9                 5 -167.60 347.50 44.41   0.00\n## 1+5+6+10              6 -166.45 348.26 45.16   0.00\n## 1+5+10                5 -168.00 348.31 45.21   0.00\n## 10                    3 -171.08 349.02 45.92   0.00\n## 5+10                  4 -171.06 351.59 48.50   0.00\n## 5+6                   4 -175.13 359.75 56.65   0.00\n## 5                     3 -176.59 360.03 56.94   0.00\n## 1+5                   4 -176.35 362.18 59.08   0.00\n## 1+5+6                 5 -175.06 362.43 59.34   0.00\n## (Null)                2 -180.19 364.79 61.69   0.00\n## 1                     3 -179.21 365.28 62.18   0.00\n## 6                     3 -179.93 366.72 63.62   0.00\n## 1+6                   4 -179.00 367.48 64.39   0.00\n## \n## Term codes: \n##   am carb  cyl disp drat gear  kml qsec   vs   wt \n##    1    2    3    4    5    6    7    8    9   10 \n## \n## Model-averaged coefficients:  \n## (full average) \n##             Estimate Std. Error Adjusted SE z value Pr(&gt;|z|)    \n## (Intercept)  70.8539    98.1389    100.4683   0.705 0.480663    \n## carb         21.4717     5.4456      5.5937   3.839 0.000124 ***\n## disp          0.4453     0.1401      0.1432   3.109 0.001875 ** \n## wt          -20.6451    16.9931     17.3080   1.193 0.232944    \n## vs            4.9071    12.3728     12.6790   0.387 0.698736    \n## cyl           1.8423     5.4948      5.6138   0.328 0.742784    \n## drat         -1.2146     6.7301      6.9936   0.174 0.862127    \n## qsec         -2.1062     4.6592      4.7408   0.444 0.656841    \n## kml           0.1869     1.4603      1.5156   0.123 0.901832    \n## am            0.5697     7.5870      7.8770   0.072 0.942342    \n## gear          1.3335     6.8393      7.0322   0.190 0.849599    \n##  \n## (conditional average) \n##             Estimate Std. Error Adjusted SE z value Pr(&gt;|z|)    \n## (Intercept)  70.8539    98.1389    100.4683   0.705 0.480663    \n## carb         21.6289     5.1451      5.3027   4.079 4.53e-05 ***\n## disp          0.4508     0.1318      0.1352   3.334 0.000855 ***\n## wt          -28.6308    13.1083     13.6677   2.095 0.036190 *  \n## vs           17.9458    18.0517     18.8126   0.954 0.340123    \n## cyl           7.5820     8.9855      9.2835   0.817 0.414090    \n## drat         -6.5756    14.4903     15.1510   0.434 0.664283    \n## qsec         -6.5823     6.1951      6.3856   1.031 0.302633    \n## kml           1.0361     3.3075      3.4425   0.301 0.763436    \n## am            3.2174    17.7921     18.4899   0.174 0.861860    \n## gear          6.9068    14.2750     14.7525   0.468 0.639659    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# adäquatest model gemäss multimodel inference\nmodel_ad &lt;- lm(hp ~ carb + disp + wt, data = mtcars)\nsummary(model_ad)\n## \n## Call:\n## lm(formula = hp ~ carb + disp + wt, data = mtcars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -45.225 -14.235   3.879  20.621  39.785 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(&gt;|t|)    \n## (Intercept)  53.16715   18.16036   2.928  0.00671 ** \n## carb         23.57691    2.99391   7.875 1.41e-08 ***\n## disp          0.51663    0.07669   6.736 2.59e-07 ***\n## wt          -28.59214    9.87292  -2.896  0.00725 ** \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 24.32 on 28 degrees of freedom\n## Multiple R-squared:  0.8863, Adjusted R-squared:  0.8742 \n## F-statistic: 72.78 on 3 and 28 DF,  p-value: 2.462e-13"
  },
  {
    "objectID": "statKons/StatKons4_Demo_GLM.html#poisson-regression",
    "href": "statKons/StatKons4_Demo_GLM.html#poisson-regression",
    "title": "StatKons4: Demo",
    "section": "Poisson Regression",
    "text": "Poisson Regression\n\n############\n# quasipoisson regression\n############\n\ncars &lt;- mtcars |&gt;\n  mutate(kml = (235.214583 / mpg))\n## Error in mutate(mtcars, kml = (235.214583/mpg)): could not find function \"mutate\"\n\nglm.poisson &lt;- glm(hp ~ kml, data = cars, family = \"poisson\")\n## Error in eval(predvars, data, env): object 'hp' not found\n\nsummary(glm.poisson) # klare overdisperion\n## Error in summary(glm.poisson): object 'glm.poisson' not found\n\n# deshalb quasipoisson\nglm.quasipoisson &lt;- glm(hp ~ kml, data = cars, family = quasipoisson(link = log))\n## Error in eval(predvars, data, env): object 'hp' not found\n\nsummary(glm.quasipoisson)\n## Error in summary(glm.quasipoisson): object 'glm.quasipoisson' not found\n\n# visualisiere\nggplot2::ggplot(cars, aes(x = kml, y = hp)) +\n  geom_point(size = 8) +\n  geom_smooth(\n    method = \"glm\", method.args = list(family = \"poisson\"), se = F,\n    color = \"green\", size = 2\n  ) +\n  scale_x_continuous(limits = c(0, 35)) +\n  scale_y_continuous(limits = c(0, 400)) +\n  theme_classic()\n## Error in `geom_point()`:\n## ! Problem while computing aesthetics.\n## ℹ Error occurred in the 1st layer.\n## Caused by error in `FUN()`:\n## ! object 'kml' not found\n\n# Rücktransformation meines Outputs für ein besseres Verständnis\nglm.quasi.back &lt;- exp(coef(glm.quasipoisson))\n## Error in coef(glm.quasipoisson): object 'glm.quasipoisson' not found\n\n# für ein schönes ergebnis\nglm.quasi.back |&gt;\n  broom::tidy() |&gt;\n  knitr::kable(digits = 3)\n## Error in broom::tidy(glm.quasi.back): object 'glm.quasi.back' not found\n\n# for more infos, also for posthoc tests\n# here: https://rcompanion.org/handbook/J_01.html"
  },
  {
    "objectID": "statKons/StatKons4_Demo_GLM.html#logistische-regression",
    "href": "statKons/StatKons4_Demo_GLM.html#logistische-regression",
    "title": "StatKons4: Demo",
    "section": "logistische Regression",
    "text": "logistische Regression\n\n############\n# logistische regression\n############\n\ncars &lt;- mtcars\n\n# erstelle das modell\nglm.binar &lt;- glm(vs ~ hp, data = cars, family = binomial(link = logit)) \n\n#achtung Model gibt Koeffizienten als logit() zurück\nsummary(glm.binar)\n## \n## Call:\n## glm(formula = vs ~ hp, family = binomial(link = logit), data = cars)\n## \n## Deviance Residuals: \n##      Min        1Q    Median        3Q       Max  \n## -2.12148  -0.20302  -0.01598   0.51173   1.20083  \n## \n## Coefficients:\n##             Estimate Std. Error z value Pr(&gt;|z|)   \n## (Intercept)  8.37802    3.21593   2.605  0.00918 **\n## hp          -0.06856    0.02740  -2.502  0.01234 * \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## (Dispersion parameter for binomial family taken to be 1)\n## \n##     Null deviance: 43.860  on 31  degrees of freedom\n## Residual deviance: 16.838  on 30  degrees of freedom\n## AIC: 20.838\n## \n## Number of Fisher Scoring iterations: 7\n\n# überprüfe das modell\ncars$predicted &lt;- predict(glm.binar, type = \"response\")\n\n# visualisiere\nggplot(cars, aes(x = hp, y = vs)) +    \n  geom_point(size = 8) +\n  geom_point(aes(y = predicted), shape  = 1, size = 6) +\n  guides(color = \"none\") +\n  geom_smooth(method = \"glm\", method.args = list(family = 'binomial'), \n              se = FALSE,\n              size = 2) +\n  # geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +\n  mytheme\n\n\n\n\n#Modeldiagnostik (wenn nicht signifikant, dann OK)\n1 - pchisq(glm.binar$deviance,glm.binar$df.resid)  \n## [1] 0.9744718\n\n#Modellgüte (pseudo-R²)\n1 - (glm.binar$dev / glm.binar$null)  \n## [1] 0.6161072\n\n#Steilheit der Beziehung (relative Änderung der odds von x + 1 vs. x)\nexp(glm.binar$coefficients[2])\n##        hp \n## 0.9337368\n\n#LD50 (wieso negativ: weil zweiter koeffizient negative steigung hat)\nabs(glm.binar$coefficients[1]/glm.binar$coefficients[2])\n## (Intercept) \n##    122.1986\n\n# kreuztabelle (confusion matrix): fasse die ergebnisse aus predict und \n# \"gegebenheiten, realität\" zusammen\ntab1 &lt;- table(cars$predicted&gt;.5, cars$vs)\ndimnames(tab1) &lt;- list(c(\"M:S-type\",\"M:V-type\"), c(\"T:S-type\", \"T:V-type\"))\ntab1 \n##          T:S-type T:V-type\n## M:S-type       15        2\n## M:V-type        3       12\n\nprop.table(tab1, 2) \n##           T:S-type  T:V-type\n## M:S-type 0.8333333 0.1428571\n## M:V-type 0.1666667 0.8571429\n#was könnt ihr daraus ablesen? Ist unser Modell genau?\n\n# Funktion die die logits in Wahrscheinlichkeiten transformiert\n# mehr infos hier: https://sebastiansauer.github.io/convert_logit2prob/\n# dies ist interessant, falls ihr mal ein kategorialer Prädiktor habt\nlogit2prob &lt;- function(logit){\n  odds &lt;- exp(logit)\n  prob &lt;- odds / (1 + odds)\n  return(prob)\n}"
  },
  {
    "objectID": "statKons/StatKons4_Demo_GLM.html#gams",
    "href": "statKons/StatKons4_Demo_GLM.html#gams",
    "title": "StatKons4: Demo",
    "section": "GAM’s",
    "text": "GAM’s\n\n###########\n# LOESS & GAM\n###########\n\nggplot2::ggplot(mtcars, aes(x = mpg, y = hp)) +\n  geom_point(size = 8) +\n  geom_smooth(method = \"gam\", se = F, color = \"green\", size = 2, formula = y ~ s(x, bs = \"cs\")) +\n  geom_smooth(method = \"loess\", se = F, color = \"red\", size = 2) +\n  geom_smooth(method = \"glm\", size = 2, color = \"blue\", se = F) +\n  scale_x_continuous(limits = c(0, 35)) +\n  scale_y_continuous(limits = c(0, 400)) +\n  mytheme\n\n\n\n\nggplot2::ggplot(mtcars, aes(x = mpg, y = hp)) +\n  geom_point(size = 8) +\n  geom_smooth(method = \"gam\", se = F, color = \"green\", size = 2, formula = y ~ s(x, bs = \"cs\")) +\n  # geom_smooth(method = \"loess\", se = F, color = \"red\", size = 2) +\n  geom_smooth(method = \"glm\", size = 2, color = \"grey\", se = F) +\n  scale_x_continuous(limits = c(0, 35)) +\n  scale_y_continuous(limits = c(0, 400)) +\n  mytheme"
  },
  {
    "objectID": "RaumAn.html",
    "href": "RaumAn.html",
    "title": "Räumliche Analysen",
    "section": "",
    "text": "Titel\n\n\nDatum\n\n\nLesson\n\n\nThema\n\n\n\n\n\n\nVorbereitung\n\n\n2023-11-27\n\n\nRaumAn1\n\n\nVorbereitung\n\n\n\n\nRauman 1: Übung A\n\n\n2023-11-27\n\n\nRaumAn1\n\n\nEinführung\n\n\n\n\nRauman 1: Übung B\n\n\n2023-11-27\n\n\nRaumAn1\n\n\nSpatial Joins\n\n\n\n\nRauman 2: Übung A\n\n\n2023-11-28\n\n\nRaumAn2\n\n\nVector Data\n\n\n\n\nRauman 2: Übung B\n\n\n2023-11-28\n\n\nRaumAn2\n\n\nEinführung Rasterdaten\n\n\n\n\nRauman 3: Übung A\n\n\n2023-12-04\n\n\nRaumAn3\n\n\nDichteschätzung\n\n\n\n\nRauman 3: Übung B\n\n\n2023-12-04\n\n\nRaumAn3\n\n\nRäumliche Interpolation\n\n\n\n\nRauman 3: Übung C (Optional)\n\n\n2023-12-04\n\n\nRaumAn3\n\n\nG-Funktion\n\n\n\n\nRauman 4: Übung\n\n\n2023-12-05\n\n\nRaumAn4\n\n\nMorans I\n\n\n\n\nRauman 5: Übung A\n\n\n2023-12-11\n\n\nRaumAn5\n\n\nMulti-Criteria Evaluation (MCE)\n\n\n\n\nRauman 5: Übung B\n\n\n2023-12-11\n\n\nRaumAn5\n\n\nMulti-Criteria Evaluation (MCE)\n\n\n\n\n\n\nKeine Treffer"
  },
  {
    "objectID": "rauman/Rauman0_Vorbereitung.html",
    "href": "rauman/Rauman0_Vorbereitung.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "Im Rahmen von Rauman 1 - 5 werden wir einige R Packages brauchen. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Analog der Vorbereitungsübung in Prepro1 könnt ihr mit nachstehendem Code alle noch nicht installierten packages automatisch installieren.\n\nipak &lt;- function(pkg) {\n  new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) {\n    install.packages(new.pkg, dependencies = TRUE)\n  }\n}\n\npackages &lt;- c(\n  \"sf\", \"dplyr\", \"ggplot2\", \"spatstat.geom\", \"spatstat.explore\",\n  \"gstat\", \"tidyr\", \"terra\", \"tmap\"\n)\n\nipak(packages)\n\nZudem könnt ihr die Daten für die Übungen auf Moodle herunterladen."
  },
  {
    "objectID": "rauman/Rauman1_Uebung_A.html#aufgabe-1-vektor-daten-importieren",
    "href": "rauman/Rauman1_Uebung_A.html#aufgabe-1-vektor-daten-importieren",
    "title": "Rauman 1: Übung A",
    "section": "Aufgabe 1: Vektor Daten importieren",
    "text": "Aufgabe 1: Vektor Daten importieren\nImportiere die Datensätze kantone.gpkg und gemeinden.gpkg wie folgt. Es handelt sich um Geodatensätze im Format Geopackage (“*.gpkg”), eine alternatives Datenformat zum bekannteren Format “Shapefiles”.\n\nkantone &lt;- read_sf(\"datasets/rauman/kantone.gpkg\")\ngemeinden &lt;- read_sf(\"datasets/rauman/gemeinden.gpkg\")\n\nSchau Dir die importierten Datensätze an.\n\n\n\n\n\n\nHinweis\n\n\n\nAm meisten Informationen zu sf Objekten bekommst du, wenn du dir den Datensatz in der Konsole anschaust (in dem du den Variabel-Name in der Konsole eintippst). Mit dem RStudio Viewer werden sf Objekte nur sehr langsam geladen und die Metadaten werden nicht angezeigt."
  },
  {
    "objectID": "rauman/Rauman1_Uebung_A.html#aufgabe-2-daten-visualisieren",
    "href": "rauman/Rauman1_Uebung_A.html#aufgabe-2-daten-visualisieren",
    "title": "Rauman 1: Übung A",
    "section": "Aufgabe 2: Daten visualisieren",
    "text": "Aufgabe 2: Daten visualisieren\nEine sehr einfache Möglichkeit, sf-Objekte zu visualiseren ist die base-R Funktion plot(). Führe die angegebenen R-Befehle aus und studiere die entstehenden Plots. Welche Unterschiede findest Du? Wie erklärst Du diese Unterschiede?\n\n# ohne max.plot = 1 macht R einen Plot pro Spalte\nplot(gemeinden, max.plot = 1)\n\n\n\n\n# Alternativ kann man auch eine spezifische Spalte plotten\nplot(kantone[\"KANTONSFLA\"])"
  },
  {
    "objectID": "rauman/Rauman1_Uebung_A.html#input-koodinatensysteme",
    "href": "rauman/Rauman1_Uebung_A.html#input-koodinatensysteme",
    "title": "Rauman 1: Übung A",
    "section": "Input: Koodinatensysteme",
    "text": "Input: Koodinatensysteme\nIn der obigen Visualierung fällt folgendes auf:\n\ndie X/Y Achsen weisen zwei ganz unterschiedliche Zahlenbereiche auf (vergleiche die Achsenbeschriftungen)\nder Umriss der Schweiz sieht in den beiden Datensätzen unterschiedlich aus (kantone ist gegenüber gemeinden gestaucht)\n\nDies hat natürlich damit zu tun, dass die beiden Datensätze in unterschiedlichen Koordinatensystemen erfasst wurden. Koordinatensysteme werden mit CRS (Coordinate Reference System) abgekürzt. Mit st_crs() können die zugewiesenen Koordinatensysteme abgefragt werden.\n\nst_crs(kantone)\n## Coordinate Reference System:\n##   User input: Undefined Cartesian SRS \n##   wkt:\n## ENGCRS[\"Undefined Cartesian SRS\",\n##     EDATUM[\"\"],\n##     CS[Cartesian,2],\n##         AXIS[\"(E)\",east,\n##             ORDER[1],\n##             LENGTHUNIT[\"Meter\",1]],\n##         AXIS[\"(N)\",north,\n##             ORDER[2],\n##             LENGTHUNIT[\"Meter\",1]]]\nst_crs(gemeinden)\n## Coordinate Reference System:\n##   User input: Undefined Cartesian SRS \n##   wkt:\n## ENGCRS[\"Undefined Cartesian SRS\",\n##     EDATUM[\"\"],\n##     CS[Cartesian,2],\n##         AXIS[\"(E)\",east,\n##             ORDER[1],\n##             LENGTHUNIT[\"Meter\",1]],\n##         AXIS[\"(N)\",north,\n##             ORDER[2],\n##             LENGTHUNIT[\"Meter\",1]]]\n\nLeider sind in unserem Fall keine Koordinatensysteme zugewiesen. Mit etwas Erfahrung kann man das Koordinatensystem aber erraten, so viele kommen nämlich gar nicht in Frage. Am häufigsten trifft man hierzulande eines der drei folgenden Koordinatensysteme an:\n\nCH1903 LV03: das alte Koordinatensystem der Schweiz\nCH1903+ LV95: das neue Koordinatensystem der Schweiz\nWGS84: ein häufig genutztes, weltumspannendes geodätisches Koordinatensystem, sprich die Koordinaten werden in Länge und Breite angegeben (Lat/Lon).\n\nNun gilt es, anhand der Koordinaten die in der Spalte geometry ersichtlich sind, das korrekte Koordinatensystem festzustellen. Wenn man auf map.geo.admin.ch mit der rechten Maustaste einen Ort anwählt, erfährt man die Koordinaten dieses Ortes in verschiedenen Koordinatenbezugssystemen.\n\n\nWenn man diese Koordinaten mit den Koordinaten unserer Datensätze vergleicht, dann ist schnell klar, dass es sich beim Datensatz kantone um das Koordinatenbezugsystem (CRS) WGS84 handelt. Wir können diese Information nutzen um das CRS unserers Datensatzes mit st_set_crs() zu setzen.\n\n# Zuweisen mit st_set_crs()...\nkantone &lt;- st_set_crs(kantone, \"WGS84\")\n\nWenn wir die CRS Information nun abrufen, sehen wir das diese Zuweisung funktioniert hat.\n\n# ... abfragen mit st_crs()\nst_crs(kantone)\n## Coordinate Reference System:\n##   User input: WGS84 \n##   wkt:\n## GEOGCRS[\"WGS 84\",\n##     DATUM[\"World Geodetic System 1984\",\n##         ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n##             LENGTHUNIT[\"metre\",1]]],\n##     PRIMEM[\"Greenwich\",0,\n##         ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     CS[ellipsoidal,2],\n##         AXIS[\"geodetic latitude (Lat)\",north,\n##             ORDER[1],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##         AXIS[\"geodetic longitude (Lon)\",east,\n##             ORDER[2],\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##     ID[\"EPSG\",4326]]\n\nEtwas komplizierter ist es, wenn wir das CRS vom Datensatz gemeinden setzen wollen. Im Vergleich mit map.geo.admin.ch sehen wir, dass es sich hier um das CRS CH1903+ LV95 handeln muss. Wenn wir diesen Namen für unsere CRS Zuweisung verwenden möchten, funktioniert das nicht:\n\n# Zuweisen mit st_set_crs()...\ngemeinden &lt;- st_set_crs(gemeinden, \"CH1903+ LV95\")\n\n# ... abfragen mit st_crs()\nst_crs(gemeinden)\n\nDie ausgeschriebenen Namen dieser CRS sind fehleranfällig. Deshalb ist es besser, mit den jeweiligen EPSG Codes der Bezugssysteme zu arbeiten. Diese EPSG Codes kann man auf folgender Website erfahren: epsg.io/map. Es lohnt sich aber, die EPSG Codes der für uns relevanten CRS zu notieren:\n\nCH1903 LV03: EPSG:21781\nCH1903+ LV95: EPSG:2056\nWGS84: EPSG:4326\n\nDieser Code können wir nutzen, um das CRS des Datensatz gemeinde zu setzen:\n\n# Zuweisen mit st_set_crs()...\ngemeinden &lt;- st_set_crs(gemeinden, 2056)\n\n# ... abfragen mit st_crs()\nst_crs(gemeinden)\n## Coordinate Reference System:\n##   User input: EPSG:2056 \n##   wkt:\n## PROJCRS[\"CH1903+ / LV95\",\n##     BASEGEOGCRS[\"CH1903+\",\n##         DATUM[\"CH1903+\",\n##             ELLIPSOID[\"Bessel 1841\",6377397.155,299.1528128,\n##                 LENGTHUNIT[\"metre\",1]]],\n##         PRIMEM[\"Greenwich\",0,\n##             ANGLEUNIT[\"degree\",0.0174532925199433]],\n##         ID[\"EPSG\",4150]],\n##     CONVERSION[\"Swiss Oblique Mercator 1995\",\n##         METHOD[\"Hotine Oblique Mercator (variant B)\",\n##             ID[\"EPSG\",9815]],\n##         PARAMETER[\"Latitude of projection centre\",46.9524055555556,\n##             ANGLEUNIT[\"degree\",0.0174532925199433],\n##             ID[\"EPSG\",8811]],\n##         PARAMETER[\"Longitude of projection centre\",7.43958333333333,\n##             ANGLEUNIT[\"degree\",0.0174532925199433],\n##             ID[\"EPSG\",8812]],\n##         PARAMETER[\"Azimuth of initial line\",90,\n##             ANGLEUNIT[\"degree\",0.0174532925199433],\n##             ID[\"EPSG\",8813]],\n##         PARAMETER[\"Angle from Rectified to Skew Grid\",90,\n##             ANGLEUNIT[\"degree\",0.0174532925199433],\n##             ID[\"EPSG\",8814]],\n##         PARAMETER[\"Scale factor on initial line\",1,\n##             SCALEUNIT[\"unity\",1],\n##             ID[\"EPSG\",8815]],\n##         PARAMETER[\"Easting at projection centre\",2600000,\n##             LENGTHUNIT[\"metre\",1],\n##             ID[\"EPSG\",8816]],\n##         PARAMETER[\"Northing at projection centre\",1200000,\n##             LENGTHUNIT[\"metre\",1],\n##             ID[\"EPSG\",8817]]],\n##     CS[Cartesian,2],\n##         AXIS[\"(E)\",east,\n##             ORDER[1],\n##             LENGTHUNIT[\"metre\",1]],\n##         AXIS[\"(N)\",north,\n##             ORDER[2],\n##             LENGTHUNIT[\"metre\",1]],\n##     USAGE[\n##         SCOPE[\"Cadastre, engineering survey, topographic mapping (large and medium scale).\"],\n##         AREA[\"Liechtenstein; Switzerland.\"],\n##         BBOX[45.82,5.96,47.81,10.49]],\n##     ID[\"EPSG\",2056]]\n\nJetzt wo das CRS der Datensätze bekannt ist, können wir ggplot2 nutzen um usere Daten zu visualisieren. In InfoVis 1 & 2 haben wir intensiv mit ggplot2 gearbeitet und dort die Layers geom_point() und geom_line() kennen gelernt. Zusätzlich beinhaltet ggplot die Möglichkeit, mit geom_sf() Vektordaten direkt und sehr einfach zu plotten."
  },
  {
    "objectID": "rauman/Rauman1_Uebung_A.html#aufgabe-3-koordinatensyteme-transformieren",
    "href": "rauman/Rauman1_Uebung_A.html#aufgabe-3-koordinatensyteme-transformieren",
    "title": "Rauman 1: Übung A",
    "section": "Aufgabe 3: Koordinatensyteme transformieren",
    "text": "Aufgabe 3: Koordinatensyteme transformieren\nIn der vorherigen Übung haben wir das bestehende Koordinatensystem zugewiesen. Dabei haben wir die bestehenden Koordinaten (in der Spalte geom) nicht manipuliert. Ganz anders ist eine Transformation der Daten von einem Koordinatensystem in das andere. Bei einer Transformation werden die Koordinaten in das neue Koordinatensystem umgerechnet und somit manipuliert. Aus praktischen Gründen wollen  wir all unsere Daten ins neue Schweizer Koordinatensystem CH1903+ LV95 transfomieren. Transformiere den Datensatz kantone mit st_transform()in CH1903+ LV95, nutze dafür den korrekten EPSG-Code.\nVor der Transformation (betrachte die Attribute Bounding box, Projected CRS sowie die Werte in der Spalte geom):\n\nkantone\n## Simple feature collection with 51 features and 6 fields\n## Geometry type: POLYGON\n## Dimension:     XY\n## Bounding box:  xmin: 5.955902 ymin: 45.81796 xmax: 10.49217 ymax: 47.80845\n## Geodetic CRS:  WGS 84\n## # A tibble: 51 × 7\n##    NAME       KANTONSNUM SEE_FLAECH KANTONSFLA KT_TEIL EINWOHNERZ\n##  * &lt;chr&gt;           &lt;int&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;        &lt;int&gt;\n##  1 Graubünden         18         NA     710530 0           197888\n##  2 Bern                2      11897     595952 1          1031126\n##  3 Valais             23       1060     522463 0           341463\n##  4 Vaud               22      39097     321201 1           793129\n##  5 Ticino             21       7147     281216 0           353709\n##  6 St. Gallen         17       7720     202820 1           504686\n##  7 Zürich              1       6811     172894 0          1504346\n##  8 Fribourg           10       7818     167142 1           315074\n##  9 Luzern              3       6438     149352 0           406506\n## 10 Aargau             19        870     140380 1           670988\n## # ℹ 41 more rows\n## # ℹ 1 more variable: geom &lt;POLYGON [°]&gt;\n\nNach der Transformation (betrachte die Attribute Bounding box, Projected CRS sowie die Werte in der Spalte geom):\n\nkantone\n## Simple feature collection with 51 features and 6 fields\n## Geometry type: POLYGON\n## Dimension:     XY\n## Bounding box:  xmin: 2485410 ymin: 1075268 xmax: 2833858 ymax: 1295934\n## Projected CRS: CH1903+ / LV95\n## # A tibble: 51 × 7\n##    NAME       KANTONSNUM SEE_FLAECH KANTONSFLA KT_TEIL EINWOHNERZ\n##  * &lt;chr&gt;           &lt;int&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;        &lt;int&gt;\n##  1 Graubünden         18         NA     710530 0           197888\n##  2 Bern                2      11897     595952 1          1031126\n##  3 Valais             23       1060     522463 0           341463\n##  4 Vaud               22      39097     321201 1           793129\n##  5 Ticino             21       7147     281216 0           353709\n##  6 St. Gallen         17       7720     202820 1           504686\n##  7 Zürich              1       6811     172894 0          1504346\n##  8 Fribourg           10       7818     167142 1           315074\n##  9 Luzern              3       6438     149352 0           406506\n## 10 Aargau             19        870     140380 1           670988\n## # ℹ 41 more rows\n## # ℹ 1 more variable: geom &lt;POLYGON [m]&gt;"
  },
  {
    "objectID": "rauman/Rauman1_Uebung_A.html#aufgabe-4-tidyverse-funktionen",
    "href": "rauman/Rauman1_Uebung_A.html#aufgabe-4-tidyverse-funktionen",
    "title": "Rauman 1: Übung A",
    "section": "Aufgabe 4: Tidyverse Funktionen",
    "text": "Aufgabe 4: Tidyverse Funktionen\nsf Objekte sind im wesentlichen data.frames mit ein paar Metadaten und einer speziellen geometry-Spalte. Wir können ihnen die gleichen Operationen durchführen, wie mit data.frames. Beispielsweise können wir aus den Spalten EINWOHNERZ und KANTONSFLA die Einwohnerdichte berechnen:\n\nkantone &lt;- kantone |&gt;\n  mutate(\n    # hektaren in km2 konvertieren\n    flaeche_km2 = KANTONSFLA / 100,\n    # dichte pro km2 berechnen\n    bevoelkerungsdichte = EINWOHNERZ / flaeche_km2\n  )\n\nBerechne nun die Einwohnerdichte auf der Ebene der Gemeinden."
  },
  {
    "objectID": "rauman/Rauman1_Uebung_A.html#aufgabe-5-choroplethen-karte",
    "href": "rauman/Rauman1_Uebung_A.html#aufgabe-5-choroplethen-karte",
    "title": "Rauman 1: Übung A",
    "section": "Aufgabe 5: Choroplethen Karte",
    "text": "Aufgabe 5: Choroplethen Karte\nNun wollen wir die Gemeinden respektive die Kantone nach ihrer Bevölkerungsdichte einfärben. Dafür verwenden wir wie gewohnt die Methode aes(fill = ...) von ggplot.\n\n\n\n\n\nHier sind farblich kaum Unterschiede erkennbar, weil die extrem hohe Bevölkerungsdichte vom Halbkanton Basel-Stadt (&gt;5’000 Einwohner pro km2!) die ganze Farbskala dominiert. Der Statistischer Atlas der Schweiz löst das Problem, indem es Klassen mit irregulären Schwellwerte verwendet und alle zahlen &gt;2’000 gruppiert. Diese Vorgehensweise können wir mit cut() rekonstruieren.\n\n# Schwellwerte analog BFS \"Statistischer Atlas der Schweiz\"\nbreaks = c(0, 50, 100, 150, 200, 300, 500, 750, 1000, 2000, Inf)\n\n# Klassen auf der Basis dieser Schwellenwerte bilden\nkantone &lt;- kantone |&gt;\n    mutate(bevoelkerungsdichte_klassen = cut(bevoelkerungsdichte, breaks))\n\n# Farbpalette erstellen: Wir brauchen so viele Farben, wie wir \"breaks\" haben, minus 1\nncols &lt;- length(breaks) - 1\n\n# Farbpalette erstellen (siehe RColorBrewer::display.brewer.all())\nred_yellow_green &lt;- RColorBrewer::brewer.pal(ncols, \"RdYlGn\")\n\n# Farbpalette umdrehen (zu green-red-yellow)\ngreen_red_yellow &lt;- rev(red_yellow_green)\n\np_kantone &lt;- ggplot(kantone, aes(fill = bevoelkerungsdichte_klassen)) +\n  geom_sf(colour = NA) +\n  scale_fill_manual(values = green_red_yellow) +\n  theme_void() +\n  theme(legend.position = \"none\")\n\nErstelle die gleichen Klassen für die Bevölkerungsdichte der Gemeinden und vergleiche die Plots.\n\n\n\n\n\n\n\n(a) Kantone\n\n\n\n\n\n\n\n(b) Gemeinde\n\n\n\n\nAbbildung 42.1: Der Vergleich dieser beiden Darstellungen veranschaulicht die MAUP Problematik sehr deutlich"
  },
  {
    "objectID": "rauman/Rauman1_Uebung_B.html",
    "href": "rauman/Rauman1_Uebung_B.html",
    "title": "Rauman 1: Übung B",
    "section": "",
    "text": "Für die kommende Übung arbeiten wir mit dem Datensatz gruental.gpkg. Importiere ihn in R. Zudem brauchen wir die folgenden libraries:\n\nlibrary(\"dplyr\")\nlibrary(\"sf\")\nlibrary(\"ggplot2\")\n\n\nAufgabe 1: Geopackage “Layers”\nAllenfalls ist euch beim Importieren des Geopackage gruental.gpkg folgende Warnmeldung aufgefallen:\nWarning message:\nIn evalq((function (..., call. = TRUE, immediate. = FALSE, noBreaks. = FALSE,  :\n  automatically selected the first layer in a data source containing more than one.\nDiese Warnmeldung weist darauf hin, dass das Geopackage gruental.gpkg mehrere Layers (rep. Datensätze) enthält und nur der erste Layer importiert wurde. Bringe mit dem Befehl st_layers die Layer Namen in Erfahrung und nutze diese im Anschluss in st_read (als Argument layer =) um die layers einzeln zu importieren und in variablen zu speichern (zB in als Variable wiesen und baeume).\n\n\nAufgabe 2: Datensätze erkunden\nNimm dir etwas Zeit und erkunde die beiden Datensätze. Nutze dafür auch die Visualisierungsmöglichkeiten von ggplot (insbesondere geom_sf). Du kannst mehrere geom_sf() übereinander lagern, um gleichzeitig mehrere Datensätze darzustellen.\n\n\n\n\n\n\nAbbildung 43.1: Wiesen-Flächen eingefärbt nach Typ\n\n\n\n\n\n\n\nAbbildung 43.2: Bäume eingefärbt nach Baumtyp\n\n\n\n\n\n\n\nAufgabe 3: Spatial Join mit Punkten\nWir wollen nun für jeden Baum wissen, ob er sich in einer Wiese befindet oder nicht. Dazu nutzen wir die GIS-Technik Spatial Join, die in der Vorlesung beschrieben wurde. In sf können wir Spatial Joins mit der Funktion st_join durchführen, dabei gibt es nur left sowie inner-Joins (vgl. PrePro 1 & 2). So müssen die Punkte “Links”, also an erste Stelle aufgeführt werden, da wir ja Attribute an die Punkte anheften wollen.\nBeachte, dass der Output eine neue Spalte flaechen_typ aufweist. Diese ist leer (NA) wenn sich der entsprechende Baum nicht in einer Wiese befindet. Wie viele Bäume befinden sich in einer Wiese, wie viele nicht?"
  },
  {
    "objectID": "rauman/Rauman2_Uebung_A.html#aufgabe-1",
    "href": "rauman/Rauman2_Uebung_A.html#aufgabe-1",
    "title": "Rauman 2: Übung A",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nAls erster Schritt müssen wir jeden Baum mit einem 20m Puffer verstehen. Nutze dazu st_buffer um speichere den Output als baeume_20m. Schau dir baeume_20m nun genau an. Um welchen Geometrietyp handelt es sich dabei nun?\n\n\n\n\n\nAbbildung 44.1: Dargestellt sind die Bäume als Punkte mit einem 20m Puffer, sowie die Wiesen im Hintergrund."
  },
  {
    "objectID": "rauman/Rauman2_Uebung_A.html#aufgabe-2",
    "href": "rauman/Rauman2_Uebung_A.html#aufgabe-2",
    "title": "Rauman 2: Übung A",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nBerechnen nun die Schnittmenge aus baeume_20m und wiesen mit der Funktion st_intersection und speichere den Output als baeume_wiesen. Exploriere nun baeume_wiesen. Was ist passiert? Überprüfe die Anzahl Zeilen pro Datensatz. Haben die sich verändert? Wenn ja, warum?"
  },
  {
    "objectID": "rauman/Rauman2_Uebung_A.html#aufgabe-3",
    "href": "rauman/Rauman2_Uebung_A.html#aufgabe-3",
    "title": "Rauman 2: Übung A",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nBerechnen nun die Flächengrösse pro Geometrie mit der Funktion st_area(). Speichere den Output in einer neuen Spalte von baeume_wiesen (z.B. mit dem Namen wiesen_flaeche). Tipp: Konvertiere den Output aus st_area in einen nummerischen Vektor mit as.numeric()."
  },
  {
    "objectID": "rauman/Rauman2_Uebung_A.html#aufgabe-4-optional",
    "href": "rauman/Rauman2_Uebung_A.html#aufgabe-4-optional",
    "title": "Rauman 2: Übung A",
    "section": "Aufgabe 4 (Optional)",
    "text": "Aufgabe 4 (Optional)\nBerechne nun aus wiesen_flaeche den wiesen_anteil. Tipp: 100% ist die Kreisfläche aus \\(r^2\\times \\pi\\), wobei in unserem Fall \\(r = 20\\) entspricht.\nÜberführe anschliessend die berechneten Anteilswerte in den Datensatz baeume mit einem left_join zwischen baeume und baeume_wiesen. Welche Spalte wäre für diesen Join geeignet? Hinweis: Nutze st_drop_geometry() um die Geometriespalte in baeme_wiesen vor dem Join zu entfernen.\n\n\n\n\n\nAbbildung 44.2: Nach dieser Übung kannst du das Resultat in dieser Weise visualisieren."
  },
  {
    "objectID": "rauman/Rauman2_Uebung_A.html#sec-raster-intro1",
    "href": "rauman/Rauman2_Uebung_A.html#sec-raster-intro1",
    "title": "Rauman 2: Übung A",
    "section": "Aufgabe 5",
    "text": "Aufgabe 5\nNun habt ihr ein paar Vektoroperationen wie st_buffer() und st_intersection() und st_area() durchgeführt. Gewisse Fragen lassen sich aber besser in der Raster-Welt beantworten. Wollen wir beispielsweise für jeden Punkt im Raum wissen, wie weit der nächstgelegene Baum ist, lässt sich das besser in einem Raster darstellen.\nBevor wir die Frage aber beantworten können, müssen wir den Vektordatensatz in ein Rasterdatensatz konvertieren. Dafür wiederum braucht es ein Raster “Template”, damit R in etwa weiss, wie der Raster Output auszusehen hat.\nDer Unterschied zwischen Raster und Vektor kann sehr anschaulich dargestellt werden, wenn die beiden Datensätze übereinander gelagert werden.\n\n\n\n\n\nMit baeume_rast können wir nun mit der Funktion distance() die Distanz zu jedem Baum berechnen:"
  },
  {
    "objectID": "rauman/Rauman2_Uebung_B.html#aufgabe-1",
    "href": "rauman/Rauman2_Uebung_B.html#aufgabe-1",
    "title": "Rauman 2: Übung B",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\nIn dieser Übung werden wir weiter mit terra arbeiten, um zu zeigen, wie wir einen Rasterdatensatz importieren, visualisieren und weiter verarbeiten können. In euren Daten findet ihr einen Datensatz namens dhm250m.tif, der das “Digitale Höhenmodell” (DHM) des Kantons Schwyz darstellt. Führen Sie den angegebenen Code aus.\n\nlibrary(\"terra\")\n\nImportieren Sie Ihr Raster mit der Funktion rast\n\ndhm_schwyz &lt;- rast(\"datasets/rauman/dhm250m.tif\")\n\nSie erhalten einige wichtige Metadaten über den Rasterdatensatz, wenn Sie den Variablennamen in die Konsole eingeben.\n\n## class       : SpatRaster \n## dimensions  : 150, 186, 1  (nrow, ncol, nlyr)\n## resolution  : 250, 250  (x, y)\n## extent      : 2672175, 2718675, 1193658, 1231158  (xmin, xmax, ymin, ymax)\n## coord. ref. : CH1903+ / LV95 (EPSG:2056) \n## source      : dhm250m.tif \n## name        :   dhm250m \n## min value   :  389.1618 \n## max value   : 2850.0203\n\nUm einen schnellen Überblick eines Rasterdatensatz zu erhalten, können wir einfach die plot() Funktion verwenden.\n\n\n\n\n\nLeider ist das Verwenden von Rastern in ggplot nicht sehr einfach. Da ggplot ein universelles Plot-Framework ist, stossen wir schnell an die Grenzen des Möglichen, wenn wir etwas so Spezielles wie Karten erstellen. Mit plot können wir zwar sehr schnell plotten, aber auch hier stossen wir schnell an Grenzen.\nAus diesem Grund werden wir ein neues Plot-Framework einführen, das auf Karten spezialisiert ist und in einem sehr ähnlichen Design wie ggplot gebaut wurde: tmap. Laden Sie dieses Paket jetzt in Ihre Session:\n\nlibrary(\"tmap\")\n\nGenau wie ggplot basiert tmap auf der Idee von “Ebenen”, die durch ein + verbunden sind. Jede Ebene hat zwei Komponenten:\n\neine Datensatzkomponente, die immer tm_shape(dataset) ist (ersetzen Sie dataset durch Ihre Variable)\neine Geometriekomponente, die beschreibt, wie das vorangegangene tm_shape() visualisiert werden soll. Dies kann tm_dots() für Punkte, tm_polygons() für Polygone, tm_lines() für Linien usw. sein. Für Einzelbandraster (was bei dhm_schwyz der Fall ist) ist es tm_raster()\n\n\n\n\n\n\nBeachten Sie, dass tm_shape() und tm_raster() (in diesem Fall) zusammengehören. Das eine kann nicht ohne das andere leben.\nWenn Sie die Hilfe von ?tm_raster konsultieren, werden Sie eine Vielzahl von Optionen sehen, mit denen Sie die Visualisierung Ihrer Daten verändern können. Zum Beispiel ist der Standardstil von tm_raster() die Erstellung von “Bins” mit einer diskreten Farbskala. Wir können dies mit style = \"cont\" ausser Kraft setzen.\n\n\n\n\n\nDas sieht schon ziemlich toll aus, aber vielleicht wollen wir die Standard-Farbpalette ändern. Glücklicherweise ist das in tmap viel einfacher als in ggplot2. Um sich die verfügbaren Paletten anzusehen, geben Sie tmaptools::palette_explorer() oder RColorBrewer::display.brewer.all() in der Konsole ein (für Ersteres müssen Sie möglicherweise zusätzliche Pakete installieren, z.B. shinyjs).\n\n\n\n\n\nEine grosse Stärke von tmap ist die Tatsache, das mit dem gleichen Befehl sowohl statische wie auch interative Plots erstellt werden können. Dafür muss der Modus von statisch auf interaktiv gewechselt werden."
  },
  {
    "objectID": "rauman/Rauman2_Uebung_B.html#sec-raster-slope",
    "href": "rauman/Rauman2_Uebung_B.html#sec-raster-slope",
    "title": "Rauman 2: Übung B",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nMit terra können wir eine Vielzahl von Rasteroperationen über unser Höhenmodell laufen lassen. Eine klassische Rasteroperation ist zum Beispiel das Berechnen der Hangneigung (“slope”) oder dessen Orientierung (“aspect”). Nutzen Sie die Funktion terrain() aus terra um die Hangneigung und Orientierung zu berechnen. Visualisieren Sie die Resultate.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHinweis\n\n\n\nBei “aspect” handelt es sich ja um Werte, die von 0 bis 360 reichen. In klassischen Palettes liegen die beiden Extremwerte (in diesem Fall 0 und 360) farblich weit auseinander. Bei Aspect sollten diese aber nahe beieinander liegen (da eine Ausrichtung von 1° nur 2 Grad von einer Ausrichtung von 359° entfernt ist). Um dieser Tatsache Rechnung zu Tragen können wir eine eine eigene Colourpalette erstellen, wo die erste Farbe wiederholt ist."
  },
  {
    "objectID": "rauman/Rauman2_Uebung_B.html#aufgabe-3",
    "href": "rauman/Rauman2_Uebung_B.html#aufgabe-3",
    "title": "Rauman 2: Übung B",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nMit Hangneigung und -ausrichtung können wir einen Hillshading-Effekt berechnen. Hillshading bedeutet, dass der Schattenwurf des Oberflächenmodells bei gegebenen Einfallswinkel der Sonne (Höhe und Azimut) berechnet wird. Der typische Einfallswinkel liegt bei 45° über dem Horizont und von Nordwesten bei 315°.\nUm einen Hillshading Effekt zu erzeugen, berechne zuerst slope und aspect von dhm_schwyz analog der letzten Aufgabe, achte aber darauf das die Einheit radians entspricht. Nutze diese beiden Objekte in der Funktion shade() um den Hillshade zu berechnen. Visualisiere den Output anschliessend mit plot oder tmap.\n\n\n\n\n\nFür diese Visualisierung verwende ich tmap und als colour palette cividis"
  },
  {
    "objectID": "rauman/Rauman3_Uebung_A.html#aufgabe-1-rotmilan-bewegungsdaten-visualisieren",
    "href": "rauman/Rauman3_Uebung_A.html#aufgabe-1-rotmilan-bewegungsdaten-visualisieren",
    "title": "Rauman 3: Übung A",
    "section": "Aufgabe 1: Rotmilan Bewegungsdaten visualisieren",
    "text": "Aufgabe 1: Rotmilan Bewegungsdaten visualisieren\nDie erste Frage, die bei solchen Bewegungsstudien typischerweise gestellt wird, lautet: Wo hält sich das Tier hauptsächlich auf? Um diese Frage zu beantworten, kann man als erstes einfach die Datenpunkte in einer einfachen Karte visualisieren. Erstellt zur Beantwortung dieser Frage nachstehende Karte."
  },
  {
    "objectID": "rauman/Rauman3_Uebung_A.html#aufgabe-2-kernel-density-estimation-berechnen",
    "href": "rauman/Rauman3_Uebung_A.html#aufgabe-2-kernel-density-estimation-berechnen",
    "title": "Rauman 3: Übung A",
    "section": "Aufgabe 2: Kernel Density Estimation berechnen",
    "text": "Aufgabe 2: Kernel Density Estimation berechnen\nIn einer ersten Annäherung funktioniert dies, doch wir sehen hier ein klassisches Problem des “Overplotting”. Das heisst, dass wir durch die Überlagerung vieler Punkte in den dichten Regionen nicht abschätzen können, wie viele Punkte dort effektiv liegen und ggf. übereinander liegen. Es gibt hier verschiedene Möglichkeiten, die Punktdichte klarer zu visualisieren. Eine unter Biologen sehr beliebte Methode ist die Dichteverteilung mit einer Kernel Density Estimation (KDE). Dies v.a. darum, weil mit KDE das Habitat (Streifgebiet) eines Tieres abgeschätzt werden kann. Homeranges werden oft mit KDE95 und Core Areas mit KDE50 definiert (Fleming C., Calabrese J., 2016).\nFür die Berechnung der Density verwenden wir die Funktion density.ppp aus spatstat. Diese library ist etwas komplex in der Anwendung, damit wir dieses Verfahren aber dennoch auf unsere Rotmilan-Daten anwenden können, haben wir eine eigene KDE-Funktion erstellt, die wir Euch zur Verfügung stellen.\nWir ermutigen alle, die dafür Kapazität haben, unsere Function eingehend zu studieren und allenfalls ganz auf die Funktion zu verzichten und stattdessen direkt spatstat zu verwenden. Wenn ihr mit unserer Funktion arbeiten möchtet, müsst ihr den unten stehenden Code in euer Skript kopieren und ausführen.\n\nmy_kde &lt;- function(points, cellsize, bandwith, extent = NULL){\n  library(\"spatstat.geom\")    # um sf in ppp zu konvertieren\n  library(\"spatstat.explore\") # um die Dichte zu berechnen\n  \n  points_ppp &lt;- as.ppp(points) # konvertiert sf &gt; ppp\n\n  if(!is.null(extent)){\n    # falls ein extent angegeben ist, wird dieser verwendet\n    # um das \"Beobachtungsfenster\" zu setzen\n    Window(points_ppp) &lt;- as.owin(st_bbox(extent))\n  } \n\n  # macht eine Dichteschätzung\n  points_density &lt;- density.ppp(x = points_ppp, sigma = bandwith, eps = cellsize)\n\n  # konvertiert den Output in ein DataFrame\n  points_density_df &lt;- as.data.frame(points_density)\n\n  points_density_df\n}\n\nDie Parameter der Funktion sollten relativ klar sein:\n\npoints: Ein Punktdatensatz aus der Class sf\ncellsize: Die Zellgrösse des output-Rasters\nbandwith: Der Suchradius für die Dichteberechnung\nextent (optional): Der Perimeter, in dem die Dichteverteilung berechnet werden soll. Wenn kein Perimeter angegeben wird, wird die “bounding box” von points genutzt.\n\nWenn wir nun mit my_kde() die Dichteverteilung berechnen, erhalten wir ein data.frame mit X und Y Koordinaten sowie eine Spalte value zurück. Nutzt diese drei Spalten mit geom_raster() um eure Daten mit ggplot zu visualisieren (aes(x = X, y = Y, fill = value).\n\nrotmilan_kde &lt;- my_kde(points = rotmilan, cellsize = 1000, bandwith = 10000, extent = schweiz)\n\nhead(rotmilan_kde)\n##         x       y        value\n## 1 2485909 1075767 5.706506e-24\n## 2 2485909 1076766 8.289075e-23\n## 3 2485909 1077764 3.029525e-23\n## 4 2485909 1078763 6.521282e-23\n## 5 2485909 1079761 9.598037e-23\n## 6 2485909 1080760 1.182799e-22\n\n\n\n\n\n\nDie Kernel Density Estimation ist nun sehr stark von den tiefen Werten dominiert, da die Dichte in den meisten Zellen unseres Untersuchungsgebiets nahe bei Null liegt. Wie erwähnt sind Wissenschaftler häufig nur an den höchsten 95% der Werte interessiert. Folge folgende Schritte um das Resultat etwas besser zu verantschaulichen:\n\nBerechne die 95. Perzentile aller Werte mit der Funktion quantile und benne diesen q95\nErstelle eine neue Spalte in rotmilan_kde, wo alle Werte tiefer als q95 NA entsprechen\n(Optional): Transformiere die Werte mit log10, um einen differenzierteren Farbverlauf zu erhalten\n\nWir können die tiefen Werte ausblenden, indem wir nur die höchsten 5% der Werte darstellen. Dafür berechnen wir mit raster::quantile die 95. Perzentile aller Werte und nutzen diesen Wert als “Grenzwert” für die Darstellung.\nZusätzlich hilft eine logarithmische Transformation der Werte, die Farbskala etwas sichtbarer zu machen."
  },
  {
    "objectID": "rauman/Rauman3_Uebung_A.html#aufgabe-3-dichteverteilung-mit-thiessen-polygonen",
    "href": "rauman/Rauman3_Uebung_A.html#aufgabe-3-dichteverteilung-mit-thiessen-polygonen",
    "title": "Rauman 3: Übung A",
    "section": "Aufgabe 3: Dichteverteilung mit Thiessen Polygonen",
    "text": "Aufgabe 3: Dichteverteilung mit Thiessen Polygonen\nThiessen Polygone bieten eine spannende Alternative um Unterschiede in der Dichteverteilung von Punktdatensätzen zu visualisieren. Wir wollen dies nun ausprobieren und konstruieren zum Schluss die Thiessenpolygone für die Rotmilan-Daten für das Untersuchungsgebiet Schweiz. Nutze die Anleitung für das Erstellen von Thiessenpolygonen aus der Übung B um Thiessenpolygone für die Rotmilanpositionen zu erstellen.\n\n\n\n\n\nAbbildung 46.1: Wenn wir jetzt die Thiessenpolygone (ohne Punkte) darstellen, wird deutlicher, wie die Dichteverteilung im Innern des Clusters aussieht.\n\n\n\n\n\n\n\n\nScherler, Patrick. 2020. „Drivers of Departure and Prospecting in Dispersing Juvenile Red Kites (Milvus milvus).“ Phdthesis, University of Zurich."
  },
  {
    "objectID": "rauman/Rauman3_Uebung_B.html",
    "href": "rauman/Rauman3_Uebung_B.html",
    "title": "Rauman 3: Übung B",
    "section": "",
    "text": "In dieser Übung geht es darum, zwei verschiedene Interpolationsverfahren in R umzusetzen. Im ersten Interpolationsverfahren verwenden wir die inverse distance weighted interpolation, später verwenden wir die nearest neighbour methode. Dazu braucht ihr die folgenden Packages:\n\nlibrary(\"sf\")\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")\nlibrary(\"gstat\")\n\nWeiter benötigt ihr die nachstehenden Datensätze:\nluftqualitaet &lt;- read_sf(\"datasets/rauman/luftqualitaet.gpkg\")\nschweiz &lt;- read_sf(\"datasets/rauman/schweiz.gpkg\")\nDie Library gstat bietet verschiedene Möglichkeiten, Datenpunkte zu interpolieren, unter anderem auch die inverse distance weighted Methode. Leider ist das Package noch nicht so benutzerfreundlich wie sf: Das Package wird aber aktuell überarbeitet und in mittlerer Zukunft sollte es ebenso einfach zugänglich sein. Damit Ihr Euch nicht mit den Eigenheiten dieser Library umschlagen müsst, haben wir eine Function vorbereitet, die Euch die Verwendung der IDW-Interpolation erleichtern soll.\nWir nehmen Euch damit etwas Komplexität weg und liefern Euch ein pfannenfertiges Werkzeug. Das hat auch Nachteile und wir ermutigen alle, die dafür Kapazität haben, unsere Function eingehend zu studieren und allenfalls ganz auf die Function zu verzichten und stattdessen direkt gstat zu verwenden. Wenn ihr mit unserer Function arbeiten möchtet, müsst ihr den unten stehenden Code in euer Skript kopieren und ausführen.\n\nmy_idw &lt;- function(groundtruth,column,cellsize, nmax = Inf, maxdist = Inf, idp = 2, extent = NULL){\n  library(\"gstat\")\n  library(\"sf\")\n  \n  if(is.null(extent)){\n    extent &lt;- groundtruth\n  }\n  \n  samples &lt;- st_make_grid(extent,cellsize,what = \"centers\")\n  my_formula &lt;- formula(paste(column,\"~1\"))\n  idw_sf &lt;- gstat::idw(formula = my_formula,groundtruth, newdata = samples, nmin = 1, nmax = nmax, maxdist = maxdist, idp = idp)\n  \n  idw_matrix &lt;- cbind(as.data.frame(st_coordinates(idw_sf)),pred = st_drop_geometry(idw_sf)[,1])\n  idw_matrix\n}\n\nNun könnt Ihr mit my_idw() den Datensatz luftqualitaet folgendermassen interpolieren.\n\nmy_idw(groundtruth = luftqualitaet, column = \"value\", cellsize = 10000, extent = schweiz)\n\nFolgende Parameter stehen Euch zur Verfügung:\n\nNotwendige Parameter:\n\ngroundtruth: Punktdatensatz mit den Messwerten (sf-Objekt)\ncolumn: Name der Spalte mit den Messwerten (in Anführungs- und Schlusszeichen)\ncellsize: Zellgrösse des output Rasters\n\nOptionale Parameter\n\nnmax: Maximale Anzahl Punkte, die für die Interpolation berücksichtigt werden sollen. Default: Inf (alle Werte im gegebenen Suchradius)\nmaxdist: Suchradius, welcher für die Interpolation verwendet werden soll. Default Inf (alle Werte bis nmax)\nidp: Inverse Distance Power: die Potenz, mit der der Nenner gesteigert werden soll. Default: 2. Werte werden im Kehrwert des Quadrates gewichtet: \\(\\frac{1}{dist^{idp}}\\).\nextent: Gebiet, für welches die Interpolation durchgeführt werden soll. Wenn nichts angegeben wird (Default NULL), wird die Ausdehnung von groundtruth verwendet.\n\nOuput\n\nder Output der Funktion ist eine data.frame mit 3 Spalten:\n\nX, Y Koordinaten der interpolierten Werte\npred: der Interpolierte Wert\n\n\n\nBeim Output handelt sich hier um einen Raster-ähnlichen Datentyp (siehe Vorlesung Spatial DataScience 1). Diesen können wir mit geom_raster mit ggplot visualisieren. Dafür müsst ihr in aes die X und Y Koordinaten angeben, und der interpolierte Wert mit fill einfärben.\n\nAufgabe 1: Raeumliche Interpolation mit IDW\nRechnet so den IDW für die Luftqualitätsmessungen mit verschiedenen Parametern und visualisiert jeweils die Resultate. Experimentiert mit nmax sowie maxdist. Was stellt ihr fest?\nTips:\n\nWas für Distanzen bei maxdist Sinn machen, könnt ihr dem Output aus der G-Funktion (vorherige Übung) entnehmen\nWählt am Anfang eine etwas Konvervative (grosse) cellsize und verringert diesen nur wenn euer Rechner damit gut klar kommt\nDa der Output aus der Interpolation im gleichen Koordinatenbezugssystem sind wie schweiz.gpkg kann man diese beiden Datensätze im gleichen ggplot darstellen. Dafür müsst ihr die aesthetics (aes()) für jeden Layer einzeln setzen, und nicht auf der Ebene von ggplot().\n\n\n\n## [inverse distance weighted interpolation]\n## [inverse distance weighted interpolation]\n## [inverse distance weighted interpolation]\n## [inverse distance weighted interpolation]\n\n\n\n\nAbbildung 47.1: Stickstoffdioxid (NO2) in μg/m3, Interpoliert über die ganze Schweiz mit der Inverse Distance Weighted Methode. Die verschiedenen Plots zeigen die Veränderung der Interpolation bei steigendem IDP-Wert\n\n\n\n\n\n\n\nAufgabe 2: Interpolation mit Nearest Neighbour\nEine weitere einfache Möglichkeit zur Interpolation bietet die Erstellung eines Voronoi-Diagrammes, auch als Thiessen-Polygone oder Dirichlet-Zerlegung bekannt. sf liefert dazu die Funktion st_voronoi(), die einen Punktdatensatz annimmt und eben um die Punkte die Thiessenpolygone konstruiert. Dazu braucht es lediglich einen kleinen Vorverarbeitungsschritt: sf möchte für jedes Feature, also für jede Zeile in unserem Datensatz, ein Voronoidiagramm. Das macht bei uns wenig Sinn, weil jede Zeile nur aus einem Punkt besteht. Deshalb müssen wir vorher luftqualitaet mit st_union() von einem POINT in ein MULTIPOINT Objekt konvertieren, in welchem alle Punkte in einer Zeile zusammengefasst sind.\n\n\n\n\n\nst_voronoi hat die Thiessenpolygone etwas weiter gezogen als wir sie wollen. Dies ist allerdings eine schöne Illustration der Randeffekte von Thiessenpolygonen, die zum Rand hin (wo es immer weniger Punkte hat) sehr gross werden können. Wir können die Polygone auf die Ausdehnung der Schweiz mit st_intersection() clippen. Auch hier braucht es zwei kleine Vorverarbeitungsschritte:\n\nwie vorher müssen wir die einzelnen Kantons-Polygone miteinander verschmelzen. Dies erreichen wir mit st_union(). Wir speichern den Output als schweiz, was als Resultat ein einzelnes Polygon der Schweizergrenze retourniert.\nfür die Thiessen-Polygone machen wir genau das Umgekehrte: st_voronoi() liefert ein einzelnes Feature mit allen Polygonen, welches sich nicht gerne clippen lässt. Mit st_cast() wird die GEOMETRYCOLLECTION in Einzelpolygone aufgeteilt.\n\n\n\n\n\n\nJetzt müssen wir nur noch den jeweiligen Wert für jedes Polygon ermitteln. Dies erreichen wir wieder durch st_join. Auch hier ist noch ein kleiner Vorverarbeitungsschritt nötig: Wir konvertieren das sfc Objekt (nur Geometrien) in ein sf Objekt (Geometrien mit Attributtabelle).\n\n\n\n\n\nAbbildung 47.2: Stickstoffdioxid (NO2) in μg/m3, Interpoliert über die ganze Schweiz nach der Nearest Neighbour Methode."
  },
  {
    "objectID": "rauman/Rauman3_Uebung_C.html#aufgabe-1",
    "href": "rauman/Rauman3_Uebung_C.html#aufgabe-1",
    "title": "Rauman 3: Übung C (Optional)",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\n\nlibrary(\"sf\")\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")\n\nrotmilan &lt;- read_sf(\"datasets/rauman/rotmilan.gpkg\")\n\nschweiz &lt;- read_sf(\"datasets/rauman/schweiz.gpkg\")\n\nluftqualitaet &lt;- read_sf(\"datasets/rauman/luftqualitaet.gpkg\")\n\n\n\n\n\n\nAbbildung 48.1: Eine solche Visualisierung zeigt dir beispielsweise die räumliche Ausdehnung der Datenpunkte"
  },
  {
    "objectID": "rauman/Rauman3_Uebung_C.html#aufgabe-2",
    "href": "rauman/Rauman3_Uebung_C.html#aufgabe-2",
    "title": "Rauman 3: Übung C (Optional)",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nAls erstes berechnen wir die G-Function für die Rotmilanpositionen:\n\nSchritt 1\nMit st_distance() können Distanzen zwischen zwei sf Datensätze berechnet werden. Wird nur ein Datensatz angegeben, wird eine Kreuzmatrix erstellt wo die Distanzen zwischen allen Features zu allen anderen Features dargestellt werden. Wir nützen diese Funktion zur Berechnung der nächsten Nachbarn.\n\n\nSchritt 2\nNun wollen wir wissen, wie gross die kürzeste Distanz von jedem Punkt zu seinem nächsten Nachbarn beträgt, also die kürzeste Distanz pro Zeile. Bevor wir diese ermitteln müssen wir die diagonalen Werte noch entfernen, denn diese stellen ja jeweils die Distanz zu sich selber dar und sind immer 0. Danach kann mit apply() eine Funktion (FUN = min) über die Zeilen (MARGIN = 1) einer Matrix (X = rotmilan_distanzmatrix) gerechnet werden. Zusätzlich müssen wir noch na.rm = TRUE setzen, damit NA Werte von der Berechnung ausgeschlossen werden. Das Resultat ist ein Vektor mit gleich vielen Werten wie Zeilen in der Matrix.\n\n\nSchritt 3\nNun müssen wir die Distanzen nach ihrer Grösse sortieren\n\n\nSchritt 4\nJetzt berechnen wir die kummulierte Häufigkeit von jeder Distanz berechnen. Die kummulierte Häufikgeit vom ersten Wert ist 1 (der Index des ersten Wertes) dividiert durch die Anzahl Werte insgesamt. Mit seq_along erhalten wir die Indizes aller Werte, mit lenth die Anzahl Werte insgesamt.\n\n\nSchritt 5\nNun wollen wir die kumulierte Häufigkeit der Werte in einer Verteilungsfunktion (engl: Empirical Cumulative Distribution Function, ECDF) darstellen. Dafür müssen wir die beiden Vektoren zuerst noch in einen Dataframe packen, damit ggplot damit klar kommt.\n\n\n\n\n\nLesehilfe:"
  },
  {
    "objectID": "rauman/Rauman3_Uebung_C.html#aufgabe-3",
    "href": "rauman/Rauman3_Uebung_C.html#aufgabe-3",
    "title": "Rauman 3: Übung C (Optional)",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nFühre nun die gleichen Schritte mit luftqualitaet durch und vergleiche die ECDF-Plots."
  },
  {
    "objectID": "rauman/Rauman4_Uebung_A.html#aufgabe-1-morans-i-für-kantone",
    "href": "rauman/Rauman4_Uebung_A.html#aufgabe-1-morans-i-für-kantone",
    "title": "Rauman 4: Übung",
    "section": "Aufgabe 1: Morans \\(I\\) für Kantone",
    "text": "Aufgabe 1: Morans \\(I\\) für Kantone\n\nGewichtete Ähnlichkeitsmatrix\nWidmen wir uns dem Kern von Morans \\(I\\), der Berechnung der gewichteten Ähnlichkeitsmatrix.\n\nNachbarschaftsmatrix \\(w_{ij}\\)\n\\[\\text{Morans } I = \\frac{n}{\\sum_{i=1}^n (y_i - \\bar{y})^2} \\times \\frac{\\sum_{i=1}^n \\sum_{j=1}^n {\\color{red}w_{ij}}(y_i - \\bar{y})(y_j - \\bar{y})}{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}}\\]\n\\(w\\) beschreibt die räumlichen Gewichte der Kantone (den “Schalter” aus der Vorlesung). \\(w_{ij}\\) ist das Gewicht vom Kanton \\(i\\) im Vergleich zum Kanton \\(j\\). Sind Kantone \\(i\\) und \\(j\\) räumlich nah, gilt ein Gewicht von 1, sind sie weit entfernt, gilt ein Gewicht von 0. Dabei ist die Definition von “räumlich nah” nicht festgelegt. Denkbar wären verschiedene Optionen (siehe Vorlesung). Wer werden es mit die Bedigungen touches verwenden. Die Funktion st_touches prüft zwischen allen Kantonen, ob sie sich berühren. Mit der Option sparse = TRUE wird eine 26x26 Kreuzmatrix erstellt, wo jeder Kanton mit jedem anderen verglichen wird. Berühren sie sich, steht in der entsprechenden Stelle der Wert TRUE, was in R gleichbedeutend ist wie 1. Berühren sie sich nicht, steht der Wert FALSE, was gleichbedeutend ist wie 0.\n\n# st_touches berechnet eine Kreuzmatrix aller Objekte\nw_ij &lt;- st_touches(zweitwohnung_kanton, sparse = FALSE)\n\n# Schauen wir uns matrix mal an\n# (aus Platzmangen beschränken wir uns auf die ersten 5 Zeilen und Spalten\n# in RStudio könnt ihr mit View(w_ij) die gesamte Matrix anschauen)\nw_ij[1:5, 1:5]\n\n\nDie erste Zeile entspricht dem ersten Kanton in zweitwohnung_kanton, die zweite Zeile dem zweiten Kanton usw. Das gleiche Gilt für die Spalten. Um die Kreuzmatrix besser interpretieren zu können, können wir die Namen aus der Spalte KANTONSNAME verwenden, um die Zeilen und Spalten unserer Kreuzmatrix zu benennen.\n\nrownames(w_ij) &lt;- zweitwohnung_kanton$kuerzel\ncolnames(w_ij) &lt;- zweitwohnung_kanton$kuerzel\n\nw_ij[1:5, 1:5]\n# Alterantiv: mit View(w_ij)\n\n\n\nAttributs-Ähnlichkeitsmatrix \\(c_{ij}\\)\n\\[\\text{Morans } I = \\frac{n}{\\sum_{i=1}^n (y_i - \\bar{y})^2} \\times \\frac{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}{\\color{red}(y_i - \\bar{y})(y_j - \\bar{y})}}{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}}\\]\nUm die Attributs-Ähnlichkeit zwischen zwei Kantonen zu bestimmen, subtrahieren wir von jedem Kanton den Mittelwert aller Kantone und multiplizieren die beiden Differenzen. Die Funktion tcrossprod() erstellt diese Kreuzmatrix mit den multiplizierten Differenzen.\n\n# speichere die Variable in einem neuen Vektor\ny &lt;- zweitwohnung_kanton$ja_in_percent\n\ny_diff &lt;- y - mean(y) # erstellt ein Vector mit 26 Werten\nc_ij &lt;- tcrossprod(y_diff) # erstellt eine Matrix 26x26\n\n# Zeilen- und Spaltennamen hinzufügen\nrownames(c_ij) &lt;- zweitwohnung_kanton$kuerzel\ncolnames(c_ij) &lt;- zweitwohnung_kanton$kuerzel\n\nc_ij[1:5, 1:5]\n\n\n\nBerechnung von zaehler2\n\\[\\text{Morans } I = \\frac{n}{\\sum_{i=1}^n (y_i - \\bar{y})^2} \\times \\frac{\\color{red}\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}(y_i - \\bar{y})(y_j - \\bar{y})}{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}}\\]\nDer gesamte Term zaehler2 ist die Summe aus der Multiplikation von w_ij und c_ij.\n\n# Matrix multiplikation\ncw_ij &lt;- w_ij * c_ij\n\n# Summe bilden\nzaehler2 &lt;- sum(cw_ij)\n\nzaehler2\n\n\n\n\nNormalisieren\nUm das Resultat aus der bisherigen Berechung auf einen Wert von -1 bis +1 zu normalisieren, müssen wir noch folgende Terme berechnen:\n\\[\\text{Morans } I = \\frac{\\color{cyan}n}{\\color{cyan}\\sum_{i=1}^n (y_i - \\bar{y})^2} \\times \\frac{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}(y_i - \\bar{y})(y_j - \\bar{y})}{\\color{cyan}\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}} \\]\n\nBerechnung von \\(n\\) (zaehler1)\nDer Termin zaehler1 resp. n entspricht der Anzahl Objekte (hier: Kantone) in unserem Datensatz.\n\nzaehler1 &lt;- n &lt;- nrow(zweitwohnung_kanton)\n\nzaehler1\n\n\n\nAbweichung vom Mittelwert (nenner1)\nWir haben bereits in der Berechnung der Attributs-Ähnlichkeit die Differenz zum Mittelwert berechnet. Für nenner1 müssen wir diesen lediglich quadrieren und die Resultate summieren.\n\\[\\text{Morans } I = \\frac{n}{\\color{cyan}\\sum_{i=1}^n (y_i - \\bar{y})^2} \\times \\frac{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}(y_i - \\bar{y})(y_j - \\bar{y})}{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}}\\]\n\n# Di bereits berechneten Abweichungen müssen wir quadrieren:\ny_diff2 &lt;- y_diff^2\n\n# Und danach die Summe bilden:\nnenner1 &lt;- sum(y_diff2)\n\n\n\nSumme der Gewichte (nenner2)\n\\[\\text{Morans } I = \\frac{n}{\\sum_{i=1}^n (y_i - \\bar{y})^2} \\times \\frac{\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}(y_i - \\bar{y})(y_j - \\bar{y})}{\\color{cyan}\\sum_{i=1}^n \\sum_{j=1}^n w_{ij}}\\]\nIm Term nenner2 müssen wir lediglich die Gewichte w_ij summieren.\n\nnenner2 &lt;- sum(w_ij)\n\n\n\n\nAuflösung der Formel\nNun haben wir alle Bestandteile von Morans \\(I\\) Berechnet und müssen diese nur noch Zusammenrechnen.\n\nMI_kantone &lt;- zaehler1 / nenner1 * zaehler2 / nenner2\n\nMI_kantone\n\nDer Global Morans \\(I\\) für die Abstimmungsdaten beträgt auf Kantonsebene also 0.31. Wie interpretiert ihr dieses Resultate? Was erwartet ihr für eine Resultat auf Bezirksebene?"
  },
  {
    "objectID": "rauman/Rauman4_Uebung_A.html#aufgabe-2-morans-i-für-bezirke-berechnen",
    "href": "rauman/Rauman4_Uebung_A.html#aufgabe-2-morans-i-für-bezirke-berechnen",
    "title": "Rauman 4: Übung",
    "section": "Aufgabe 2: Morans I für Bezirke berechnen",
    "text": "Aufgabe 2: Morans I für Bezirke berechnen\nNun könnt ihr Morans \\(I\\) auf der Ebene der Bezirke und untersuchen, ob und wie sich Morans \\(I\\) verändert. Importiert dazu den Layer bezirk aus dem Datensatz zweitwohnungsinitiative.gpkg. Visualisiert in einem ersten Schritt die Abstimmungsresultate. Formuliert nun eine Erwartungshaltung: ist Morans \\(I\\) auf der Ebene Bezirke tiefer oder Höher als auf der Ebene Kantone?\n\n\n\n\n\n\nFür Fortgeschrittene\n\n\n\nErstellt aus dem erarbeiten Workflow eine function um Morans I auf der Basis von einem sf Objekt sowie einer Spalte dessen zu berechnen."
  },
  {
    "objectID": "rauman/Rauman5_Uebung_A.html#aufgabe-1-vektor-daten-laden-und-anzeigen",
    "href": "rauman/Rauman5_Uebung_A.html#aufgabe-1-vektor-daten-laden-und-anzeigen",
    "title": "Rauman 5: Übung A",
    "section": "Aufgabe 1: Vektor Daten laden und anzeigen",
    "text": "Aufgabe 1: Vektor Daten laden und anzeigen\nLaden Sie das File windkraft_geodata.gpkg von Moodle herunter (siehe Tabelle 50.1). Dieses beinhaltet alle Vektordaten, die für die Bearbeitung der Multikriterien-Evaluation benötigt wird (Bewohnte Flächen, Nationale Schutzgebiete, Seeflächen, Strassen, Waldgebiete sowie die Kantonsgrenze von Schwyz). Die Namen der verfügbaren Listen können Sie mit sf::st_layers() ermitteln.\nImportiere die benötigten Vektordatensätze und exploriere die Daten. Zur Visualisierung könnt ihr die Funktionen plot oder die Packages tmap oder ggplot2 verwenden.\nSchau dir auch das Koordinatensystem an. Was fällt dir auf? Wir würden gerne mit dem neuen Schweizer Koordinatensystem arbeiten (LV95). Um ein Koordinatensystem umzuwandeln benutze die Funktion st_transform()."
  },
  {
    "objectID": "rauman/Rauman5_Uebung_A.html#sec-raster-distance",
    "href": "rauman/Rauman5_Uebung_A.html#sec-raster-distance",
    "title": "Rauman 5: Übung A",
    "section": "Aufgabe 2: Erschliessung berechnen",
    "text": "Aufgabe 2: Erschliessung berechnen\nBeginnen wir mit dem Kriterium “Erschliessung”. Wir müssen für den ganzen Kanton Schwyz wissen, wie weit die nächste Strasse entfernt ist. Wie wir bereits in Kapitel 44.5 erläutert haben, lässt sich diese Information am besten in einem Raster abbilden.\nAnalog Kapitel 44.5 müssen wir hierfür den Vektordatensatz auf der Basis eines Templates in ein Raster konvertieren. Für die Erstellung des Templates verwenden wir an dieser Stelle die Kantonsgrenze vom Kanton Schwyz.\nNutze der obige Code um den Wald Datensatz zu rasterisieren und die Distanz zum Wald mit der Funktion distance() zu berechnen. Plausibilisiere den Output indem du ihn visualisierst.\n\n\n\n\n\n\nDie rasterisierte Form des “Strassen” Datensatzes\n\n\n\n\n\n\n\nDie Distanz zur nächstgelegenen Strasse für jeden Punkt im Kanton Schwyz”\n\n\n\n\n\nFühre nun die gleiche Operation durch um die Entfernung zu nationalen Schutzgebieten zu ermitteln.\n\n\n\n\n\n\nDie rasterisierte Form des “Schutzgebiete” Datensatzes\n\n\n\n\n\n\n\nDie Distanz zum nächstgelegenen Schutzgebiet für jeden Punkt im Kanton Schwyz”"
  },
  {
    "objectID": "rauman/Rauman5_Uebung_A.html#sec-classify1",
    "href": "rauman/Rauman5_Uebung_A.html#sec-classify1",
    "title": "Rauman 5: Übung A",
    "section": "Aufgabe 3: Distanzkriterien bewerten",
    "text": "Aufgabe 3: Distanzkriterien bewerten\nJetzt haben wir die Distanzen zu den relevanten Gebieten berechnet, nun müssen wir diese Distanzen bewerten. Dafür teilen wir die kontinuierlichen Distanzwerte in diskrete Kategorien ein. Wir verwenden für die Aufgabe folgende Einteilung:\nHierfür brauchen wir die Function classify(). Wie wir aus der Dokumentation der Funktion (mit ?classify) entnehmen können, gibt es verschiedene Wege wie wir einen Raster Reklassifizieren können (siehe Beschreibung für das Argument rcl). Eine sehr explizite Variante ist, dass wir für rcl eine Matrix mit 3 Spalten verwenden. Diese drei Spalte stellen from, to und becomes dar.\nWir könnten diese Tabelle in einem Spreadsheet-Programm schreiben und in R einlesen. Alternativ können wir sie auch “von Hand” in R erstellen. Um in R tabellarische Daten zu schreiben empfehlen wir die Funktion tribble(), welche eine sehr anschauliche Art bietet, Tabellen in R zu generieren.\n\n\n\n\n\nJetzt wo wir diese Matrix haben, können wir sie nutzen um den Kanton Schwyz hinsichtlich der Distanz zum Wald zu bewerten. Dafür verwenden wir die Funktion classify() mit dem Argument include.lowest = TRUE damit eine Distanz von 0m ebenfalls in 1 reklassifiziert wird.\n\n\n\n\n\nBewerte auf die gleiche Art die Distanz zu den Schutzgebieten. Wir nutzen die Schwellwerte, wie sie in der der nachstehenden Tabelle ersichtlich ist. Du kannst diese aber frei wählen.\n\n\n\n\n\nvon\nbis\nzu\n\n\n\n\n0\n250\n0.0\n\n\n250\n500\n0.2\n\n\n500\n750\n0.4\n\n\n750\n1000\n0.6\n\n\n1000\n1250\n0.8\n\n\n1250\nInf\n1.0"
  },
  {
    "objectID": "rauman/Rauman5_Uebung_A.html#sec-raster-overlay1",
    "href": "rauman/Rauman5_Uebung_A.html#sec-raster-overlay1",
    "title": "Rauman 5: Übung A",
    "section": "Aufgabe 4: Raster Overlay",
    "text": "Aufgabe 4: Raster Overlay\nWir haben zwar erst zwei der Kriterien berechnet, die wir für unsere Standortsuche berücksichtigen wollen, doch mit denen können wir schon mal eine erste, unvollständige Beurteilung wagen.\nWeil wir für alle Raster das gleiche Template verwendet haben, sind diese perfekt aneinander ausgerichtet. So können wir auf die denkbar einfachste Art die einezelnen Zellen miteinander verrechnen. Auf folgende Weise können wir beispielsweise den Mittlwert pro Zelle berechnen:"
  },
  {
    "objectID": "rauman/Rauman5_Uebung_A.html#sec-rauman5-mask",
    "href": "rauman/Rauman5_Uebung_A.html#sec-rauman5-mask",
    "title": "Rauman 5: Übung A",
    "section": "Aufgabe 5: Mask Raster",
    "text": "Aufgabe 5: Mask Raster\nIm letzten Plot fällt auf, dass wir auch eine Bewertung für Gebiete ausserhalb des Untersuchungsgebiets haben. Da wir für diese Gebiete keine Geodaten verwendet haben, sind die Resultate ausserhalb des Untersuchungsgebiets nicht gültig. Deshalb ist es sinnvoll, die Werte ausserhalb des Untersuchungsgebeits zu entfernen. Dafür verwenden wir die Funktion mask() zusammen mit dem Vektordatensatz kt_schwzy. Diese setzt alle Werte ausserhalb des Polygons zu NA:"
  },
  {
    "objectID": "rauman/Rauman5_Uebung_A.html#sec-raster-overlay1b",
    "href": "rauman/Rauman5_Uebung_A.html#sec-raster-overlay1b",
    "title": "Rauman 5: Übung A",
    "section": "Aufgabe 6: Weighted Raster Overlay",
    "text": "Aufgabe 6: Weighted Raster Overlay\nIm obigen Raster Overlay haben wir alle Kriterien gleich stark gewichtet. Wir können aber auch eine gewichtete Verschneidung durchführen: Wenn wir beispielsweise die Distanz zu den Strassen stärker gewichten wollen als die Distanz zu den Schutzgebieten. Auch das ist sehr einfach:\n\n\n\n\n\n\n\n\n\nGilgen, Kurt, und Alma Sartoris. 2010. „Empfehlung zur Planung von Windenergieanlagen: Die Anwendung von Raumplanungsinstrumenten und Kriterien zur Standortwahl“. Eidgenössisches Departement für Umwelt, Verkehr, Energie und Kommunikation UVEK.\n\n\nTegou, Leda-Ioanna, Heracles Polatidis, und Dias A. Haralambopoulos. 2010. „Environmental management framework for wind farm siting: Methodology and case study“. Journal of Environmental Management 91 (11): 2134–47. https://doi.org/10.1016/j.jenvman.2010.05.010."
  },
  {
    "objectID": "rauman/Rauman5_Uebung_B.html#aufgabe-1-rasterdaten-einlesen",
    "href": "rauman/Rauman5_Uebung_B.html#aufgabe-1-rasterdaten-einlesen",
    "title": "Rauman 5: Übung B",
    "section": "Aufgabe 1: Rasterdaten einlesen",
    "text": "Aufgabe 1: Rasterdaten einlesen\nZur Bewertung der Standorte hinsichtlich Windgeschwindigkeit steht uns der Datensatz wind250m.tif zur Verfügung (siehe Tabelle 50.1). Lade den Datensatz mit der Funktion rast() in R ein. Explorieren Sie den Datensatz visuell und versuchen Sie ein Verständnis für die Datensätze zu bekommen.\n\n\n\n\n\nDatensatz ‘wind250m’ zur Windgeschwindigkeit in m pro Sekunde"
  },
  {
    "objectID": "rauman/Rauman5_Uebung_B.html#aufgabe-2-wind-bewerten",
    "href": "rauman/Rauman5_Uebung_B.html#aufgabe-2-wind-bewerten",
    "title": "Rauman 5: Übung B",
    "section": "Aufgabe 2: Wind bewerten",
    "text": "Aufgabe 2: Wind bewerten\nDiese Rasterdaten müssen wir nicht weiter verarbeiten, wir können sie direkt bewerten. Führen Sie diese Bewertung aufgrund nachstehender Tabelle durch. Nutzen Sie dafür die Funktion classify() analog Kapitel 50.3. Sie können die Schwellwerte frei wählen, wir werden diejenigen verwenden, die in Tabelle 51.1 festgehalten sind."
  },
  {
    "objectID": "rauman/Rauman5_Uebung_B.html#aufgabe-3-slope-berechnen-und-bewerten",
    "href": "rauman/Rauman5_Uebung_B.html#aufgabe-3-slope-berechnen-und-bewerten",
    "title": "Rauman 5: Übung B",
    "section": "Aufgabe 3: Slope berechnen und bewerten",
    "text": "Aufgabe 3: Slope berechnen und bewerten\nFür die Berechnung und anschilessende Bewertung der Hangneigung brauchen wir ein Höhenmodell. Lade das Höhenmodell dhm250m.tif herunter (siehe Tabelle 50.1) und in R ein. Berechne anschliessend die Hangneigung mit der Funktion terrain() analog Kapitel 45.2 (beachten Sie die Einheit des Output!).\nBewerten Sie die Hangneigung danach gemäss Tabelle Tabelle 51.1.\n\n\n\n\n\nTabelle 51.1: Bewertungstabelle die Windgeschwindigkeit (m/s) und Hangneigung (Grad)\n\n\n\n\n\n\n\n\n\n\n\nWindgeschwindigkeit\n\n\nHangneigung\n\n\n\nvon\nbis\nzu\nvon\nbis\nzu\n\n\n\n\n0\n20\n0.0\n0\n4\n1.0\n\n\n20\n30\n0.2\n4\n8\n0.8\n\n\n30\n40\n0.4\n8\n12\n0.6\n\n\n40\n50\n0.6\n12\n16\n0.4\n\n\n50\n60\n0.8\n16\n20\n0.2\n\n\n60\nInf\n1.0\n20\n90\n0.0"
  },
  {
    "objectID": "rauman/Rauman5_Uebung_B.html#sec-raster-overlay2",
    "href": "rauman/Rauman5_Uebung_B.html#sec-raster-overlay2",
    "title": "Rauman 5: Übung B",
    "section": "Aufgabe 4: Raster Overlay",
    "text": "Aufgabe 4: Raster Overlay\nAnalog Kapitel 50.4 können wir an dieser Stelle eine vorläufige Beurteilung der Gebiete durchführen.\n\n\n\n\n\nAbbildung 51.1: Ungewichtetes Überlagern aller Kriterien mit Ausnahme der Ausschlussgebiete"
  },
  {
    "objectID": "rauman/Rauman5_Uebung_B.html#aufgabe-5-ausschlusskriterien",
    "href": "rauman/Rauman5_Uebung_B.html#aufgabe-5-ausschlusskriterien",
    "title": "Rauman 5: Übung B",
    "section": "Aufgabe 5: Ausschlusskriterien",
    "text": "Aufgabe 5: Ausschlusskriterien\nAls Auschlussgebiete gelten Flächen, wo keine Windkraftanlagen gebaut werden können. Dazu gehören bewohnte Flächen, nationale Schutzgebiete, Waldgebiete und Seen. (Zwar werden Schutzgebiete in unserer Analyse bereits berücksichtigt, aber nicht kategorisch vom Resultat ausgeschlossen.)\nUm diese Flächen aus von unserem Resultat auzuschliessen, können wir wieder die Funktion mask() verwenden (siehe Kapitel 50.5). Doch diesmal möchten wir nicht die Flächen ausserhalb der Polygone mit NA ersetzen, sondern die Flächen innerhalb der Polygone. Deshalb verwenden wir mask() mit dem Argument inverse = TRUE.\nVersuche mit mask(), den oben erwähnten Vektordatensätze sowie der Option inverse = TRUE die Ausschlussgebiete vom Raster-Overlay zu entfernen und visualisiere das Resultat."
  },
  {
    "objectID": "fallstudie_s/0_Vorbereitung.html",
    "href": "fallstudie_s/0_Vorbereitung.html",
    "title": "Vorbereitung",
    "section": "",
    "text": "Im Rahmen der Fallstudie werden wir einige R Packages brauchen. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Analog der Vorbereitungsübung in Prepro1 könnt ihr mit nachstehendem Code alle noch nicht installierten packages automatisch installieren.\n\nipak &lt;- function(pkg) {\n  new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) {\n    install.packages(new.pkg, dependencies = TRUE)\n  }\n}\n\npackages &lt;- c(\n  \"readr\", \"ggplot2\", \"lubridate\", \"ggpubr\", \"PerformanceAnalytics\",\n  \"MuMIn\", \"AICcmodavg\", \"fitdistrplus\", \"lme4\", \"blmeco\", \"sjPlot\", \"lattice\",\n  \"dplyr\", \"suncalc\"\n)\n\nipak(packages)\n\nZudem könnt ihr alle für die Fallstudie Profil S benötigten Daten unter folgendem Link herunterladen."
  },
  {
    "objectID": "fallstudie_s/1_Einführung.html#hintergrund",
    "href": "fallstudie_s/1_Einführung.html#hintergrund",
    "title": "Einführung",
    "section": "Hintergrund",
    "text": "Hintergrund\nDas rund 1100 ha grosse Naturschutzgebiet Wildnispark Zürich Sihlwald, welches im periurbanen Raum südlich von Zürich liegt, gilt seit dem 1. Januar 2010 als erster national anerkannter Naturerlebnispark. Er ist Teil des Wildnisparks Zürich und wichtiges Naherholungsgebiet für die Stadt Zürich.\nDas Schutzgebiet befindet sich im Spannungsfeld zwischen Schutz und Nutzen, denn einerseits sollen die Besuchenden den Wald erleben dürfen, andererseits soll sich dieser, in der Kernzone, frei entwickeln dürfen. Im Perimeter gelten darum verschiedene Regeln. So darf z. B. nur auf bestimmten Wegen mit den Velo gefahren werden.\n\nDas Management braucht solide, empirisch erhobene Daten zur Natur und zu den Besuchenden damit die Ziele von Nutzen und Schürzen erreicht werden können. Das Besuchermonitoring deckt den zweiten Teil dieser notwendigen Daten ab. Im Wildnispark Zürich sind dazu mehrere automatische Zählstellen in Betrieb. Die Zählstellen erfassen stundenweise die Besuchenden auf den Wegen. Einige Zählstellen erfassen richtungsgetrennt und / oder können zwischen verschiedenen Nutzergruppen wie Personen, die zu Fuss gehen, und Velofahrenden unterscheiden.\nIm Rahmen des Moduls Research Methods werden in dieser Fallstudie mehrere dieser automatischen Zählstellen genauer untersucht. Die Daten, welche im Besitz des WPZ sind, wurden bereits kalibriert. Das heisst, Zählungen während Wartungsarbeiten, bei Felhbetrieb o.ä. wurden bereits ausgeschlossen. Dies ist eine zeitintensive Arbeit und wir dürfen hier mit einem sauber aufbereiteten “Datenschatz” arbeiten.\nPerimeter des Wildnispark Zürichs mit den ungefähren Standorten von zwei ausgewählten automatischen Zählstellen.\n\n\n\n\nHinweis:\n\nDie Zähler 211 und 502 erfassen sowohl Fussgänger:innen als auch Fahrräder. Die Erfassung erfolgt richtungsgetrennt.\n\nDer Wildnispark wertet die Zahlen auf verschiedene Weise aus. So sind z. B. Jahresgänge (an welchen Monaten herrscht besonders viel Betrieb?) und die absoluten Nutzungszahlen bekannt. Vertiefte Auswertungen, die beispielsweise den Zusammenhang zwischen Besuchszahlen und dem Wetter untersuchen, werden nicht gemacht.\nUnsere Analysen in diesem Modul helfen dem Management, ein besseres Verständnis zum Verhalten der Besuchenden zu erlangen und bilden Grundlagen für Managemententscheide in der Praxis."
  },
  {
    "objectID": "fallstudie_s/1_Einführung.html#ziel",
    "href": "fallstudie_s/1_Einführung.html#ziel",
    "title": "Einführung",
    "section": "Ziel",
    "text": "Ziel\nIn dieser Fallstudie zeigen wir, welche Einflüsse die Covid19-Pandemie im Frühjahr 2020 auf die täglichen Besuchszahlen im Wildnispark Zürich hatte. Dabei setzen wir den Fokus auf die Dämmerung und die Nacht, den in diesen Zeiten sind Wildtiere (u.a. Rehe) besonders sensibel gegenüber Störungen. Wir untersuchen ebenfalls, wie sich die Besuchszhalen seit der Pandemie entwickelt haben und ob sie sich wieder dem Muster von vor der Pandemie annähern. Auch dabei ist die “dunkle” Tageszeit im Fokus.\nIn unsere Analysen ziehen wir auch weitere erklärende Faktoren wie Wetter, Wochentag, Kalenderwoche und Schulferien mit ein. Die statistischen Auswertungen erlauben und somit klare Rückschlüsse auf die Effekte der Faktoren und deren Stärke zu ziehen."
  },
  {
    "objectID": "fallstudie_s/1_Einführung.html#grundlagen",
    "href": "fallstudie_s/1_Einführung.html#grundlagen",
    "title": "Einführung",
    "section": "Grundlagen",
    "text": "Grundlagen\nZur Verfügung stehen:\n\ndie stündlichen Zählungen von Fussgänger:innen und Velos an den Zählstellen\nMeteodaten (Temperatur, Sonnenscheindauer, Niederschlagssumme)\nR-Skripte mit Hinweisen zur Auswertung"
  },
  {
    "objectID": "fallstudie_s/1_Einführung.html#aufbau-der-fallstudie",
    "href": "fallstudie_s/1_Einführung.html#aufbau-der-fallstudie",
    "title": "Einführung",
    "section": "Aufbau der Fallstudie",
    "text": "Aufbau der Fallstudie\nIn dieser Fallstudie erheben wir zuerst selbst Daten auf dem Grüntal, welche wir dann deskriptiv auswerten. Anschliessend beschäftigen wir uns mit den Daten aus dem Wildnispark Zürich, welche wir ebenfalls deskriptiv auswerten und auch sttistische Modelle damit programmieren. Diese Ergebnisse werden dann im Abschlussbericht dokumentiert."
  },
  {
    "objectID": "fallstudie_n/1_Vorbemerkung.html",
    "href": "fallstudie_n/1_Vorbemerkung.html",
    "title": "BiEc1_N Vorbemerkung",
    "section": "",
    "text": "Aktuell dient diese Plattform für die BiEc Fallstudie - Profil N einzig der Bereitstellung von Aufgaben die von euch im Rahmen dieses Fallstudienprojekts erarbeitet werden sollen. Die Aufgaben werden in den meisten Fällen mit Code-Beispielen erläutert oder benötigten Code-snippets resp. Funktionen werden mitgeliefert. Im Laufe des Semesters werden hier ausserdem häppchenweise (mögliche) Lösungen zu den Aufgaben aufgeschaltet. Alles grundlegende Material und alle Unterlagen zu den theoretischen Inputs sind weiterhin und ausschliesslich im Moodlekurs Research Methods - Fallstudie BiEc zu finden. Die für die Aufgaben benötigten Datengrundlagen sind ebenfalls im entsprechenden Abschnitt auf Moodle zu finden. Frohes Schaffen!\n\nIm Rahmen der Fallstudie werden wir einige R Packages brauchen. Wir empfehlen, diese bereits vor der ersten Lektion zu installieren. Analog der Vorbereitungsübung in Prepro1 könnt ihr mit nachstehendem Code alle noch nicht installierten packages automatisch installieren.\n\nipak &lt;- function(pkg) {\n  new.pkg &lt;- pkg[!(pkg %in% installed.packages()[, \"Package\"])]\n  if (length(new.pkg)) {\n    install.packages(new.pkg, dependencies = TRUE)\n  }\n}\n\npackages &lt;- c(\n  \"adehabitatHR\", \"bbmle\", \"car\", \"cowplot\", \"DHARMa\", \"dplyr\",\n  \"ggeffects\", \"ggplot2\", \"ggspatial\", \"glmmTMB\", \"gstat\", \"kableExtra\", \"lme4\",\n  \"MASS\", \"MuMIn\", \"pastecs\", \"performance\", \"PerformanceAnalytics\", \"psych\",\n  \"readr\", \"rms\", \"ROCR\", \"sf\", \"sjPlot\", \"sjstats\", \"terra\"\n)\n\nipak(packages)"
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#projektaufbau-rstudio-projekte",
    "href": "fallstudie_n/2_Datenverarbeitung.html#projektaufbau-rstudio-projekte",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Projektaufbau RStudio-Projekte",
    "text": "Projektaufbau RStudio-Projekte\nVor den eigentlichen Auswertungen müssen einige vorbereitende Arbeiten unternommen werden. Die Zeit, die man hier investiert, wird in der späteren Projektphase um ein vielfaches eingespart. Im Skript soll die Ordnerstruktur des Projekts genannt werden, damit der Arbeitsvorgang auf verschiedenen Rechnern reproduzierbar ist.\nArbeitet mit Projekten, da diese sehr einfach ausgetauscht und somit auch reproduziert werden önnen; es gibt keine absoluten Arbeitspfade sondern nur relative. Der Datenimport (und auch der Export) kann mithilfe dieser relativen Pfaden stark vereinfacht werden. Projekte helfen alles am richtigen Ort zu behalten. (mehr zur Arbeit mit Projekten: Link)"
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#aufbau-von-r-skripten",
    "href": "fallstudie_n/2_Datenverarbeitung.html#aufbau-von-r-skripten",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Aufbau von R-Skripten",
    "text": "Aufbau von R-Skripten\nIm Kopf des Skripts zuerst immer den Titel des Projekts sowie die Autor:innen des Skripts nennen. Hier soll auch die Herkunft der Daten ersichtlich sein und falls externe Daten verwendet werden, sollte geklärt werden, wer die Datenherrschaft hat (Rehdaten: Forschungsgruppe WILMA).\n\n# .##################################################################################\n# Daten(vor)verarbeitung Fallstudie WPZ  ####\n# Modul Research Methods, HS23. Autor/in ####\n# .##################################################################################\n\nBeschreibt zudem folgendes:\n\nOrdnerstruktur; ich verwende hier den Projektordner mit den Unterordnern:\n\nSkripts\nData\nResults\nPlots\n\nVerwendete Daten\n\nEin Skript soll in R eigentlich immer nach dem selbem Schema aufgebaut sein. Dieses Schema beinhaltet (nach dem bereits erwähnten Kopf des Skripts) 4 Kapitel:\n\nDatenimport\nDatenvorverarbeitung\nAnalyse\nVisualisierung\n\nBereitet euer Skript also nach dieser Struktur vor. Nutzt für den Text, welcher nicht Code ist, vor dem Text das Symbol #. Wenn ihr den Text als Titel definieren wollt, der die grobe Struktur des Skripts absteckt, baut in wie in folgendem Beispiel auf:\n\n# .###################################################################################\n# METADATA ####\n# .###################################################################################\n# Datenherkunft ####\n# ...\n\n# .###################################################################################\n# 1. DATENIMPORT ####\n# .###################################################################################"
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#libraries-laden",
    "href": "fallstudie_n/2_Datenverarbeitung.html#libraries-laden",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Libraries laden",
    "text": "Libraries laden\n\nlibrary(\"readr\")\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")"
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#daten-laden",
    "href": "fallstudie_n/2_Datenverarbeitung.html#daten-laden",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Daten laden",
    "text": "Daten laden\nHerunterladen der Daten der Feldaufnahmen von Moodle (Aufgabe3_Feldaufnahmen_alle_Gruppen.zip), Einlesen, Sichtung der Datensätze und der Datentypen."
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-1",
    "href": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-1",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Aufgabe 1",
    "text": "Aufgabe 1\n\n1.1 Einfügen zusätzliche Spalte pro Datensatz mit der Gruppenzugehörigkeit (Team1-6)\n1.2 Spaltenumbenennung damit die Bezeichungen in allen Datensätzen gleich sind und der Gesamtdatensatz zusammengefügt werden kann\n\n→ Befehle mutate und rename, mit pipes (alt: %&gt;%, neu: |&gt;) in einem Schritt möglich"
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-2",
    "href": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-2",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Aufgabe 2",
    "text": "Aufgabe 2\nZusammenführen der Teildatensätze zu einem Datensatz"
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-3",
    "href": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-3",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Aufgabe 3",
    "text": "Aufgabe 3\nVerbinden (join) des Datensatzes der Felderhebungen mit dem Datensatz der Rehe.\nZiel: ein Datensatz mit allen Kreisen der Felderhebung, angereichert mit den Umweltvariablen Understory und Overstory aus den LIDAR-Daten (DG_us, DG_os) aus dem Rehdatensatz. –&gt; Welche Art von join? Welche Spalten zum Verbinden (by = ?) der Datensätze"
  },
  {
    "objectID": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-4",
    "href": "fallstudie_n/2_Datenverarbeitung.html#aufgabe-4",
    "title": "BiEc2_N Daten(vor)verarbeitung",
    "section": "Aufgabe 4",
    "text": "Aufgabe 4\nScatterplot der korrespondondierenden Umweltvariablen aus den Felderhebungen gegen die Umweltvariablen aus den LIDAR-Daten erstellen (zusätzlich Einfärben der Gruppen und Regressionslinie darüberlegen)."
  },
  {
    "objectID": "References.html",
    "href": "References.html",
    "title": "Literaturverzeichnis",
    "section": "",
    "text": "Bochud, Murielle, Angéline Chatelan, Juan-Manuel Blanco, and Sigrid\nMaria Beer-Borst. 2017. “Anthropometric Characteristics and\nIndicators of Eating and Physical Activity Behaviors in the Swiss Adult\nPopulation: Results from menuCH 2014-2015.”\n\n\nBorcard, Daniel, François Gillet, Pierre Legendre, et al. 2011.\nNumerical Ecology with r. Vol. 2. Springer.\n\n\nGilgen, Kurt, and Alma Sartoris. 2010. “Empfehlung Zur Planung von\nWindenergieanlagen: Die Anwendung von Raumplanungsinstrumenten Und\nKriterien Zur Standortwahl.” Eidgenössisches Departement für\nUmwelt, Verkehr, Energie und Kommunikation UVEK.\n\n\nKovic, Marko. 2014. “Je Weniger Ausländer, Desto Mehr Ja-Stimmen?\nWirklich?” Tagesanzeiger Datenblog. https://blog.tagesanzeiger.ch/datenblog/index.php/668/je-weniger-auslaender-desto-mehr-ja-stimmen-wirklich.\n\n\nScherler, Patrick. 2020. “Drivers of Departure and Prospecting in\nDispersing Juvenile Red Kites (Milvus Milvus).” PhD thesis,\nUniversity of Zurich.\n\n\nTegou, Leda-Ioanna, Heracles Polatidis, and Dias A. Haralambopoulos.\n2010. “Environmental Management Framework for Wind Farm Siting:\nMethodology and Case Study.” Journal of Environmental\nManagement 91 (11): 2134–47. https://doi.org/10.1016/j.jenvman.2010.05.010.\n\n\nWickham, Hadley, and Garrett Grolemund. 2017. R for Data\nScience. O’Reilly. https://ebookcentral.proquest.com/lib/zhaw/detail.action?docID=4770093.\n\n\nWildi, Otto. 2017. Data Analysis in Vegetation Ecology. Cabi."
  }
]